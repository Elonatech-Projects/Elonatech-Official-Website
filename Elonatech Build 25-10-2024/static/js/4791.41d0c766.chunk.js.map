{"version":3,"file":"static/js/4791.41d0c766.chunk.js","mappings":"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","sources":["components/Pagination/Pagination.jsx","pages/sales/computer/computerFilter.jsx","pages/sales/computer/computer.jsx"],"sourcesContent":["import { Link, useSearchParams } from \"react-router-dom\";\r\nimport './pagination.css';\r\n\r\nconst Pagination = ({ totalPosts, itemsPerPage, maxPageNumberLimit, minPageNumberLimit, currentPage, paginate, handleNextbtn, handlePrevbtn }) => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const pages = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / itemsPerPage); i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  const productTop = () => {\r\n    window.scrollTo({top: 0, left: 0, behavior: \"smooth\"})\r\n  }\r\n\r\n  const handlePageClick = (number) => {\r\n    paginate(number);\r\n    setSearchParams({ page: number.toString() });\r\n    productTop();\r\n  }\r\n\r\n  const renderPageNumbers = pages.map((number) => {\r\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n      return (\r\n        <li key={number} className={`page-item ${currentPage === number ? \"active\" : \"\"}`}>\r\n          <a onClick={() => handlePageClick(number)} className=\"page-link v-cursor\">{number}</a>  \r\n        </li>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  let pageIncrementBtn = null;\r\n  if (pages.length > maxPageNumberLimit) {\r\n    pageIncrementBtn = <li className=\"page-link v-cursor\" onClick={handleNextbtn}> &hellip; </li>;\r\n  }\r\n\r\n  let pageDecrementBtn = null;\r\n  if (minPageNumberLimit >= 1) {\r\n    pageDecrementBtn = <li className=\"page-link v-cursor\" onClick={handlePrevbtn}> &hellip; </li>;\r\n  }\r\n\r\n  const handlePrevClick = () => {\r\n    if (currentPage > 1) {\r\n      handlePrevbtn();\r\n      setSearchParams({ page: (currentPage - 1).toString() });\r\n      productTop();\r\n    }\r\n  }\r\n\r\n  const handleNextClick = () => {\r\n    if (currentPage < pages.length) {\r\n      handleNextbtn();\r\n      setSearchParams({ page: (currentPage + 1).toString() });\r\n      productTop();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"pagination justify-content-center mb-5\">\r\n        <li className={`page-item ${currentPage === 1 ? \"disabled\" : \"\"}`}>\r\n          <a className=\"page-link\" onClick={handlePrevClick}>Prev</a>\r\n        </li>\r\n        {pageDecrementBtn}\r\n        {renderPageNumbers}\r\n        {pageIncrementBtn}\r\n        <li className={`page-item ${currentPage === pages.length ? \"disabled\" : \"\"}`}>\r\n          <a className=\"page-link\" onClick={handleNextClick}>Next</a>\r\n        </li>\r\n      </ul>     \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Pagination;","import \"./computerFilter.css\"; \r\nimport React, { useState, useEffect } from \"react\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { BASEURL } from \"../../../BaseURL/BaseURL\";\r\n\r\nconst ComputerFilter = ({ setFilteredProducts }) => {\r\n  const [filters, setFilters] = useState({\r\n    ram: \"\",\r\n    brand: \"\",\r\n    drive: \"\",\r\n    price: [0, 1000000]\r\n  });\r\n  const [noResultsMessage, setNoResultsMessage] = useState(\"\");\r\n  const [priceRange, setPriceRange] = useState([0, 1000000]); \r\n  const [defaultPriceRange, setDefaultPriceRange] = useState([0, 1000000]); \r\n  const [brands, setBrands] = useState([]);\r\n  const [rams, setRams] = useState([]); \r\n  const [drives, setDrives] = useState([]); \r\n\r\n  // Normalize RAM values\r\n  const normalizeRam = (ramString) => {\r\n    if (!ramString) return null;\r\n    \r\n    // Convert to uppercase and remove extra spaces\r\n    const ram = ramString.toUpperCase().trim();\r\n    \r\n    // Extract the number and standardize format\r\n    const match = ram.match(/(\\d+)\\s*(?:GB|G)?/i);\r\n    if (match) {\r\n      const number = match[1];\r\n      return `${number}GB RAM`;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Normalize Drive values\r\n  const normalizeDrive = (driveString) => {\r\n    if (!driveString) return null;\r\n    \r\n    // Convert to uppercase and remove extra spaces\r\n    const drive = driveString.toUpperCase().trim();\r\n    \r\n    // Handle special cases first\r\n    if (drive.includes('PCIE') || drive.includes('RAM,')) {\r\n      return null;\r\n    }\r\n    \r\n    // Extract capacity and type\r\n    const matchSSD = drive.match(/(\\d+)\\s*(?:GB|G|TB|T)?\\s*(?:SSD)?/i);\r\n    const matchHDD = drive.match(/(\\d+)\\s*(?:GB|G|TB|T)?\\s*(?:HDD)?/i);\r\n    \r\n    if (matchSSD || matchHDD) {\r\n      const match = matchSSD || matchHDD;\r\n      const number = parseInt(match[1]);\r\n      const isTerabyte = drive.includes('TB') || drive.includes('T');\r\n      const capacityGB = isTerabyte ? number * 1024 : number;\r\n      \r\n      // Validate capacity ranges\r\n      // SSDs: typically 128GB to 4TB (4096GB)\r\n      // HDDs: typically 500GB to 18TB (18432GB)\r\n      const type = drive.includes('HDD') ? 'HDD' : 'SSD';\r\n      \r\n      if (type === 'SSD' && (capacityGB < 128 || capacityGB > 4096)) {\r\n        return null;\r\n      }\r\n      if (type === 'HDD' && (capacityGB < 500 || capacityGB > 18432)) {\r\n        return null;\r\n      }\r\n      \r\n      // Format the output\r\n      if (capacityGB >= 1024) {\r\n        return `${(capacityGB / 1024)}TB ${type}`;\r\n      }\r\n      return `${capacityGB}GB ${type}`;\r\n    }\r\n    \r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(`${BASEURL}/api/v1/product/filter?category=Computer`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.minPrice !== undefined && data.maxPrice !== undefined) {\r\n          const fetchedMinPrice = data.minPrice;\r\n          const fetchedMaxPrice = data.maxPrice;\r\n          setDefaultPriceRange([fetchedMinPrice, fetchedMaxPrice]);\r\n          setPriceRange([fetchedMinPrice, fetchedMaxPrice]);\r\n          setFilters((prevFilters) => ({\r\n            ...prevFilters,\r\n            price: [fetchedMinPrice, fetchedMaxPrice] \r\n          }));\r\n        }\r\n\r\n        // Extract and normalize unique brands\r\n        const uniqueBrands = Array.from(new Set(data.data\r\n          .map(product => product.brand.toUpperCase().trim())))\r\n          .sort((a, b) => a.localeCompare(b, undefined, { sensitivity: 'base' }));\r\n        setBrands(uniqueBrands);\r\n\r\n        // Extract and normalize unique RAMs\r\n        const uniqueRams = Array.from(new Set(data.data\r\n          .filter(product => product.computerProperty && \r\n                           product.computerProperty[0] && \r\n                           product.computerProperty[0].ram)\r\n          .map(product => normalizeRam(product.computerProperty[0].ram))\r\n          .filter(ram => ram !== null))) // Remove null values\r\n          .sort((a, b) => {\r\n            // Sort by RAM size numerically\r\n            const aSize = parseInt(a.match(/\\d+/)[0]);\r\n            const bSize = parseInt(b.match(/\\d+/)[0]);\r\n            return aSize - bSize;\r\n          });\r\n        setRams(uniqueRams);\r\n\r\n        // Extract and normalize unique drives\r\n        const uniqueDrives = Array.from(new Set(data.data\r\n          .filter(product => product.computerProperty && \r\n                           product.computerProperty[0] && \r\n                           product.computerProperty[0].drive)\r\n          .map(product => normalizeDrive(product.computerProperty[0].drive))\r\n          .filter(drive => drive !== null))) // Remove null values\r\n          .sort((a, b) => {\r\n            // Sort by drive size and type\r\n            const aMatch = a.match(/(\\d+)(TB|GB)/);\r\n            const bMatch = b.match(/(\\d+)(TB|GB)/);\r\n            if (aMatch && bMatch) {\r\n              const aSize = parseInt(aMatch[1]) * (aMatch[2] === 'TB' ? 1000 : 1);\r\n              const bSize = parseInt(bMatch[1]) * (bMatch[2] === 'TB' ? 1000 : 1);\r\n              return aSize - bSize;\r\n            }\r\n            return a.localeCompare(b);\r\n          });\r\n        setDrives(uniqueDrives);\r\n\r\n        setFilteredProducts(data.data); \r\n      })\r\n      .catch((error) => console.error(\"Error fetching initial data:\", error));\r\n  }, [setFilteredProducts]);\r\n\r\n  const resetPriceRange = () => {\r\n    setPriceRange(defaultPriceRange);\r\n    const updatedFilters = {\r\n      ...filters,\r\n      price: defaultPriceRange\r\n    };\r\n    setFilters(updatedFilters);\r\n    applyFilters(updatedFilters);\r\n  };\r\n\r\n  const handleCheckboxChange = (event) => {\r\n    const { name, value, checked } = event.target;\r\n    setFilters((prevFilters) => {\r\n      const updatedFilters = {\r\n        ...prevFilters,\r\n        [name]: checked ? value : \"\"\r\n      };\r\n      applyFilters(updatedFilters);\r\n      return updatedFilters;\r\n    });\r\n  };\r\n\r\n  const handlePriceRangeChange = (event, newValue) => {\r\n    setPriceRange(newValue);\r\n  };\r\n\r\n  const handlePriceChange = (event, newValue) => {\r\n    setFilters((prevFilters) => ({\r\n      ...prevFilters,\r\n      price: newValue\r\n    }));\r\n  };\r\n\r\n  const handleApplyClick = () => {\r\n    applyFilters(filters);\r\n  };\r\n\r\n  const applyFilters = (updatedFilters) => {\r\n    let queryParams = [];\r\n    if (updatedFilters.ram) {\r\n      queryParams.push(`ram=${updatedFilters.ram.replace(/\\D/g, \"\")}`);\r\n    }\r\n    if (updatedFilters.brand) {\r\n      queryParams.push(\r\n        `brand=${updatedFilters.brand.replace(/\\s+/g, \"\").toLowerCase()}`\r\n      );\r\n    }\r\n    if (updatedFilters.drive) {\r\n      queryParams.push(`drive=${updatedFilters.drive.replace(/\\D/g, \"\")}`);\r\n    }\r\n    if (\r\n      updatedFilters.price[0] !== 0 || \r\n      updatedFilters.price[1] !== 1000000 \r\n    ) {\r\n      queryParams.push(`minPrice=${updatedFilters.price[0]}`);\r\n      queryParams.push(`maxPrice=${updatedFilters.price[1]}`);\r\n    }\r\n    const queryString = queryParams.length > 0 ? queryParams.join(\"&\") : \"\";\r\n    fetch(`${BASEURL}/api/v1/product/filter?category=Computer&${queryString}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setFilteredProducts(data.data);\r\n      })\r\n      .catch((error) => console.error(\"Error:\", error));\r\n  };\r\n\r\n  const formatPrice = (price) => {\r\n    return price.toLocaleString();\r\n  };\r\n\r\n  const handleInputPriceChange = (event, index) => {\r\n    const value = event.target.value.replace(/[^0-9]/g, \"\");\r\n    const newPrice = [...filters.price];\r\n    newPrice[index] = parseFloat(value) || 0;\r\n    setFilters((prevFilters) => ({\r\n      ...prevFilters,\r\n      price: newPrice\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {noResultsMessage && (\r\n        <div className=\"no-results-message\">\r\n          <p>{noResultsMessage}</p>\r\n          <p>\r\n            Go back to the <a href=\"/computers\">Computer page</a> to explore\r\n            more amazing products.\r\n          </p>\r\n        </div>\r\n      )}\r\n      <form>\r\n\r\n        {/* Brand Filter */}\r\n        <div style={{ boxShadow: \"0px 1px 0px rgba(0, 0, 0, 0.1)\" }} className=\"mb-3\">\r\n          <label className=\"form-label\">Brand:</label>\r\n          <div style={{ maxHeight: \"120px\", overflowY: \"scroll\" }}>\r\n            {brands.length > 0 ? (\r\n              brands.map((brand) => (\r\n                <div className=\"form-check\" key={brand}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"brand\"\r\n                    value={brand}\r\n                    onChange={handleCheckboxChange}\r\n                    checked={filters.brand === brand}\r\n                    className=\"form-check-input\"\r\n                  />\r\n                  <label className=\"form-check-label\">{brand}</label>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p>No brands available</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* RAM Filter */}\r\n        <div\r\n          style={{ boxShadow: \"0px 1px 0px rgba(0, 0, 0, 0.1)\" }}\r\n          className=\"mb-3\"\r\n        >\r\n          <label className=\"form-label\">RAM:</label>\r\n          <div style={{ maxHeight: \"120px\", overflowY: \"scroll\" }}>\r\n            {rams.length > 0 ? (\r\n              rams.map((ram) => (\r\n                <div className=\"form-check\" key={ram}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"ram\"\r\n                    value={ram}\r\n                    onChange={handleCheckboxChange}\r\n                    checked={filters.ram === ram}\r\n                    className=\"form-check-input\"\r\n                  />\r\n                  <label className=\"form-check-label\">{ram}</label>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p>No RAM options available</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Drive Filter */}\r\n        <div\r\n          style={{ boxShadow: \"0px 1px 0px rgba(0, 0, 0, 0.1)\" }}\r\n          className=\"mb-3\"\r\n        >\r\n          <label className=\"form-label\">Drive:</label>\r\n          <div style={{ maxHeight: \"120px\", overflowY: \"scroll\" }}>\r\n            {drives.length > 0 ? (\r\n              drives.map((drive) => (\r\n                <div className=\"form-check\" key={drive}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"drive\"\r\n                    value={drive}\r\n                    onChange={handleCheckboxChange}\r\n                    checked={filters.drive === drive}\r\n                    className=\"form-check-input\"\r\n                  />\r\n                  <label className=\"form-check-label\">{drive}</label>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p>No drive options available</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Price Filter */}\r\n        <div className=\"price-filter\">\r\n          <label className=\"form-label\">Filter by Price(₦)</label>\r\n          <Slider\r\n            className=\"custom-slider\"\r\n            value={filters.price}\r\n            onChange={handlePriceChange}\r\n            min={priceRange[0]}\r\n            max={priceRange[1]}\r\n            step={5}\r\n          />\r\n          <div className=\"price-range-values\">\r\n            <input\r\n              style={{ width: \"50%\", borderRadius: \"5px\" }}\r\n              type=\"text\"\r\n              value={formatPrice(filters.price[0])}\r\n              onChange={(e) => handleInputPriceChange(e, 0)}\r\n              className=\"price-input\"\r\n            />\r\n            <span className=\"separator\">-</span>\r\n            <input\r\n              style={{ width: \"50%\", borderRadius: \"5px\" }}\r\n              type=\"text\"\r\n              value={formatPrice(filters.price[1])}\r\n              onChange={(e) => handleInputPriceChange(e, 1)}\r\n              className=\"price-input\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"expand\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleApplyClick}\r\n            className=\"apply-btn\"\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            Apply Price Range\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={resetPriceRange}\r\n            className=\"reset-btn\"\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            Reset Price Range\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComputerFilter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useSearchParams } from \"react-router-dom\";\r\nimport Pagination from \"./../../../components/Pagination/Pagination\";\r\nimport { BASEURL } from \"../../../BaseURL/BaseURL\";\r\nimport Loading from \"../../../components/Loading/Loading\";\r\nimport axios from \"axios\";\r\nimport {\r\n  LazyLoadImage,\r\n  trackWindowScroll\r\n} from \"react-lazy-load-image-component\";\r\nimport { useCart } from \"react-use-cart\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport \"rc-slider/assets/index.css\";\r\nimport ComputerFilter from \"./computerFilter\";\r\nimport \"./computer.css\"\r\n\r\nconst Computer = () => {\r\n  const [data, setData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(12);\r\n  const [pageNumberLimit, setpageNumberLimit] = useState(4);\r\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(4);\r\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [activeItem, setActiveItem] = useState(\"Item 2\");\r\n  const [noResultsMessage, setNoResultsMessage] = useState(false);\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const handleClick = (item) => {\r\n    setActiveItem(item);\r\n  };\r\n\r\n  const formatPrice = (price) => {\r\n    return price.toLocaleString();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await axios.get(`${BASEURL}/api/v1/product/`);\r\n        const filtered = response.data.getAllProducts.filter(user => user.category === 'Computer');\r\n        setData(filtered.reverse());\r\n        setRecords(filtered);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (filteredProducts.length > 0) {\r\n      setRecords(filteredProducts);\r\n      setNoResultsMessage(false);\r\n    } else if (filteredProducts.length === 0 && isLoading) {\r\n      setRecords([]);\r\n      setNoResultsMessage(true);\r\n    } else {\r\n      setRecords(data);\r\n      setNoResultsMessage(false);\r\n    }\r\n  }, [filteredProducts, isLoading, data]);\r\n\r\n  useEffect(() => {\r\n    const page = parseInt(searchParams.get('page') || '1', 10);\r\n    setCurrentPage(page);\r\n  }, [searchParams]);\r\n\r\n  const Filter = (event) => {\r\n    const searchTerm = event.target.value.toLowerCase();\r\n\r\n    if (searchTerm === \"\") {\r\n      setFilteredProducts([]);\r\n      setNoResultsMessage(false);\r\n    } else {\r\n      const filtered = data.filter((product) =>\r\n        product.name.toLowerCase().includes(searchTerm)\r\n      );\r\n\r\n      setFilteredProducts(filtered);\r\n\r\n      if (filtered.length === 0) {\r\n        setNoResultsMessage(true);\r\n      } else {\r\n        setNoResultsMessage(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n    setSearchParams({ page: pageNumber.toString() });\r\n  };\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentPosts = records.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const handleNextbtn = () => {\r\n    const nextPage = currentPage + 1;\r\n    setCurrentPage(nextPage);\r\n    setSearchParams({ page: nextPage.toString() });\r\n\r\n    if (nextPage > maxPageNumberLimit) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n    }\r\n  };\r\n\r\n  const handlePrevbtn = () => {\r\n    const prevPage = currentPage - 1;\r\n    setCurrentPage(prevPage);\r\n    setSearchParams({ page: prevPage.toString() });\r\n\r\n    if ((prevPage - 1) % pageNumberLimit == 0) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n    }\r\n  };\r\n  const displayedProducts =\r\n    currentPosts.length > 0 ? currentPosts : records.slice(0, itemsPerPage);\r\n\r\n  const { addItem } = useCart();\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Computers - Tech Solutions, Digital</title>\r\n        <meta name=\"robots\" content=\"index,follow\" />\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Shop through a wide selection of computers and laptops at Elonatech.\"\r\n        />\r\n        <link rel=\"canonical\" href=\"/computers\" />\r\n        <meta\r\n          name=\"keywords\"\r\n          content=\"computers, laptops, Elonatech\"\r\n        />\r\n      </Helmet>\r\n\r\n      <div class=\"container-fluid computers-section\">\r\n        <div class=\"text-content\">\r\n          <h2>Computers</h2>\r\n          <h5>Have what you need to run your business with maximum efficiency and reliability</h5>\r\n          <p class=\"lead\">Properly used, a computer can help you become more organized, work more efficiently, and accomplish more tasks.</p>\r\n        </div>\r\n      </div>\r\n\r\n      <main className=\"container-fluid custom-container\">\r\n        <div className=\"row g-0\">\r\n          <div className=\"col-md-9\">\r\n            <section className=\"ftco-section\" id=\"skills-section\">\r\n              <div className=\"container custom-container\">\r\n                <div className=\"row justify-content-center pt-3 pb-4\">\r\n                  <div className=\"col-md-8 pt-4\">\r\n                    <h6>\r\n                      SHOWING <span className=\"text-danger\">{currentPage}</span>{\" \"}\r\n                      –{\" \"}\r\n                      <span className=\"text-danger\">\r\n                        {currentPage * itemsPerPage}\r\n                      </span>{\" \"}\r\n                      OF <span className=\"text-danger\">{data.length}</span>{\" \"}\r\n                      RESULTS\r\n                    </h6>\r\n                  </div>\r\n                  <div className=\"col-md-4 pt-3\">\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"search\"\r\n                      onChange={Filter}\r\n                      placeholder=\"Search\"\r\n                      aria-label=\"Search\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row g-1 progress-circle\">\r\n                  {isLoading ? (\r\n                    <Loading />\r\n                  ) : displayedProducts.length > 0 ? (\r\n                    displayedProducts.map((product) => {\r\n                      return (\r\n                        <div className=\"col-lg-3 mb-4\" key={product.id}>\r\n                          <div className=\"mx-1 shadow-lg p-3 bg-body rounded showbutton\">\r\n                            <Link \r\n                              className='text-decoration-none text-dark' \r\n                              to={`/product/${product._id}?fromPage=${currentPage}`}\r\n                            >\r\n                              <div className=\"text-center take\">\r\n                                <LazyLoadImage\r\n                                  src={product.images[0]?.url}\r\n                                  placeholderSrc=\"https://res.cloudinary.com/elonatech/image/upload/v1710241889/loaderImage/blurred_o4delz.avif\"\r\n                                  className=\"lazyload\"\r\n                                  width=\"130\"\r\n                                  height=\"130\"\r\n                                  alt=\"\"\r\n                                />\r\n                              </div>\r\n                              <h5 className=\"fw-normal pt-3 product-name\">\r\n                                {product.name.slice(0, 23)}...\r\n                              </h5>\r\n                              <p className=\"lead fs-6\">{product.category}</p>\r\n                              \r\n                              {/* Star Rating */}\r\n                              <div className=\"stars\" style={{ color: \"black\", marginBottom: '10px' }}>\r\n                                {[...Array(5)].map((star, index) => {\r\n                                  return (\r\n                                    <i\r\n                                      key={index}\r\n                                      className={\r\n                                        index < Math.floor(5)\r\n                                          ? \"bi bi-star-fill\"\r\n                                          : \"bi bi-star\"\r\n                                      }\r\n                                      style={{ color: \"#f4be1d\" }}\r\n                                    ></i>\r\n                                  );\r\n                                })}\r\n                              </div>\r\n                              \r\n                              <div className=\"d-flex justify-content-between\">\r\n                                <p className='mt-2 px-1 text-danger'>\r\n                                  <strong>₦ {Number(product.price).toLocaleString()}.00</strong>\r\n                                </p>\r\n                                <i className=\"bi bi-cart p-1\" style={{ fontSize: \"20px\", cursor: \"pointer\" }}></i>\r\n                              </div>\r\n                            </Link>\r\n                            <div className=\"d-grid gap-2\" key={product.id}>\r\n                              <div className=\"btn btn-outline add-to-cart\" onClick={() => addItem(product)}>\r\n                                <h6 className='text-danger'>ADD TO CART</h6>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <h4>No products match your search criteria.</h4>\r\n                  )}\r\n                </div>\r\n                \r\n                <div className=\"mt-5\">\r\n                  <Pagination\r\n                    totalPosts={records.length}\r\n                    itemsPerPage={itemsPerPage}\r\n                    maxPageNumberLimit={maxPageNumberLimit}\r\n                    minPageNumberLimit={minPageNumberLimit}\r\n                    currentPage={currentPage}\r\n                    id\r\n                    handleNextbtn={handleNextbtn}\r\n                    handlePrevbtn={handlePrevbtn}\r\n                    paginate={paginate}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <div\r\n              className=\"position-sticky\"\r\n              style={{ top: \"2rem\", marginTop: \"20px\" }}\r\n            >\r\n              <div\r\n                style={{\r\n                  marginTop: \"50px\",\r\n                  paddingTop: \"30px\",\r\n                  paddingBottom: \"30px\",\r\n                  marginLeft: \"15px\"\r\n                }}\r\n              >\r\n                <form\r\n                  style={{\r\n                    paddingTop: \"20px\",\r\n                    paddingBottom: \"20px\"\r\n                  }}\r\n                  className=\"d-flex\"\r\n                ></form>\r\n                <h4\r\n                  style={{ marginTop: \"-8px\", marginBottom: \"16px\" }}\r\n                  className=\"fw-bold\"\r\n                >\r\n                  Browse Categories\r\n                </h4>\r\n                <ul className=\"list-unstyled\">\r\n                  <li>\r\n                    <Link\r\n                      to={\"/shop\"}\r\n                      className=\"text-dark\"\r\n                      style={{ textDecoration: \"none\" }}\r\n                      onMouseEnter={(e) =>\r\n                        (e.currentTarget.style.textDecoration = \"underline\")\r\n                      }\r\n                      onMouseLeave={(e) =>\r\n                        (e.currentTarget.style.textDecoration = \"none\")\r\n                      }\r\n                    >\r\n                      All Products\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      to={\"/computers\"}\r\n                      className={`item ${activeItem === \"Item 2\" ? \"active-category\" : \"\"}`}\r\n                      onClick={() => handleClick(\"Item 2\")}\r\n                    >\r\n                      Computers\r\n                    </Link>\r\n                  </li>\r\n\r\n                  <li>\r\n                    <Link\r\n                      to={\"/office-equipment\"}\r\n                      className=\"text-dark\"\r\n                      style={{ textDecoration: \"none\" }}\r\n                      onMouseEnter={(e) =>\r\n                        (e.currentTarget.style.textDecoration = \"underline\")\r\n                      }\r\n                      onMouseLeave={(e) =>\r\n                        (e.currentTarget.style.textDecoration = \"none\")\r\n                      }\r\n                    >\r\n                      Office Equipment\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      to={\"/pos-system\"}\r\n                      className=\"text-dark\"\r\n                      style={{ textDecoration: \"none\" }}\r\n                      onMouseEnter={(e) =>\r\n                        (e.currentTarget.style.textDecoration = \"underline\")\r\n                      }\r\n                      onMouseLeave={(e) =>\r\n                        (e.currentTarget.style.textDecoration = \"none\")\r\n                      }\r\n                    >\r\n                      POS System\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      to={\"/printers\"}\r\n                      className=\"text-dark\"\r\n                      style={{ textDecoration: \"none\" }}\r\n                      onMouseEnter={(e) =>\r\n                        (e.currentTarget.style.textDecoration = \"underline\")\r\n                      }\r\n                      onMouseLeave={(e) =>\r\n                        (e.currentTarget.style.textDecoration = \"none\")\r\n                      }\r\n                    >\r\n                      Printers\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      to={\"/network-devices\"}\r\n                      className=\"text-dark\"\r\n                      style={{ textDecoration: \"none\" }}\r\n                      onMouseEnter={(e) =>\r\n                        (e.currentTarget.style.textDecoration = \"underline\")\r\n                      }\r\n                      onMouseLeave={(e) =>\r\n                        (e.currentTarget.style.textDecoration = \"none\")\r\n                      }\r\n                    >\r\n                      Network Devices\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div\r\n                style={{ margin: \"15px\", width: \"60%\" }}\r\n                className=\"filter-section p-2 rounded shadow-sm\"\r\n              >\r\n                <h4\r\n                  style={{ marginTop: \"-8px\", marginBottom: \"16px\" }}\r\n                  className=\"fw-bold\"\r\n                >\r\n                  Sort Computers by\r\n                </h4>\r\n                <ComputerFilter setFilteredProducts={setFilteredProducts} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default trackWindowScroll(Computer);"],"names":["_ref","totalPosts","itemsPerPage","maxPageNumberLimit","minPageNumberLimit","currentPage","paginate","handleNextbtn","handlePrevbtn","searchParams","setSearchParams","useSearchParams","pages","i","Math","ceil","push","productTop","window","scrollTo","top","left","behavior","renderPageNumbers","map","number","_jsx","className","concat","children","onClick","page","toString","handlePageClick","pageIncrementBtn","length","pageDecrementBtn","_Fragment","_jsxs","handlePrevClick","handleNextClick","setFilteredProducts","filters","setFilters","useState","ram","brand","drive","price","noResultsMessage","setNoResultsMessage","priceRange","setPriceRange","defaultPriceRange","setDefaultPriceRange","brands","setBrands","rams","setRams","drives","setDrives","useEffect","fetch","BASEURL","then","response","json","data","undefined","minPrice","maxPrice","fetchedMinPrice","fetchedMaxPrice","prevFilters","uniqueBrands","Array","from","Set","product","toUpperCase","trim","sort","a","b","localeCompare","sensitivity","uniqueRams","filter","computerProperty","ramString","match","normalizeRam","parseInt","uniqueDrives","driveString","includes","matchSSD","matchHDD","capacityGB","type","normalizeDrive","aMatch","bMatch","catch","error","console","handleCheckboxChange","event","name","value","checked","target","updatedFilters","applyFilters","queryParams","replace","toLowerCase","queryString","join","formatPrice","toLocaleString","handleInputPriceChange","index","newPrice","parseFloat","href","style","boxShadow","maxHeight","overflowY","onChange","Slider","handlePriceChange","newValue","min","max","step","width","borderRadius","e","handleApplyClick","resetPriceRange","trackWindowScroll","Computer","setData","records","setRecords","isLoading","setIsLoading","setCurrentPage","pageNumberLimit","setpageNumberLimit","setmaxPageNumberLimit","setminPageNumberLimit","filteredProducts","activeItem","setActiveItem","async","filtered","axios","get","getAllProducts","user","category","reverse","fetchData","indexOfLastItem","indexOfFirstItem","currentPosts","slice","displayedProducts","addItem","useCart","Helmet","content","rel","class","id","searchTerm","placeholder","Loading","_product$images$","Link","to","_id","LazyLoadImage","src","images","url","placeholderSrc","height","alt","color","marginBottom","star","floor","Number","fontSize","cursor","Pagination","nextPage","prevPage","pageNumber","marginTop","paddingTop","paddingBottom","marginLeft","textDecoration","onMouseEnter","currentTarget","onMouseLeave","margin","ComputerFilter"],"sourceRoot":""}