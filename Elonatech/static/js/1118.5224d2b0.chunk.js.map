{"version":3,"file":"static/js/1118.5224d2b0.chunk.js","mappings":"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","sources":["components/blog/blogPages.jsx","components/blog/blogPagination/blogPagination.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BASEURL } from \"../../BaseURL/BaseURL\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport DOMPurify from \"dompurify\";\r\nimport BlogPagination from \"./blogPagination/blogPagination\";\r\nimport \"./blog.css\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst BlogPages = () => {\r\n   \r\n  const { pagenumber } = useParams();\r\n\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(Number(pagenumber));\r\n  const [itemsPerPage] = useState(6);\r\n  const [pageNumberLimit, setpageNumberLimit] = useState(4);\r\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(4);\r\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [activeItem, setActiveItem] = useState(\"Item 1\");\r\n\r\n  const handleClick = (item) => {\r\n    setActiveItem(item);\r\n  };\r\n  \r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`${BASEURL}/api/v1/blog/`);\r\n        setData(response.data.getAllBlogs.reverse());\r\n        setIsLoading(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setIsLoading(true);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n  useEffect(() =>{\r\n    setCurrentPage(Number(pagenumber))\r\n  },[currentPage]);\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newData = {\r\n        email\r\n      };\r\n      const mail = await axios.post(\r\n        `${BASEURL}/api/v1/email/mailchimp`,\r\n        newData,\r\n        { headers: { \"Content-Type\": \"Application/json\" } }\r\n      );\r\n      if (mail) {\r\n        setMailChimp(\"visible\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const paginate = (pages) => setCurrentPage(pages);\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentPosts = data.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const handleNextbtn = () => {\r\n    setCurrentPage(currentPage + 1);\r\n\r\n    if (currentPage + 1 > maxPageNumberLimit) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n    }\r\n  };\r\n\r\n  if(parseInt(pagenumber) > maxPageNumberLimit){\r\n    setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n    setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n  }\r\n\r\n  const handlePrevbtn = () => {\r\n    setCurrentPage(currentPage - 1);\r\n\r\n    if ((currentPage - 1) % pageNumberLimit == 0) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Blog - Tech Solution, Digital Solution</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"We'd love to share our knowledge, experiences and the latest news, trends and info with you\"\r\n        />\r\n        <link rel=\"canonical\" href=\"https://elonatech.com.ng/blog\" />\r\n      </Helmet>\r\n\r\n      <div\r\n        class=\"container-fluid bg-secondary py-5 \"\r\n        style={{\r\n          height: \"500px\",\r\n          marginBottom: \"45px\",\r\n          backgroundImage: `linear-gradient(0deg, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(https://res.cloudinary.com/elonatech/image/upload/v1709800940/blog/blog_xpgc41.jpg)`,\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundPosition: \"center\",\r\n          backgroundSize: \"cover\"\r\n        }}\r\n      >\r\n        <div class=\"py-5 mt-5 \">\r\n          <h2 class=\" mt-5 text-white text-center\">Blog</h2>\r\n          <h5 class=\" mt-4 text-white text-center\">\r\n            Offering regularly updated and trendy contents\r\n          </h5>\r\n          <p class=\"lead text-white text-center\">\r\n            We'd love to share our knowledge, experiences and the latest news,\r\n            trends and info with you\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                {isLoading ? (\r\n                  currentPosts?.map((item) => (\r\n                    <div className=\"col-md-12\" key={item.id}>\r\n                      <Link\r\n                        className=\"text-decoration-none text-dark\"\r\n                        to={`${item._id}`}\r\n                      >\r\n                        <div className=\"mt-4\">\r\n                          <div className=\"row g-0 shim \">\r\n                            <div className=\"col-md-6\">\r\n                              <div className=\"card border-0\">\r\n                                <img\r\n                                  src={item.cloudinary_id}\r\n                                  className=\"img-fluid blogsImg \"\r\n                                  alt=\"\"\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-md-6 \">\r\n                              <div className=\"ms-3\">\r\n                                <h6 className=\"fs-6 pb-3 pt-4\">\r\n                                  {item.category + item.category.slice(1)}\r\n                                </h6>\r\n                                <h5\r\n                                  className=\"pb-3\"\r\n                                  style={{ color: \"#34548c\" }}\r\n                                >\r\n                                  {\" \"}\r\n                                  <Link\r\n                                    className=\"text-decoration-none blogTitle-\"\r\n                                    to={`${item._id}`}\r\n                                  >\r\n                                    {item.title}\r\n                                  </Link>\r\n                                </h5>\r\n                                <p\r\n                                  className=\"fs-6 pb-4\"\r\n                                  dangerouslySetInnerHTML={{\r\n                                    __html: DOMPurify.sanitize(\r\n                                      item.description\r\n                                        .slice(0, 150)\r\n                                        .concat(\"...\")\r\n                                    )\r\n                                  }}\r\n                                ></p>\r\n                                <p className=\"fs-6\">\r\n                                  {\" \"}\r\n                                  {item.author} /{\" \"}\r\n                                  {new Date(item.createdAt).toDateString()}{\" \"}\r\n                                </p>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Link>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <div className=\"container\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"d-flex justify-content-center\">\r\n                          <div className=\"my-5 py-5\">\r\n                            <Loading />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"mt-5\">\r\n                <BlogPagination\r\n                  totalPosts={data.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                  maxPageNumberLimit={maxPageNumberLimit}\r\n                  minPageNumberLimit={minPageNumberLimit}\r\n                  currentPage={currentPage}\r\n                  handleNextbtn={handleNextbtn}\r\n                  handlePrevbtn={handlePrevbtn}\r\n                  paginate={paginate}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n            <div className=\"mt-4\">\r\n              <h5 style={{ color: \"#34548c\" }}>Categories</h5>\r\n              <ul className=\"list-unstyled mt-2\">\r\n                <li>\r\n                  <button\r\n                    className={`buttons btn btn-outline-primary rounded-pill px-5 mt-1 item ${\r\n                      activeItem === \"Item 1\" ? \"active\" : \"\"\r\n                    }`}\r\n                    onClick={() => handleClick(\"Item 1\")}\r\n                  >\r\n                    Blogs\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <Link to={\"/news\"}>\r\n                    <button\r\n                      className={`buttons btn btn-outline-primary rounded-pill px-5 mt-1  item ${\r\n                        activeItem === \"Item 2\" ? \"active\" : \"\"\r\n                      }`}\r\n                      onClick={() => handleClick(\"Item 2\")}\r\n                    >\r\n                      News\r\n                    </button>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to={\"/trends\"}>\r\n                    <button\r\n                      className={`buttons btn btn-outline-primary rounded-pill px-5 mt-1  item ${\r\n                        activeItem === \"Item 3\" ? \"active\" : \"\"\r\n                      }`}\r\n                      onClick={() => handleClick(\"Item 3\")}\r\n                    >\r\n                      Trends\r\n                    </button>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n              <h5 className=\"mt-2\" style={{ color: \"#34548c\" }}>\r\n                Be the first to know\r\n              </h5>\r\n              <p>\r\n                Enter your email address below to subscribe to our newsletter\r\n              </p>\r\n              <form className=\"\">\r\n                <div class=\"mb-3\">\r\n                  <input\r\n                    type=\"email\"\r\n                    class=\"form-control rounded-0 \"\r\n                    style={{ width: \"18rem\" }}\r\n                    id=\"exampleInputEmail1\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Your email*\"\r\n                    aria-describedby=\"emailHelp\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div class=\"d-grid gap-2\">\r\n                  <button\r\n                    onClick={handleSubmit}\r\n                    class=\"btn btn-danger mb-3 \"\r\n                    style={{ width: \"18rem\" }}\r\n                  >\r\n                    Subscribe\r\n                  </button>\r\n                </div>\r\n\r\n                <div class=\"form-check\">\r\n                  <label class=\"form-check-label\" for=\"exampleCheck1\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      class=\"form-check-input\"\r\n                      required=\"required\"\r\n                    />\r\n                    I accept the\r\n                    <Link className=\"ps-2 text-dark\" to={\"/policy\"}>\r\n                      Privacy Policy<span className=\"text-danger\">*</span>\r\n                    </Link>\r\n                  </label>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogPages;\r\n","import './blogPagination.css'\r\nimport { useParams, Link } from 'react-router-dom'\r\n\r\nconst BlogPagination = ({\r\n  totalPosts,\r\n  itemsPerPage,\r\n  maxPageNumberLimit,\r\n  minPageNumberLimit,\r\n  currentPage,\r\n  paginate,\r\n  handleNextbtn,\r\n  handlePrevbtn,\r\n  disabled\r\n}) => {\r\n  const { pagenumber } = useParams()\r\n\r\n  const pages = []\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / itemsPerPage); i++) {\r\n    pages.push(i)\r\n  }\r\n\r\n  const productTop = () => {\r\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' })\r\n  }\r\n\r\n  const renderPageNumbers = pages.map(number => {\r\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n      return (\r\n        <li\r\n          key={number}\r\n          onClick={() => paginate(number)}\r\n          className={`page-item ${\r\n            currentPage == number || currentPage === pagenumber\r\n              ? 'active'\r\n              : null\r\n          }`}\r\n        >\r\n          <Link\r\n            onClick={productTop}\r\n            to={`/blog/page/${number}`}\r\n            class='page-link v-cursor'\r\n          >\r\n            {number}\r\n          </Link>\r\n        </li>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  })\r\n\r\n  let pageIncrementBtn = null\r\n  if (pages.length > maxPageNumberLimit) {\r\n    pageIncrementBtn = (\r\n      <li class='page-link v-cursor' onClick={handleNextbtn}>\r\n        {' '}\r\n        &hellip;{' '}\r\n      </li>\r\n    )\r\n  }\r\n\r\n  let pageDecrementBtn = null\r\n  if (minPageNumberLimit >= 1) {\r\n    pageDecrementBtn = (\r\n      <li class='page-link v-cursor' onClick={handlePrevbtn}>\r\n        {' '}\r\n        &hellip;{' '}\r\n      </li>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ul className='pagination justify-content-center mb-5'>\r\n        <li className='page-item' onClick={productTop}>\r\n          <Link\r\n            to={`/blog/page/${currentPage - 1}`}\r\n            className={`page-link ${\r\n              currentPage == pages[0] ? 'disabled' : 'active'\r\n            }`}\r\n            onClick={handlePrevbtn}\r\n          >\r\n            Prev\r\n          </Link>\r\n        </li>\r\n        {pageDecrementBtn}\r\n        {renderPageNumbers}\r\n        {pageIncrementBtn}\r\n        <li className='page-item' onClick={productTop}>\r\n          <Link\r\n            to={`/blog/page/${currentPage + 1}`}\r\n            className={`page-link ${\r\n              currentPage == pages[pages.length - 1] ? 'disabled' : 'active'\r\n            }`}\r\n            onClick={handleNextbtn}\r\n          >\r\n            Next\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BlogPagination\r\n"],"names":["BlogPages","pagenumber","useParams","data","setData","useState","isLoading","setIsLoading","currentPage","setCurrentPage","Number","itemsPerPage","pageNumberLimit","setpageNumberLimit","maxPageNumberLimit","setmaxPageNumberLimit","minPageNumberLimit","setminPageNumberLimit","email","setEmail","activeItem","setActiveItem","handleClick","item","useEffect","async","response","axios","get","BASEURL","getAllBlogs","reverse","error","console","fetchData","indexOfLastItem","indexOfFirstItem","currentPosts","slice","parseInt","_jsxs","_Fragment","children","Helmet","_jsx","name","content","rel","href","class","style","height","marginBottom","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","className","map","Link","to","_id","src","cloudinary_id","alt","category","color","title","dangerouslySetInnerHTML","__html","DOMPurify","description","concat","author","Date","createdAt","toDateString","id","Loading","BlogPagination","totalPosts","length","handleNextbtn","handlePrevbtn","paginate","pages","onClick","type","width","onChange","e","target","value","placeholder","required","preventDefault","newData","post","headers","setMailChimp","log","for","_ref","disabled","i","Math","ceil","push","productTop","window","scrollTo","top","left","behavior","renderPageNumbers","number","pageIncrementBtn","pageDecrementBtn"],"sourceRoot":""}