{"version":3,"file":"static/js/7568.1e55fbf1.chunk.js","mappings":"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","sources":["components/blog/blog.jsx","components/blog/blogPagination/blogPagination.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BASEURL } from \"../../BaseURL/BaseURL\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport DOMPurify from \"dompurify\";\r\nimport BlogPagination from \"./blogPagination/blogPagination\";\r\nimport \"./blog.css\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst Blog = () => {\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(6);\r\n  const [pageNumberLimit, setpageNumberLimit] = useState(4);\r\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(4);\r\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [activeItem, setActiveItem] = useState(\"Item 1\");\r\n\r\n  const handleClick = (item) => {\r\n    setActiveItem(item);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`${BASEURL}/api/v1/blog/`);\r\n        setData(response.data.getAllBlogs);\r\n        setIsLoading(true);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setIsLoading(true);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newData = {\r\n        email\r\n      };\r\n      const mail = await axios.post(\r\n        `${BASEURL}/api/v1/email/mailchimp`,\r\n        newData,\r\n        { headers: { \"Content-Type\": \"Application/json\" } }\r\n      );\r\n      if (mail) {\r\n        setMailChimp(\"visible\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const paginate = (pages) => setCurrentPage(pages);\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentPosts = data.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const handleNextbtn = () => {\r\n    setCurrentPage(currentPage + 1);\r\n\r\n    if (currentPage + 1 > maxPageNumberLimit) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n    }\r\n  };\r\n\r\n  const handlePrevbtn = () => {\r\n    setCurrentPage(currentPage - 1);\r\n\r\n    if ((currentPage - 1) % pageNumberLimit == 0) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Blog - Tech Solution, Digital Solution</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"We'd love to share our knowledge, experiences and the latest news, trends and info with you\"\r\n        />\r\n        <link rel=\"canonical\" href=\"https://elonatech.com.ng/blog\" />\r\n      </Helmet>\r\n\r\n      <div class=\"container-fluid blog-section\">\r\n      <div class=\"text-content\">\r\n        <h2>Blog</h2>\r\n        <h5>Offering regularly updated and trendy contents</h5>\r\n        <p class=\"lead\">\r\n          We'd love to share our knowledge, experiences and the latest news,\r\n          trends and info with you.\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n      <div className=\"container mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                {isLoading ? (\r\n                  currentPosts?.map((item) => (\r\n                    <div className=\"col-md-12\" key={item.id}>\r\n                      <Link\r\n                        className=\"text-decoration-none text-dark\"\r\n                        to={`${item._id}`}\r\n                      >\r\n                        <div className=\"mt-4\">\r\n                          <div className=\"row g-0 shim \">\r\n                            <div className=\"col-md-6\">\r\n                              <div className=\"card border-0\">\r\n                                <img\r\n                                  src={item.cloudinary_id}\r\n                                  className=\"img-fluid blogsImg \"\r\n                                  alt=\"\"\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-md-6 \">\r\n                              <div className=\"ms-3\">\r\n                                <h6 className=\"fs-6 pb-3 pt-4\">\r\n                                  {item.category + item.category.slice(1)}\r\n                                </h6>\r\n                                <h5\r\n                                  className=\"pb-3\"\r\n                                  style={{ color: \"#34548c\" }}\r\n                                >\r\n                                  {\" \"}\r\n                                  <Link\r\n                                    className=\"text-decoration-none blogTitle-\"\r\n                                    to={`${item._id}`}\r\n                                  >\r\n                                    {item.title}\r\n                                  </Link>\r\n                                </h5>\r\n                                <p\r\n                                  className=\"fs-6 pb-4\"\r\n                                  dangerouslySetInnerHTML={{\r\n                                    __html: DOMPurify.sanitize(\r\n                                      item.description\r\n                                        .slice(0, 150)\r\n                                        .concat(\"...\")\r\n                                    )\r\n                                  }}\r\n                                ></p>\r\n                                <p className=\"fs-6\">\r\n                                  {\" \"}\r\n                                  {item.author} /{\" \"}\r\n                                  {new Date(item.createdAt).toDateString()}{\" \"}\r\n                                </p>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </Link>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <div className=\"container\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"d-flex justify-content-center\">\r\n                          <div className=\"my-5 py-5\">\r\n                            <Loading />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"mt-5\">\r\n                <BlogPagination\r\n                  totalPosts={data.length}\r\n                  itemsPerPage={itemsPerPage}\r\n                  maxPageNumberLimit={maxPageNumberLimit}\r\n                  minPageNumberLimit={minPageNumberLimit}\r\n                  currentPage={currentPage}\r\n                  handleNextbtn={handleNextbtn}\r\n                  handlePrevbtn={handlePrevbtn}\r\n                  paginate={paginate}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n            <div className=\"mt-4\">\r\n          <h5>Categories</h5>\r\n              <ul className=\"list-unstyled mt-2\">\r\n                <li>\r\n                  <a\r\n                    className={`buttons btn btn-outline-primary rounded-pill px-5  item ${\r\n                      activeItem === \"Item 1\" ? \"active\" : \"\"\r\n                    }`}\r\n                    onClick={() => handleClick(\"Item 1\")}\r\n                  >\r\n                    Blogs\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <Link to={\"/news\"}>\r\n                    <a\r\n                      className={`buttons btn btn-outline-primary rounded-pill px-5 mt-1  item ${\r\n                        activeItem === \"Item 2\" ? \"active\" : \"\"\r\n                      }`}\r\n                      onClick={() => handleClick(\"Item 2\")}\r\n                    >\r\n                      News\r\n                    </a>\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to={\"/trends\"}>\r\n                    <a\r\n                      className={`buttons btn btn-outline-primary rounded-pill px-5 mt-1  item ${\r\n                        activeItem === \"Item 3\" ? \"active\" : \"\"\r\n                      }`}\r\n                      onClick={() => handleClick(\"Item 3\")}\r\n                    >\r\n                      Trends\r\n                    </a>\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n              <h5 className=\"mt-2\" style={{ color: \"#34548c\" }}>\r\n                Be the first to know\r\n              </h5>\r\n              <p>\r\n                Enter your email address below to subscribe to our newsletter\r\n              </p>\r\n              <form className=\"\">\r\n                <div class=\"mb-3\">\r\n                  <input\r\n                    type=\"email\"\r\n                    class=\"form-control rounded-0 \"\r\n                    style={{ width: \"18rem\" }}\r\n                    id=\"exampleInputEmail1\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Your email*\"\r\n                    aria-describedby=\"emailHelp\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div class=\"d-grid gap-2\">\r\n                  <button\r\n                    onClick={handleSubmit}\r\n                    class=\"btn btn-danger mb-3 \"\r\n                    style={{ width: \"18rem\" }}\r\n                  >\r\n                    Subscribe\r\n                  </button>\r\n                </div>\r\n\r\n                <div class=\"form-check\">\r\n                  <label class=\"form-check-label\" for=\"exampleCheck1\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      class=\"form-check-input\"\r\n                      required=\"required\"\r\n                    />\r\n                    I accept the\r\n                    <Link className=\"ps-2 text-dark\" to={\"/policy\"}>\r\n                      Privacy Policy<span className=\"text-danger\">*</span>\r\n                    </Link>\r\n                  </label>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n","import './blogPagination.css';\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\n\r\nconst BlogPagination = ({ totalPosts, itemsPerPage, maxPageNumberLimit, minPageNumberLimit, currentPage, paginate, handleNextbtn, handlePrevbtn , disabled }) => {\r\n\r\n\r\n  const { pagenumber } = useParams();\r\n  \r\n  const pages = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / itemsPerPage); i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  \r\nconst productTop = () =>{\r\n  window.scrollTo({top:0, left:0, behavior:\"smooth\"})\r\n}\r\n\r\n  const renderPageNumbers = pages.map((number) => {\r\n      if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n        return (\r\n          <li key={number} onClick={() => paginate(number)} className={ `page-item ${currentPage == number || currentPage === pagenumber ? \"active\" : null}`}>\r\n            <Link onClick={productTop} to={`/blog/page/${number}`}    class=\"page-link v-cursor\">{number}</Link>  \r\n          </li>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n\r\n    let pageIncrementBtn = null;\r\n    if (pages.length > maxPageNumberLimit) {\r\n      pageIncrementBtn = <li class=\"page-link v-cursor\" onClick={handleNextbtn}> &hellip; </li>;\r\n    }\r\n  \r\n    let pageDecrementBtn = null;\r\n    if (minPageNumberLimit >= 1) {\r\n      pageDecrementBtn = <li class=\"page-link v-cursor\" onClick={handlePrevbtn}> &hellip; </li>;\r\n    }\r\n\r\n\r\n\r\n  return (\r\n  <>\r\n      <ul className=\"pagination justify-content-center mb-5\">\r\n      <li  className=\"page-item\" onClick={productTop}>\r\n      <Link to={`/blog/page/${currentPage - 1}`} className= {`page-link ${currentPage == pages[0] ? \"disabled\" : \"active\"}`}   onClick={handlePrevbtn}>Prev</Link>\r\n      </li>\r\n      {pageDecrementBtn}\r\n      {renderPageNumbers}\r\n      {pageIncrementBtn}\r\n      <li className=\"page-item\"onClick={productTop} >\r\n      <Link to={`/blog/page/${currentPage + 1}`}  className={`page-link ${currentPage == pages[pages.length - 1] ? \"disabled\" : \"active\"}`}  onClick={handleNextbtn}>Next</Link>\r\n      </li>\r\n    </ul>     \r\n  </>\r\n  );\r\n}\r\n\r\nexport default BlogPagination;\r\n\r\n\r\n\r\n"],"names":["Blog","data","setData","useState","isLoading","setIsLoading","currentPage","setCurrentPage","itemsPerPage","pageNumberLimit","setpageNumberLimit","maxPageNumberLimit","setmaxPageNumberLimit","minPageNumberLimit","setminPageNumberLimit","email","setEmail","activeItem","setActiveItem","handleClick","item","useEffect","async","response","axios","get","concat","BASEURL","getAllBlogs","error","console","fetchData","indexOfLastItem","indexOfFirstItem","currentPosts","slice","_jsxs","_Fragment","children","Helmet","_jsx","name","content","rel","href","class","className","map","Link","to","_id","src","cloudinary_id","alt","category","style","color","title","dangerouslySetInnerHTML","__html","DOMPurify","description","author","Date","createdAt","toDateString","id","Loading","BlogPagination","totalPosts","length","handleNextbtn","handlePrevbtn","paginate","pages","onClick","type","width","onChange","e","target","value","placeholder","required","preventDefault","newData","post","headers","setMailChimp","log","for","_ref","disabled","pagenumber","useParams","i","Math","ceil","push","productTop","window","scrollTo","top","left","behavior","renderPageNumbers","number","pageIncrementBtn","pageDecrementBtn"],"sourceRoot":""}