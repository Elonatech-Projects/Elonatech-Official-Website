{"version":3,"file":"static/js/550.fd993be7.chunk.js","mappings":"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","sources":["components/Pagination/Pagination.jsx","pages/sales/computer/computerFilter.jsx","pages/sales/computer/computer.jsx"],"sourcesContent":["import { Link, useSearchParams } from \"react-router-dom\";\r\nimport './pagination.css';\r\n\r\nconst Pagination = ({ totalPosts, itemsPerPage, maxPageNumberLimit, minPageNumberLimit, currentPage, paginate, handleNextbtn, handlePrevbtn }) => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const pages = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / itemsPerPage); i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  const productTop = () => {\r\n    window.scrollTo({top: 0, left: 0, behavior: \"smooth\"})\r\n  }\r\n\r\n  const handlePageClick = (number) => {\r\n    paginate(number);\r\n    setSearchParams({ page: number.toString() });\r\n    productTop();\r\n  }\r\n\r\n  const renderPageNumbers = pages.map((number) => {\r\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n      return (\r\n        <li key={number} className={`page-item ${currentPage === number ? \"active\" : \"\"}`}>\r\n          <a onClick={() => handlePageClick(number)} className=\"page-link v-cursor\">{number}</a>  \r\n        </li>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  let pageIncrementBtn = null;\r\n  if (pages.length > maxPageNumberLimit) {\r\n    pageIncrementBtn = <li className=\"page-link v-cursor\" onClick={handleNextbtn}> &hellip; </li>;\r\n  }\r\n\r\n  let pageDecrementBtn = null;\r\n  if (minPageNumberLimit >= 1) {\r\n    pageDecrementBtn = <li className=\"page-link v-cursor\" onClick={handlePrevbtn}> &hellip; </li>;\r\n  }\r\n\r\n  const handlePrevClick = () => {\r\n    if (currentPage > 1) {\r\n      handlePrevbtn();\r\n      setSearchParams({ page: (currentPage - 1).toString() });\r\n      productTop();\r\n    }\r\n  }\r\n\r\n  const handleNextClick = () => {\r\n    if (currentPage < pages.length) {\r\n      handleNextbtn();\r\n      setSearchParams({ page: (currentPage + 1).toString() });\r\n      productTop();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"pagination justify-content-center mb-5\">\r\n        <li className={`page-item ${currentPage === 1 ? \"disabled\" : \"\"}`}>\r\n          <a className=\"page-link\" onClick={handlePrevClick}>Prev</a>\r\n        </li>\r\n        {pageDecrementBtn}\r\n        {renderPageNumbers}\r\n        {pageIncrementBtn}\r\n        <li className={`page-item ${currentPage === pages.length ? \"disabled\" : \"\"}`}>\r\n          <a className=\"page-link\" onClick={handleNextClick}>Next</a>\r\n        </li>\r\n      </ul>     \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Pagination;","import \"./computerFilter.css\"; \r\nimport React, { useState, useEffect } from \"react\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { BASEURL } from \"../../../BaseURL/BaseURL\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst ComputerFilter = ({ setFilteredProducts }) => {\r\n  const [filters, setFilters] = useState({\r\n    ram: \"\",\r\n    brand: \"\",\r\n    drive: \"\",\r\n    price: [0, 1000000]\r\n  \r\n  });\r\n  const [noResultsMessage, setNoResultsMessage] = useState(\"\");\r\n  const [priceRange, setPriceRange] = useState([0, 1000000]); \r\n  const [defaultPriceRange, setDefaultPriceRange] = useState([0, 1000000]); \r\n  const [brands, setBrands] = useState([]);\r\n  const [rams, setRams] = useState([]); \r\n  const [drives, setDrives] = useState([]);\r\n  const [allProducts, setAllProducts] = useState([]); \r\n  const [showNoResultsDialog, setShowNoResultsDialog] = useState(false);\r\n  const [activeFilters, setActiveFilters] = useState([]);\r\n\r\n  const normalizeRam = (ramString) => {\r\n    if (!ramString) return null;\r\n    const ram = ramString.toUpperCase().trim();\r\n    const match = ram.match(/(\\d+)\\s*(?:GB|G)?/i);\r\n    if (match) {\r\n      const number = match[1];\r\n      return `${number}GB RAM`;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const normalizeDrive = (driveString) => {\r\n    if (!driveString) return null;\r\n    const drive = driveString.toUpperCase().trim();\r\n    \r\n    if (drive.includes('PCIE') || drive.includes('RAM,')) {\r\n      return null;\r\n    }\r\n    \r\n    const matchSSD = drive.match(/(\\d+)\\s*(?:GB|G|TB|T)?\\s*(?:SSD)?/i);\r\n    const matchHDD = drive.match(/(\\d+)\\s*(?:GB|G|TB|T)?\\s*(?:HDD)?/i);\r\n    \r\n    if (matchSSD || matchHDD) {\r\n      const match = matchSSD || matchHDD;\r\n      const number = parseInt(match[1]);\r\n      const isTerabyte = drive.includes('TB') || drive.includes('T');\r\n      const capacityGB = isTerabyte ? number * 1024 : number;\r\n      \r\n      const type = drive.includes('HDD') ? 'HDD' : 'SSD';\r\n      \r\n      if (type === 'SSD' && (capacityGB < 128 || capacityGB > 4096)) {\r\n        return null;\r\n      }\r\n      if (type === 'HDD' && (capacityGB < 500 || capacityGB > 18432)) {\r\n        return null;\r\n      }\r\n      \r\n      if (capacityGB >= 1024) {\r\n        return `${(capacityGB / 1024)}TB ${type}`;\r\n      }\r\n      return `${capacityGB}GB ${type}`;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(`${BASEURL}/api/v1/product/filter?category=Computer`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Store all products for local filtering\r\n        setAllProducts(data.data);\r\n\r\n        if (data.minPrice !== undefined && data.maxPrice !== undefined) {\r\n          const fetchedMinPrice = data.minPrice;\r\n          const fetchedMaxPrice = data.maxPrice;\r\n          setDefaultPriceRange([fetchedMinPrice, fetchedMaxPrice]);\r\n          setPriceRange([fetchedMinPrice, fetchedMaxPrice]);\r\n          setFilters((prevFilters) => ({\r\n            ...prevFilters,\r\n            price: [fetchedMinPrice, fetchedMaxPrice] \r\n          }));\r\n        }\r\n\r\n        // Set up filter options\r\n        const uniqueBrands = Array.from(new Set(data.data\r\n          .map(product => product.brand.toUpperCase().trim())))\r\n          .sort((a, b) => a.localeCompare(b, undefined, { sensitivity: 'base' }));\r\n        setBrands(uniqueBrands);\r\n\r\n        const uniqueRams = Array.from(new Set(data.data\r\n          .filter(product => product.computerProperty && \r\n                           product.computerProperty[0] && \r\n                           product.computerProperty[0].ram)\r\n          .map(product => normalizeRam(product.computerProperty[0].ram))\r\n          .filter(ram => ram !== null)))\r\n          .sort((a, b) => {\r\n            const aSize = parseInt(a.match(/\\d+/)[0]);\r\n            const bSize = parseInt(b.match(/\\d+/)[0]);\r\n            return aSize - bSize;\r\n          });\r\n        setRams(uniqueRams);\r\n\r\n        const uniqueDrives = Array.from(new Set(data.data\r\n          .filter(product => product.computerProperty && \r\n                           product.computerProperty[0] && \r\n                           product.computerProperty[0].drive)\r\n          .map(product => normalizeDrive(product.computerProperty[0].drive))\r\n          .filter(drive => drive !== null)))\r\n          .sort((a, b) => {\r\n            const aMatch = a.match(/(\\d+)(TB|GB)/);\r\n            const bMatch = b.match(/(\\d+)(TB|GB)/);\r\n            if (aMatch && bMatch) {\r\n              const aSize = parseInt(aMatch[1]) * (aMatch[2] === 'TB' ? 1000 : 1);\r\n              const bSize = parseInt(bMatch[1]) * (bMatch[2] === 'TB' ? 1000 : 1);\r\n              return aSize - bSize;\r\n            }\r\n            return a.localeCompare(b);\r\n          });\r\n        setDrives(uniqueDrives);\r\n\r\n        setFilteredProducts(data.data);\r\n        setNoResultsMessage(\"\");\r\n      })\r\n      .catch((error) => console.error(\"Error fetching initial data:\", error));\r\n  }, [setFilteredProducts]);\r\n\r\n\r\n  const getActiveFilters = (currentFilters) => {\r\n    const active = [];\r\n    if (currentFilters.brand) active.push(`Brand: ${currentFilters.brand}`);\r\n    if (currentFilters.ram) active.push(`RAM: ${currentFilters.ram}`);\r\n    if (currentFilters.drive) active.push(`Drive: ${currentFilters.drive}`);\r\n    if (currentFilters.price[0] !== defaultPriceRange[0] || \r\n        currentFilters.price[1] !== defaultPriceRange[1]) {\r\n      active.push(`Price Range: ₦${formatPrice(currentFilters.price[0])} - ₦${formatPrice(currentFilters.price[1])}`);\r\n    }\r\n    return active;\r\n  };\r\n\r\n  const applyFilters = (currentFilters) => {\r\n    let filteredResults = [...allProducts];\r\n\r\n    // Apply brand filter\r\n    if (currentFilters.brand) {\r\n      filteredResults = filteredResults.filter(\r\n        product => product.brand.toUpperCase().trim() === currentFilters.brand\r\n      );\r\n    }\r\n\r\n    // Apply RAM filter\r\n    if (currentFilters.ram) {\r\n      filteredResults = filteredResults.filter(product => \r\n        product.computerProperty?.[0]?.ram &&\r\n        normalizeRam(product.computerProperty[0].ram) === currentFilters.ram\r\n      );\r\n    }\r\n\r\n    // Apply drive filter\r\n    if (currentFilters.drive) {\r\n      filteredResults = filteredResults.filter(product =>\r\n        product.computerProperty?.[0]?.drive &&\r\n        normalizeDrive(product.computerProperty[0].drive) === currentFilters.drive\r\n      );\r\n    }\r\n\r\n    // Apply price filter\r\n    filteredResults = filteredResults.filter(product =>\r\n      product.price >= currentFilters.price[0] &&\r\n      product.price <= currentFilters.price[1]\r\n    );\r\n\r\n    // Update active filters\r\n    const currentActiveFilters = getActiveFilters(currentFilters);\r\n    setActiveFilters(currentActiveFilters);\r\n\r\n    // Check if we have any results\r\n    if (filteredResults.length === 0 && currentActiveFilters.length > 0) {\r\n      setNoResultsMessage(\"No products match your selected filters.\");\r\n      setShowNoResultsDialog(true);\r\n      setFilteredProducts([]);\r\n    } else {\r\n      setNoResultsMessage(\"\");\r\n      setShowNoResultsDialog(false);\r\n      setFilteredProducts(filteredResults);\r\n    }\r\n  };\r\n\r\n  const handleApplyClick = () => {\r\n    applyFilters(filters);\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    const resetFilters = {\r\n      ram: \"\",\r\n      brand: \"\",\r\n      drive: \"\",\r\n      price: defaultPriceRange\r\n    };\r\n    setFilters(resetFilters);\r\n    setPriceRange(defaultPriceRange);\r\n    setShowNoResultsDialog(false);\r\n    applyFilters(resetFilters);\r\n  };\r\n\r\n  const resetPriceRange = () => {\r\n    setPriceRange(defaultPriceRange);\r\n    const updatedFilters = {\r\n      ...filters,\r\n      price: defaultPriceRange\r\n    };\r\n    setFilters(updatedFilters);\r\n    applyFilters(updatedFilters);\r\n  };\r\n\r\n  const handleCheckboxChange = (event) => {\r\n    const { name, value, checked } = event.target;\r\n    const updatedFilters = {\r\n      ...filters,\r\n      [name]: checked ? value : \"\"\r\n    };\r\n    setFilters(updatedFilters);\r\n    applyFilters(updatedFilters);\r\n  };\r\n\r\n  const handlePriceRangeChange = (event, newValue) => {\r\n    setPriceRange(newValue);\r\n  };\r\n\r\n  // const handlePriceChange = (event, newValue) => {\r\n  //   const updatedFilters = {\r\n  //     ...filters,\r\n  //     price: newValue\r\n  //   };\r\n  //   setFilters(updatedFilters);\r\n  //   applyFilters(updatedFilters);\r\n  // };\r\n\r\n  const handlePriceChange = (event, newValue) => {\r\n    setFilters((prevFilters) => ({\r\n      ...prevFilters,\r\n      price: newValue,\r\n    }));\r\n  };\r\n\r\n  const formatPrice = (price) => {\r\n    return price.toLocaleString();\r\n  };\r\n\r\n  const handleInputPriceChange = (event, index) => {\r\n    const value = event.target.value.replace(/[^0-9]/g, \"\");\r\n    const newPrice = [...filters.price];\r\n    newPrice[index] = parseFloat(value) || 0;\r\n    const updatedFilters = {\r\n      ...filters,\r\n      price: newPrice\r\n    };\r\n    setFilters(updatedFilters);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setShowNoResultsDialog(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"computer-filter\">\r\n      {/* No Results Dialog */}\r\n      <Dialog\r\n        open={showNoResultsDialog}\r\n        onClose={handleCloseDialog}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          No Products Found\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div id=\"alert-dialog-description\">\r\n            <p style={{ marginBottom: '10px' }}>No products match your current filter criteria:</p>\r\n            <ul style={{ paddingLeft: '20px', marginBottom: '10px' }}>\r\n              {activeFilters.map((filter, index) => (\r\n                <li key={index} style={{ marginBottom: '5px' }}>{filter}</li>\r\n              ))}\r\n            </ul>\r\n            <p>Would you like to reset your filters and try again?</p>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions style={{ padding: '16px' }}>\r\n          <Button \r\n            onClick={resetFilters} \r\n            variant=\"contained\" \r\n            color=\"primary\"\r\n          >\r\n            Reset All Filters\r\n          </Button>\r\n          <Button \r\n            onClick={handleCloseDialog} \r\n            variant=\"outlined\"\r\n          >\r\n            Keep Filters\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Existing warning message */}\r\n      {noResultsMessage && (\r\n        <div className=\"no-results-message alert alert-info\">\r\n          <p>{noResultsMessage}</p>\r\n          <p>\r\n            Please adjust your filters or go back to the <a href=\"/computers\">Computer page</a> to explore\r\n            more products.\r\n          </p>\r\n        </div>\r\n      )}\r\n      <form>\r\n        {/* Brand Filter */}\r\n        <div className=\"filter-section brand-mobile\">\r\n          <label className=\"form-label\">Brand:</label>\r\n          <div className=\"filter-options\">\r\n            {brands.map((brand) => (\r\n              <div className=\"form-check\" key={brand}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"brand\"\r\n                  value={brand}\r\n                  onChange={handleCheckboxChange}\r\n                  checked={filters.brand === brand}\r\n                  className=\"form-check-input\"\r\n                />\r\n                <label className=\"form-check-label\">{brand}</label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* RAM Filter */}\r\n        <div className=\"filter-section ram-mobile\">\r\n          <label className=\"form-label\">RAM:</label>\r\n          <div className=\"filter-options\">\r\n            {rams.map((ram) => (\r\n              <div className=\"form-check\" key={ram}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"ram\"\r\n                  value={ram}\r\n                  onChange={handleCheckboxChange}\r\n                  checked={filters.ram === ram}\r\n                  className=\"form-check-input\"\r\n                />\r\n                <label className=\"form-check-label\">{ram}</label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Drive Filter */}\r\n        <div className=\"filter-section drive-mobile\">\r\n          <label className=\"form-label\">Drive:</label>\r\n          <div className=\"filter-options\">\r\n            {drives.map((drive) => (\r\n              <div className=\"form-check\" key={drive}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"drive\"\r\n                  value={drive}\r\n                  onChange={handleCheckboxChange}\r\n                  checked={filters.drive === drive}\r\n                  className=\"form-check-input\"\r\n                />\r\n                <label className=\"form-check-label\">{drive}</label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Price Filter */}\r\n        <div className=\"price-filter price-mobile\">\r\n          <label className=\"form-label\">Filter by Price(₦)</label>\r\n          <Slider\r\n            className=\"custom-slider\"\r\n            value={filters.price}\r\n            onChange={handlePriceChange}\r\n            min={priceRange[0]}\r\n            max={priceRange[1]}\r\n            step={5}\r\n          />\r\n          \r\n          <div className=\"price-range-values\">\r\n            <input\r\n              style={{ width: \"50%\", borderRadius: \"5px\" }}\r\n              type=\"text\"\r\n              value={formatPrice(filters.price[0])}\r\n              onChange={(e) => handleInputPriceChange(e, 0)}\r\n              className=\"price-input\"\r\n            />\r\n            <span className=\"separator\">-</span>\r\n            <input\r\n              style={{ width: \"50%\", borderRadius: \"5px\" }}\r\n              type=\"text\"\r\n              value={formatPrice(filters.price[1])}\r\n              onChange={(e) => handleInputPriceChange(e, 1)}\r\n              className=\"price-input\"\r\n            />\r\n          </div>\r\n          <div className=\"expand\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleApplyClick}\r\n              className=\"apply-btn\"\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              Apply Price Range\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={resetPriceRange}\r\n              className=\"reset-btn\"\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              Reset Price Range\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComputerFilter;","import React, { useState, useEffect } from 'react'\r\nimport { Link, useSearchParams } from 'react-router-dom'\r\nimport Pagination from './../../../components/Pagination/Pagination'\r\nimport { BASEURL } from '../../../BaseURL/BaseURL'\r\nimport Loading from '../../../components/Loading/Loading'\r\nimport axios from 'axios'\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component'\r\nimport { useCart } from 'react-use-cart'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { Helmet } from 'react-helmet-async'\r\nimport 'rc-slider/assets/index.css'\r\nimport ComputerFilter from './computerFilter'\r\nimport './computer.css'\r\nimport Slider from '@mui/material/Slider'\r\n\r\nconst Computer = () => {\r\n  const [filters, setFilters] = useState({\r\n    ram: '',\r\n    brand: '',\r\n    drive: '',\r\n    price: [0, 1000000]\r\n  })\r\n  const [priceRange, setPriceRange] = useState([0, 1000000])\r\n  const [defaultPriceRange, setDefaultPriceRange] = useState([0, 1000000])\r\n  const [brands, setBrands] = useState([])\r\n  const [rams, setRams] = useState([])\r\n  const [drives, setDrives] = useState([])\r\n  const [allProducts, setAllProducts] = useState([])\r\n  const [showNoResultsDialog, setShowNoResultsDialog] = useState(false)\r\n  const [filteredProducts, setFilteredProducts] = useState([])\r\n\r\n  const normalizeRam = ramString => {\r\n    if (!ramString) return null\r\n    const ram = ramString.toUpperCase().trim()\r\n    const match = ram.match(/(\\d+)\\s*(?:GB|G)?/i)\r\n    if (match) {\r\n      return `${match[1]}GB RAM`\r\n    }\r\n    return null\r\n  }\r\n\r\n  const normalizeDrive = driveString => {\r\n    if (!driveString) return null\r\n    const drive = driveString.toUpperCase().trim()\r\n\r\n    if (drive.includes('PCIE') || drive.includes('RAM,')) {\r\n      return null\r\n    }\r\n\r\n    const matchSSD = drive.match(/(\\d+)\\s*(?:GB|G|TB|T)?\\s*(?:SSD)?/i)\r\n    const matchHDD = drive.match(/(\\d+)\\s*(?:GB|G|TB|T)?\\s*(?:HDD)?/i)\r\n\r\n    if (matchSSD || matchHDD) {\r\n      const match = matchSSD || matchHDD\r\n      const number = parseInt(match[1])\r\n      const isTerabyte = drive.includes('TB') || drive.includes('T')\r\n      const capacityGB = isTerabyte ? number * 1024 : number\r\n\r\n      const type = drive.includes('HDD') ? 'HDD' : 'SSD'\r\n\r\n      if (type === 'SSD' && (capacityGB < 128 || capacityGB > 4096)) {\r\n        return null\r\n      }\r\n      if (type === 'HDD' && (capacityGB < 500 || capacityGB > 18432)) {\r\n        return null\r\n      }\r\n\r\n      if (capacityGB >= 1024) {\r\n        return `${capacityGB / 1024}TB ${type}`\r\n      }\r\n      return `${capacityGB}GB ${type}`\r\n    }\r\n    return null\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(`${BASEURL}/api/v1/product/filter?category=Computer`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setAllProducts(data.data.reverse())\r\n\r\n        if (data.minPrice !== undefined && data.maxPrice !== undefined) {\r\n          setDefaultPriceRange([data.minPrice, data.maxPrice])\r\n          setPriceRange([data.minPrice, data.maxPrice])\r\n          setFilters(prevFilters => ({\r\n            ...prevFilters,\r\n            price: [data.minPrice, data.maxPrice]\r\n          })) \r\n        }\r\n\r\n        const uniqueBrands = Array.from(\r\n          new Set(data.data.map(product => product.brand.toUpperCase().trim()))\r\n        ).sort((a, b) => a.localeCompare(b, undefined, { sensitivity: 'base' }))\r\n        setBrands(uniqueBrands)\r\n\r\n        const uniqueRams = Array.from(\r\n          new Set(\r\n            data.data\r\n              .filter(\r\n                product =>\r\n                  product.computerProperty &&\r\n                  product.computerProperty[0] &&\r\n                  product.computerProperty[0].ram\r\n              )\r\n              .map(product => normalizeRam(product.computerProperty[0].ram))\r\n              .filter(ram => ram !== null)\r\n          )\r\n        ).sort((a, b) => {\r\n          const aSize = parseInt(a.match(/\\d+/)[0])\r\n          const bSize = parseInt(b.match(/\\d+/)[0])\r\n          return aSize - bSize\r\n        })\r\n        setRams(uniqueRams)\r\n\r\n        const uniqueDrives = Array.from(\r\n          new Set(\r\n            data.data\r\n              .filter(\r\n                product =>\r\n                  product.computerProperty &&\r\n                  product.computerProperty[0] &&\r\n                  product.computerProperty[0].drive\r\n              )\r\n              .map(product => normalizeDrive(product.computerProperty[0].drive))\r\n              .filter(drive => drive !== null)\r\n          )\r\n        ).sort((a, b) => {\r\n          const aMatch = a.match(/(\\d+)(TB|GB)/)\r\n          const bMatch = b.match(/(\\d+)(TB|GB)/)\r\n          if (aMatch && bMatch) {\r\n            const aSize = parseInt(aMatch[1]) * (aMatch[2] === 'TB' ? 1000 : 1)\r\n            const bSize = parseInt(bMatch[1]) * (bMatch[2] === 'TB' ? 1000 : 1)\r\n            return aSize - bSize\r\n          }\r\n          return a.localeCompare(b)\r\n        })\r\n        setDrives(uniqueDrives)\r\n\r\n        setFilteredProducts(data.data)\r\n      })\r\n      .catch(error => console.error('Error fetching initial data:', error))\r\n  }, [])\r\n\r\n  const applyFilters = currentFilters => {\r\n    let filteredResults = [...allProducts]\r\n\r\n    if (currentFilters.brand) {\r\n      filteredResults = filteredResults.filter(\r\n        product => product.brand.toUpperCase().trim() === currentFilters.brand\r\n      )\r\n    }\r\n\r\n    if (currentFilters.ram) {\r\n      filteredResults = filteredResults.filter(\r\n        product =>\r\n          product.computerProperty?.[0]?.ram &&\r\n          normalizeRam(product.computerProperty[0].ram) === currentFilters.ram\r\n      )\r\n    }\r\n\r\n    if (currentFilters.drive) {\r\n      filteredResults = filteredResults.filter(\r\n        product =>\r\n          product.computerProperty?.[0]?.drive &&\r\n          normalizeDrive(product.computerProperty[0].drive) ===\r\n            currentFilters.drive\r\n      )\r\n    }\r\n\r\n    filteredResults = filteredResults.filter(\r\n      product =>\r\n        product.price >= currentFilters.price[0] &&\r\n        product.price <= currentFilters.price[1]\r\n    )\r\n\r\n    if (filteredResults.length === 0) {\r\n      setShowNoResultsDialog(true)\r\n      setFilteredProducts([])\r\n    } else {\r\n      setShowNoResultsDialog(false)\r\n      setFilteredProducts(filteredResults)\r\n    }\r\n  }\r\n\r\n  const handleApplyClick = () => {\r\n    applyFilters(filters)\r\n  }\r\n\r\n  const resetFilters = () => {\r\n    const resetFilters = {\r\n      ram: '',\r\n      brand: '',\r\n      drive: '',\r\n      price: defaultPriceRange\r\n    }\r\n    setFilters(resetFilters)\r\n    setPriceRange(defaultPriceRange)\r\n    setShowNoResultsDialog(false)\r\n    applyFilters(resetFilters)\r\n  }\r\n\r\n  const resetPriceRange = () => {\r\n    setPriceRange(defaultPriceRange)\r\n    setFilters(prevFilters => ({\r\n      ...prevFilters,\r\n      price: defaultPriceRange\r\n    }))\r\n    applyFilters(filters)\r\n  }\r\n\r\n  const handleCheckboxChange = event => {\r\n    const { name, value, checked } = event.target\r\n    const updatedFilters = {\r\n      ...filters,\r\n      [name]: checked ? value : ''\r\n    }\r\n    setFilters(updatedFilters)\r\n    applyFilters(updatedFilters)\r\n  }\r\n\r\n  const handlePriceRangeChange = (event, newValue) => {\r\n    setPriceRange(newValue)\r\n  }\r\n\r\n  const handlePriceChange = (event, newValue) => {\r\n    setFilters(prevFilters => ({\r\n      ...prevFilters,\r\n      price: newValue\r\n    }))\r\n  }\r\n\r\n  const handleInputPriceChange = (event, index) => {\r\n    const value = event.target.value.replace(/[^0-9]/g, '')\r\n    const newPrice = [...filters.price]\r\n    newPrice[index] = parseFloat(value) || 0\r\n    const updatedFilters = {\r\n      ...filters,\r\n      price: newPrice\r\n    }\r\n    setFilters(updatedFilters)\r\n  }\r\n\r\n  const handleCloseDialog = () => {\r\n    setShowNoResultsDialog(false)\r\n  }\r\n\r\n  const [data, setData] = useState([])\r\n  const [records, setRecords] = useState([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [itemsPerPage] = useState(12)\r\n  const [pageNumberLimit, setpageNumberLimit] = useState(4)\r\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(4)\r\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0)\r\n  const [activeItem, setActiveItem] = useState('Item 2')\r\n  const [noResultsMessage, setNoResultsMessage] = useState(false)\r\n  const [searchParams, setSearchParams] = useSearchParams()\r\n\r\n  const handleClick = item => {\r\n    setActiveItem(item)\r\n  }\r\n\r\n  const formatPrice = price => {\r\n    return price.toLocaleString()\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true)\r\n      try {\r\n        const response = await axios.get(`${BASEURL}/api/v1/product/`)\r\n        const filtered = response.data.getAllProducts.filter(\r\n          user => user.category === 'Computer'\r\n        )\r\n        setData(filtered.reverse())\r\n        setRecords(filtered)\r\n        setIsLoading(false)\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error)\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (filteredProducts.length > 0) {\r\n      setRecords(filteredProducts)\r\n      setNoResultsMessage(false)\r\n    } else if (filteredProducts.length === 0 && isLoading) {\r\n      setRecords([])\r\n      setNoResultsMessage(true)\r\n    } else {\r\n      setRecords(data)\r\n      setNoResultsMessage(false)\r\n    }\r\n  }, [filteredProducts, isLoading, data])\r\n\r\n  useEffect(() => {\r\n    const page = parseInt(searchParams.get('page') || '1', 10)\r\n    setCurrentPage(page)\r\n  }, [searchParams])\r\n\r\n  const Filter = event => {\r\n    const searchTerm = event.target.value.toLowerCase()\r\n\r\n    if (searchTerm === '') {\r\n      setFilteredProducts([])\r\n      setNoResultsMessage(false)\r\n    } else {\r\n      const filtered = data.filter(product =>\r\n        product.name.toLowerCase().includes(searchTerm)\r\n      )\r\n\r\n      setFilteredProducts(filtered)\r\n\r\n      if (filtered.length === 0) {\r\n        setNoResultsMessage(true)\r\n      } else {\r\n        setNoResultsMessage(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const paginate = pageNumber => {\r\n    setCurrentPage(pageNumber)\r\n    setSearchParams({ page: pageNumber.toString() })\r\n  }\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage\r\n  const currentPosts = records.slice(indexOfFirstItem, indexOfLastItem)\r\n\r\n  const handleNextbtn = () => {\r\n    const nextPage = currentPage + 1\r\n    setCurrentPage(nextPage)\r\n    setSearchParams({ page: nextPage.toString() })\r\n\r\n    if (nextPage > maxPageNumberLimit) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit)\r\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit)\r\n    }\r\n  }\r\n\r\n  const handlePrevbtn = () => {\r\n    const prevPage = currentPage - 1\r\n    setCurrentPage(prevPage)\r\n    setSearchParams({ page: prevPage.toString() })\r\n\r\n    if ((prevPage - 1) % pageNumberLimit == 0) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit)\r\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit)\r\n    }\r\n  }\r\n  const displayedProducts =\r\n    currentPosts.length > 0 ? currentPosts : records.slice(0, itemsPerPage)\r\n\r\n  const { addItem } = useCart()\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Computers - Tech Solutions, Digital</title>\r\n        <meta name='robots' content='index,follow' />\r\n        <meta\r\n          name='description'\r\n          content='Shop through a wide selection of computers and laptops at Elonatech.'\r\n        />\r\n        <link rel='canonical' href='/computers' />\r\n        <meta name='keywords' content='computers, laptops, Elonatech' />\r\n      </Helmet>\r\n\r\n      <div class='container-fluid computers-section'>\r\n        <div class='text-content'>\r\n          <h2>Computers</h2>\r\n          <h5>\r\n            Have what you need to run your business with maximum efficiency and\r\n            reliability\r\n          </h5>\r\n          <p class='lead'>\r\n            Properly used, a computer can help you become more organized, work\r\n            more efficiently, and accomplish more tasks.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <main className='container-fluid custom-container'>\r\n        <div className='row g-0'>\r\n          <div className='col-md-9'>\r\n            <section className='ftco-section' id='skills-section'>\r\n              <div className='container custom-container'>\r\n                <div className='row justify-content-center pt-3 pb-4'>\r\n                  <div className='col-md-8 pt-4'>\r\n                    <h6>\r\n                      SHOWING <span className='text-danger'>{currentPage}</span>{' '}\r\n                      –{' '}\r\n                      <span className='text-danger'>\r\n                        {currentPage * itemsPerPage}\r\n                      </span>{' '}\r\n                      OF <span className='text-danger'>{data.length}</span>{' '}\r\n                      RESULTS\r\n                    </h6>\r\n                  </div>\r\n                  <div className='col-md-4 pt-3'>\r\n                    <input\r\n                      className='form-control'\r\n                      type='search'\r\n                      onChange={Filter}\r\n                      placeholder='Search'\r\n                      aria-label='Search'\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='row g-1 progress-circle'>\r\n                  {isLoading ? (\r\n                    <Loading />\r\n                  ) : displayedProducts.length > 0 ? (\r\n                    displayedProducts.map(product => {\r\n                      return (\r\n                        <div className='col-lg-3 mb-4' key={product.id}>\r\n                          <div className='mx-1 shadow-lg p-3 bg-body rounded showbutton'>\r\n                            <Link\r\n                              className='text-decoration-none text-dark'\r\n                              to={`/product/${product._id}?fromPage=${currentPage}`}\r\n                            >\r\n                              <div className='text-center take'>\r\n                                <LazyLoadImage\r\n                                  src={product.images[0]?.url}\r\n                                  placeholderSrc='https://res.cloudinary.com/elonatech/image/upload/v1710241889/loaderImage/blurred_o4delz.avif'\r\n                                  className='lazyload'\r\n                                  width='130'\r\n                                  height='130'\r\n                                  alt=''\r\n                                />\r\n                              </div>\r\n                              <h5 className='fw-normal pt-3 product-name'>\r\n                                {product.name.slice(0, 23)}...\r\n                              </h5>\r\n                              <p className='lead fs-6'>{product.category}</p>\r\n\r\n                              {/* Star Rating */}\r\n                              <div\r\n                                className='stars'\r\n                                style={{ color: 'black', marginBottom: '10px' }}\r\n                              >\r\n                                {[...Array(5)].map((star, index) => {\r\n                                  return (\r\n                                    <i\r\n                                      key={index}\r\n                                      className={\r\n                                        index < Math.floor(5)\r\n                                          ? 'bi bi-star-fill'\r\n                                          : 'bi bi-star'\r\n                                      }\r\n                                      style={{ color: '#f4be1d' }}\r\n                                    ></i>\r\n                                  )\r\n                                })}\r\n                              </div>\r\n\r\n                              <div className='d-flex justify-content-between'>\r\n                                <p className='mt-2 px-1 text-danger'>\r\n                                  <strong>\r\n                                    ₦ {Number(product.price).toLocaleString()}\r\n                                    .00\r\n                                  </strong>\r\n                                </p>\r\n                                <i\r\n                                  className='bi bi-cart p-1'\r\n                                  style={{\r\n                                    fontSize: '20px',\r\n                                    cursor: 'pointer'\r\n                                  }}\r\n                                ></i>\r\n                              </div>\r\n                            </Link>\r\n                            <div className='d-grid gap-2' key={product.id}>\r\n                              <div\r\n                                className='btn btn-outline add-to-cart'\r\n                                onClick={() => addItem(product)}\r\n                              >\r\n                                <h6 className='text-danger'>ADD TO CART</h6>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    })\r\n                  ) : (\r\n                    <h4>No products match your search criteria.</h4>\r\n                  )}\r\n                </div>\r\n\r\n                <div className='mt-5'>\r\n                  <Pagination\r\n                    totalPosts={records.length}\r\n                    itemsPerPage={itemsPerPage}\r\n                    maxPageNumberLimit={maxPageNumberLimit}\r\n                    minPageNumberLimit={minPageNumberLimit}\r\n                    currentPage={currentPage}\r\n                    id\r\n                    handleNextbtn={handleNextbtn}\r\n                    handlePrevbtn={handlePrevbtn}\r\n                    paginate={paginate}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </div>\r\n          <div className='col-md-3 pad '>\r\n            <div className='thix'>\r\n              <div className='browse'>\r\n              <form class='d-flex'></form>\r\n\r\n                <h4 className='fw-bold tyu'>Browse Categories</h4>\r\n                <ul className='list-unstyled'>\r\n                  <li>\r\n                    <Link\r\n                      to={'/shop'}\r\n                      className='text-dark'\r\n                      style={{ textDecoration: 'none' }}\r\n                      onMouseEnter={e =>\r\n                        (e.currentTarget.style.textDecoration = 'underline')\r\n                      }\r\n                      onMouseLeave={e =>\r\n                        (e.currentTarget.style.textDecoration = 'none')\r\n                      }\r\n                    >\r\n                      All Products\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      to={'/computers'}\r\n                      className={`item ${\r\n                        activeItem === 'Item 2' ? 'active-category' : ''\r\n                      }`}\r\n                      onClick={() => handleClick('Item 2')}\r\n                    >\r\n                      Computers\r\n                    </Link>\r\n                  </li>\r\n\r\n                  <li>\r\n                    <Link\r\n                      to={'/office-equipment'}\r\n                      className='text-dark'\r\n                      style={{ textDecoration: 'none' }}\r\n                      onMouseEnter={e =>\r\n                        (e.currentTarget.style.textDecoration = 'underline')\r\n                      }\r\n                      onMouseLeave={e =>\r\n                        (e.currentTarget.style.textDecoration = 'none')\r\n                      }\r\n                    >\r\n                      Office Equipment\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      to={'/pos-system'}\r\n                      className='text-dark'\r\n                      style={{ textDecoration: 'none' }}\r\n                      onMouseEnter={e =>\r\n                        (e.currentTarget.style.textDecoration = 'underline')\r\n                      }\r\n                      onMouseLeave={e =>\r\n                        (e.currentTarget.style.textDecoration = 'none')\r\n                      }\r\n                    >\r\n                      POS System\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      to={'/printers'}\r\n                      className='text-dark'\r\n                      style={{ textDecoration: 'none' }}\r\n                      onMouseEnter={e =>\r\n                        (e.currentTarget.style.textDecoration = 'underline')\r\n                      }\r\n                      onMouseLeave={e =>\r\n                        (e.currentTarget.style.textDecoration = 'none')\r\n                      }\r\n                    >\r\n                      Printers\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      to={'/network-devices'}\r\n                      className='text-dark'\r\n                      style={{ textDecoration: 'none' }}\r\n                      onMouseEnter={e =>\r\n                        (e.currentTarget.style.textDecoration = 'underline')\r\n                      }\r\n                      onMouseLeave={e =>\r\n                        (e.currentTarget.style.textDecoration = 'none')\r\n                      }\r\n                    >\r\n                      Network Devices\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n\r\n              <div className='price-filter price-mobile1' style={{ marginTop: '0'}}>\r\n                <h4 style={{ fontSize: '16px'}} className='fw-bold'>Filter by Price(₦)</h4>\r\n                <Slider\r\n                  className='slider'\r\n                  value={filters.price}\r\n                  onChange={handlePriceChange}\r\n                  min={priceRange[0]}\r\n                  max={priceRange[1]}\r\n                  step={5}\r\n                />\r\n\r\n                <div className='price-range-values'>\r\n                  <div style={{ width: '100%' }}>\r\n                    <input\r\n                      style={{ width: '100%', borderRadius: '5px' }}\r\n                      type='text'\r\n                      value={formatPrice(filters.price[0])}\r\n                      onChange={e => handleInputPriceChange(e, 0)}\r\n                      className='price-input'\r\n                    />\r\n                  </div>\r\n                  <span className='separator'>-</span>\r\n                  <div>\r\n                    <input\r\n                      style={{ width: '100%', borderRadius: '5px' }}\r\n                      type='text'\r\n                      value={formatPrice(filters.price[1])}\r\n                      onChange={e => handleInputPriceChange(e, 1)}\r\n                      className='price-input'\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className='btnd'>\r\n                  <button\r\n                    type='button'\r\n                    onClick={handleApplyClick}\r\n                    className='apply-btn'\r\n                    style={{ width: '100%' }}\r\n                  >\r\n                    Apply Price Range\r\n                  </button>\r\n                  <button\r\n                    type='button'\r\n                    onClick={resetPriceRange}\r\n                    className='reset-btn'\r\n                    style={{ width: '100%' }}\r\n                  >\r\n                    Reset Price Range\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                width: '60%',\r\n                display: isLoading === true ? 'none' : 'block'\r\n              }}\r\n              className='filter-section pt-2 rounded shadow-sm'\r\n            >\r\n              <h4 style={{ marginTop: '-8px' }} className='fw-bold shopyy'>\r\n                Sort Computers by\r\n              </h4>\r\n              <ComputerFilter setFilteredProducts={setFilteredProducts} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Computer\r\n"],"names":["_ref","totalPosts","itemsPerPage","maxPageNumberLimit","minPageNumberLimit","currentPage","paginate","handleNextbtn","handlePrevbtn","searchParams","setSearchParams","useSearchParams","pages","i","Math","ceil","push","productTop","window","scrollTo","top","left","behavior","renderPageNumbers","map","number","_jsx","className","children","onClick","page","toString","handlePageClick","pageIncrementBtn","length","pageDecrementBtn","_Fragment","_jsxs","handlePrevClick","handleNextClick","setFilteredProducts","filters","setFilters","useState","ram","brand","drive","price","noResultsMessage","setNoResultsMessage","priceRange","setPriceRange","defaultPriceRange","setDefaultPriceRange","brands","setBrands","rams","setRams","drives","setDrives","allProducts","setAllProducts","showNoResultsDialog","setShowNoResultsDialog","activeFilters","setActiveFilters","normalizeRam","ramString","match","toUpperCase","trim","normalizeDrive","driveString","includes","matchSSD","matchHDD","parseInt","capacityGB","type","useEffect","fetch","BASEURL","then","response","json","data","undefined","minPrice","maxPrice","fetchedMinPrice","fetchedMaxPrice","prevFilters","uniqueBrands","Array","from","Set","product","sort","a","b","localeCompare","sensitivity","uniqueRams","filter","computerProperty","uniqueDrives","aMatch","bMatch","catch","error","console","applyFilters","currentFilters","filteredResults","_product$computerProp","_product$computerProp2","_product$computerProp3","_product$computerProp4","currentActiveFilters","active","formatPrice","getActiveFilters","handleCheckboxChange","event","name","value","checked","target","updatedFilters","toLocaleString","handleInputPriceChange","index","replace","newPrice","parseFloat","handleCloseDialog","Dialog","open","onClose","DialogTitle","id","DialogContent","style","marginBottom","paddingLeft","DialogActions","padding","Button","resetFilters","variant","color","href","onChange","Slider","handlePriceChange","newValue","min","max","step","width","borderRadius","e","handleApplyClick","resetPriceRange","Computer","filteredProducts","reverse","setData","records","setRecords","isLoading","setIsLoading","setCurrentPage","pageNumberLimit","setpageNumberLimit","setmaxPageNumberLimit","setminPageNumberLimit","activeItem","setActiveItem","async","filtered","axios","get","getAllProducts","user","category","fetchData","indexOfLastItem","indexOfFirstItem","currentPosts","slice","displayedProducts","addItem","useCart","Helmet","content","rel","class","searchTerm","toLowerCase","placeholder","Loading","_product$images$","Link","to","_id","LazyLoadImage","src","images","url","placeholderSrc","height","alt","star","floor","Number","fontSize","cursor","Pagination","nextPage","prevPage","pageNumber","textDecoration","onMouseEnter","currentTarget","onMouseLeave","marginTop","display","ComputerFilter"],"sourceRoot":""}