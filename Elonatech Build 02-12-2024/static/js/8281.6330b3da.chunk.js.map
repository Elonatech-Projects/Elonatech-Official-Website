{"version":3,"file":"static/js/8281.6330b3da.chunk.js","mappings":"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","sources":["../node_modules/date-fns/differenceInCalendarMonths.js","../node_modules/date-fns/endOfDay.js","../node_modules/date-fns/endOfMonth.js","../node_modules/date-fns/isLastDayOfMonth.js","../node_modules/date-fns/differenceInMonths.js","../node_modules/date-fns/differenceInMilliseconds.js","../node_modules/date-fns/differenceInSeconds.js","../node_modules/date-fns/formatDistance.js","../node_modules/date-fns/formatDistanceToNow.js","components/blogDetails/Trial.jsx"],"sourcesContent":["import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link differenceInCalendarMonths} function options.\n */\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const yearsDiff = laterDate_.getFullYear() - earlierDate_.getFullYear();\n  const monthsDiff = laterDate_.getMonth() - earlierDate_.getMonth();\n\n  return yearsDiff * 12 + monthsDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfDay} function options.\n */\n\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport function endOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfDay;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfMonth} function options.\n */\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { endOfDay } from \"./endOfDay.js\";\nimport { endOfMonth } from \"./endOfMonth.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @param date - The date to check\n * @param options - An object with options\n *\n * @returns The date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport function isLastDayOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  return +endOfDay(_date, options) === +endOfMonth(_date, options);\n}\n\n// Fallback for modularized imports:\nexport default isLastDayOfMonth;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.js\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.js\";\n\n/**\n * The {@link differenceInMonths} function options.\n */\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(laterDate, earlierDate, options) {\n  const [laterDate_, workingLaterDate, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    laterDate,\n    earlierDate,\n  );\n\n  const sign = compareAsc(workingLaterDate, earlierDate_);\n  const difference = Math.abs(\n    differenceInCalendarMonths(workingLaterDate, earlierDate_),\n  );\n\n  if (difference < 1) return 0;\n\n  if (workingLaterDate.getMonth() === 1 && workingLaterDate.getDate() > 27)\n    workingLaterDate.setDate(30);\n\n  workingLaterDate.setMonth(workingLaterDate.getMonth() - sign * difference);\n\n  let isLastMonthNotFull = compareAsc(workingLaterDate, earlierDate_) === -sign;\n\n  if (\n    isLastDayOfMonth(laterDate_) &&\n    difference === 1 &&\n    compareAsc(laterDate_, earlierDate_) === 1\n  ) {\n    isLastMonthNotFull = false;\n  }\n\n  const result = sign * (difference - +isLastMonthNotFull);\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n *\n * @returns The number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport function differenceInMilliseconds(laterDate, earlierDate) {\n  return +toDate(laterDate) - +toDate(earlierDate);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMilliseconds;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.js\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.js\";\n\n/**\n * The {@link differenceInSeconds} function options.\n */\n\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nexport function differenceInSeconds(laterDate, earlierDate, options) {\n  const diff = differenceInMilliseconds(laterDate, earlierDate) / 1000;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInSeconds;\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { minutesInDay, minutesInMonth } from \"./constants.js\";\nimport { differenceInMonths } from \"./differenceInMonths.js\";\nimport { differenceInSeconds } from \"./differenceInSeconds.js\";\n\n/**\n * The {@link formatDistance} function options.\n */\n\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param laterDate - The date\n * @param earlierDate - The date to compare with\n * @param options - An object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `baseDate` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\nexport function formatDistance(laterDate, earlierDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n  const minutesInAlmostTwoDays = 2520;\n\n  const comparison = compareAsc(laterDate, earlierDate);\n\n  if (isNaN(comparison)) throw new RangeError(\"Invalid time value\");\n\n  const localizeOptions = Object.assign({}, options, {\n    addSuffix: options?.addSuffix,\n    comparison: comparison,\n  });\n\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    ...(comparison > 0 ? [earlierDate, laterDate] : [laterDate, earlierDate]),\n  );\n\n  const seconds = differenceInSeconds(earlierDate_, laterDate_);\n  const offsetInSeconds =\n    (getTimezoneOffsetInMilliseconds(earlierDate_) -\n      getTimezoneOffsetInMilliseconds(laterDate_)) /\n    1000;\n  const minutes = Math.round((seconds - offsetInSeconds) / 60);\n  let months;\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options?.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance(\"lessThanXSeconds\", 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance(\"lessThanXSeconds\", 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance(\"lessThanXSeconds\", 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance(\"halfAMinute\", 0, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n      }\n    }\n\n    // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n\n    // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance(\"aboutXHours\", 1, localizeOptions);\n\n    // 1.5 hrs up to 24 hrs\n  } else if (minutes < minutesInDay) {\n    const hours = Math.round(minutes / 60);\n    return locale.formatDistance(\"aboutXHours\", hours, localizeOptions);\n\n    // 1 day up to 1.75 days\n  } else if (minutes < minutesInAlmostTwoDays) {\n    return locale.formatDistance(\"xDays\", 1, localizeOptions);\n\n    // 1.75 days up to 30 days\n  } else if (minutes < minutesInMonth) {\n    const days = Math.round(minutes / minutesInDay);\n    return locale.formatDistance(\"xDays\", days, localizeOptions);\n\n    // 1 month up to 2 months\n  } else if (minutes < minutesInMonth * 2) {\n    months = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"aboutXMonths\", months, localizeOptions);\n  }\n\n  months = differenceInMonths(earlierDate_, laterDate_);\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    const nearestMonth = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"xMonths\", nearestMonth, localizeOptions);\n\n    // 1 year up to max Date\n  } else {\n    const monthsSinceStartOfYear = months % 12;\n    const years = Math.trunc(months / 12);\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance(\"aboutXYears\", years, localizeOptions);\n\n      // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance(\"overXYears\", years, localizeOptions);\n\n      // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance(\"almostXYears\", years + 1, localizeOptions);\n    }\n  }\n}\n\n// Fallback for modularized imports:\nexport default formatDistance;\n","import { constructNow } from \"./constructNow.js\";\n\nimport { formatDistance } from \"./formatDistance.js\";\n\n/**\n * The {@link formatDistanceToNow} function options.\n */\n\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * @param date - The given date\n * @param options - The object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nexport function formatDistanceToNow(date, options) {\n  return formatDistance(date, constructNow(date), options);\n}\n\n// Fallback for modularized imports:\nexport default formatDistanceToNow;\n","import React, { useState } from 'react'\r\nimport { BsTrash, BsReply } from 'react-icons/bs'\r\nimport { formatDistanceToNow } from 'date-fns'\r\nimport EmojiPicker from 'emoji-picker-react'\r\n\r\nconst Trial = () => {\r\n  const [comments, setComments] = useState([])\r\n  const [newComment, setNewComment] = useState('')\r\n  const [newReply, setNewReply] = useState('')\r\n  const [activeReplyId, setActiveReplyId] = useState(null)\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false)\r\n  const [selectedEmoji, setSelectedEmoji] = useState(null)\r\n  const [name, setName] = useState('')\r\n  const [gender, setGender] = useState('male')\r\n  const [replies, setReplies] = useState({})\r\n\r\n  const handleCommentSubmit = e => {\r\n    e.preventDefault()\r\n    // Add the selectedEmoji to the new comment content\r\n    const newCommentData = {\r\n      content: newComment + selectedEmoji, // Concatenate emoji\r\n      createdAt: new Date(),\r\n      name,\r\n      gender\r\n    }\r\n    setComments([...comments, newCommentData])\r\n    setNewComment('')\r\n    setSelectedEmoji(null) // Reset selected emoji\r\n  }\r\n\r\n  const handleDeleteComment = commentId => {\r\n    setComments(comments.filter(comment => comment._id !== commentId))\r\n  }\r\n\r\n  const handleReplySubmit = (e, commentId) => {\r\n    e.preventDefault()\r\n    const newReplyData = {\r\n      content: newReply,\r\n      createdAt: new Date()\r\n    }\r\n    setReplies(prevReplies => ({\r\n      ...prevReplies,\r\n      [commentId]: prevReplies[commentId]\r\n        ? [...prevReplies[commentId], newReplyData]\r\n        : [newReplyData]\r\n    }))\r\n    setNewReply('')\r\n    setActiveReplyId(null)\r\n  }\r\n\r\n  const handleDeleteReply = (commentId, replyId) => {\r\n    setComments(\r\n      comments.map(comment =>\r\n        comment._id === commentId\r\n          ? {\r\n              ...comment,\r\n              replies: comment.replies.filter(reply => reply._id !== replyId)\r\n            }\r\n          : comment\r\n      )\r\n    )\r\n  }\r\n\r\n  const handleReplyToggle = commentId => {\r\n    setActiveReplyId(activeReplyId === commentId ? null : commentId)\r\n  }\r\n\r\n  //   const handleEmojiClick = (emojiObject, event) => {\r\n  //     setSelectedEmoji(emojiObject.emoji)\r\n  //     setShowEmojiPicker(false)\r\n  //   }\r\n\r\n  const handleEmojiPickerToggle = () => {\r\n    setShowEmojiPicker(!showEmojiPicker)\r\n  }\r\n\r\n  const handleNameChange = e => {\r\n    setName(e.target.value)\r\n  }\r\n\r\n  const handleGenderChange = e => {\r\n    setGender(e.target.value)\r\n  }\r\n\r\n  const handleEmojiClick = (emojiObject, event) => {\r\n    // Update newComment by adding the selected emoji\r\n    setNewComment(newComment + emojiObject.emoji)\r\n    setShowEmojiPicker(false)\r\n  }\r\n\r\n  return (\r\n    <div className='blog-comments-container'>\r\n      <h3>Comments</h3>\r\n      <form onSubmit={handleCommentSubmit} className='comment-form'>\r\n        <div className='comment-form-input'>\r\n          <input\r\n            type='text'\r\n            value={name}\r\n            onChange={handleNameChange}\r\n            placeholder='Your Name'\r\n            required\r\n          />\r\n          <div className='gender-radio'>\r\n            <label htmlFor='male'>Male</label>\r\n            <input\r\n              type='radio'\r\n              id='male'\r\n              name='gender'\r\n              value='male'\r\n              checked={gender === 'male'}\r\n              onChange={handleGenderChange}\r\n            />\r\n            <label htmlFor='female'>Female</label>\r\n            <input\r\n              type='radio'\r\n              id='female'\r\n              name='gender'\r\n              value='female'\r\n              checked={gender === 'female'}\r\n              onChange={handleGenderChange}\r\n            />\r\n          </div>\r\n          <textarea\r\n            value={newComment}\r\n            onChange={e => setNewComment(e.target.value)}\r\n            placeholder='Write a comment...'\r\n            required\r\n          />\r\n          <div className='emoji-trigger'>\r\n            <button type='button' onClick={handleEmojiPickerToggle}>\r\n              {/* Your Emoji Icon */}A\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <button type='submit'>Submit</button>\r\n        {showEmojiPicker && <EmojiPicker onEmojiClick={handleEmojiClick} />}\r\n      </form>\r\n\r\n      <div className='comments-list'>\r\n        {comments.map(comment => (\r\n          <div key={comment._id} className='comment'>\r\n            <div className='comment-header'>\r\n              <div className='comment-profile'>\r\n                {/* Your Default Profile Picture */}\r\n              </div>\r\n              <div className='comment-author-info'>\r\n                <span className='comment-author'>{comment.name}</span>\r\n                <span className='comment-date'>\r\n                  {formatDistanceToNow(new Date(comment.createdAt))} ago\r\n                </span>\r\n              </div>\r\n              <button\r\n                className='delete-comment'\r\n                onClick={() => handleDeleteComment(comment._id)}\r\n              >\r\n                <BsTrash />\r\n              </button>\r\n            </div>\r\n\r\n            <div className='comment-content'>{comment.content}</div>\r\n            <div className='replies-container'>\r\n              {/* This part was modified to access and display replies */}\r\n              {comment._id in replies\r\n                ? replies[comment._id].map(reply => (\r\n                    <div key={reply._id} className='reply'>\r\n                      <div className='reply-header'>\r\n                        <span className='reply-author'>Anonymous</span>\r\n                        <span className='reply-date'>\r\n                          {formatDistanceToNow(new Date(reply.createdAt))} ago\r\n                        </span>\r\n                        <button\r\n                          className='delete-reply'\r\n                          onClick={() =>\r\n                            handleDeleteReply(comment._id, reply._id)\r\n                          }\r\n                        >\r\n                          <BsTrash />\r\n                        </button>\r\n                      </div>\r\n                      <div className='reply-content'>{reply.content}</div>\r\n                    </div>\r\n                  ))\r\n                : null}\r\n              <form\r\n                onSubmit={e => handleReplySubmit(e, comment._id)}\r\n                className={`reply-form ${\r\n                  activeReplyId === comment._id ? 'active' : ''\r\n                }`}\r\n              >\r\n                <textarea\r\n                  value={newReply}\r\n                  onChange={e => setNewReply(e.target.value)}\r\n                  placeholder='Write a reply...'\r\n                  required\r\n                />\r\n\r\n                <div className='reply-form-actions'>\r\n                  <button type='submit'>Submit</button>\r\n                  <button\r\n                    type='button'\r\n                    onClick={() => handleReplyToggle(comment._id)}\r\n                  >\r\n                    <BsReply /> Reply\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n;<style jsx>\r\n  {`\r\n    .blog-comments-container {\r\n      margin-top: 1000px;\r\n    }\r\n  `}\r\n</style>\r\n\r\nexport default Trial\r\n"],"names":["differenceInCalendarMonths","laterDate","earlierDate","options","laterDate_","earlierDate_","normalizeDates","in","getFullYear","getMonth","endOfDay","date","_date","toDate","setHours","endOfMonth","month","setFullYear","isLastDayOfMonth","differenceInMonths","workingLaterDate","sign","compareAsc","difference","Math","abs","getDate","setDate","setMonth","isLastMonthNotFull","result","differenceInMilliseconds","differenceInSeconds","diff","getRoundingMethod","roundingMethod","formatDistance","defaultOptions","getDefaultOptions","locale","defaultLocale","comparison","isNaN","RangeError","localizeOptions","Object","assign","addSuffix","seconds","offsetInSeconds","getTimezoneOffsetInMilliseconds","minutes","round","months","includeSeconds","minutesInDay","hours","minutesInMonth","days","nearestMonth","monthsSinceStartOfYear","years","trunc","formatDistanceToNow","constructNow","Trial","comments","setComments","useState","newComment","setNewComment","newReply","setNewReply","activeReplyId","setActiveReplyId","showEmojiPicker","setShowEmojiPicker","selectedEmoji","setSelectedEmoji","name","setName","gender","setGender","replies","setReplies","handleGenderChange","e","target","value","_jsxs","className","children","_jsx","onSubmit","preventDefault","newCommentData","content","createdAt","Date","type","onChange","placeholder","required","htmlFor","id","checked","onClick","handleEmojiPickerToggle","EmojiPicker","onEmojiClick","handleEmojiClick","emojiObject","event","emoji","map","comment","handleDeleteComment","commentId","_id","filter","BsTrash","reply","handleDeleteReply","replyId","handleReplySubmit","newReplyData","prevReplies","handleReplyToggle","BsReply"],"sourceRoot":""}