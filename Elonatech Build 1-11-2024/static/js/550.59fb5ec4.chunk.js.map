{"version":3,"file":"static/js/550.59fb5ec4.chunk.js","mappings":"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","sources":["components/Pagination/Pagination.jsx","pages/sales/computer/computerFilter.jsx","pages/sales/computer/computer.jsx"],"sourcesContent":["import { Link, useSearchParams } from \"react-router-dom\";\r\nimport './pagination.css';\r\n\r\nconst Pagination = ({ totalPosts, itemsPerPage, maxPageNumberLimit, minPageNumberLimit, currentPage, paginate, handleNextbtn, handlePrevbtn }) => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const pages = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / itemsPerPage); i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  const productTop = () => {\r\n    window.scrollTo({top: 0, left: 0, behavior: \"smooth\"})\r\n  }\r\n\r\n  const handlePageClick = (number) => {\r\n    paginate(number);\r\n    setSearchParams({ page: number.toString() });\r\n    productTop();\r\n  }\r\n\r\n  const renderPageNumbers = pages.map((number) => {\r\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n      return (\r\n        <li key={number} className={`page-item ${currentPage === number ? \"active\" : \"\"}`}>\r\n          <a onClick={() => handlePageClick(number)} className=\"page-link v-cursor\">{number}</a>  \r\n        </li>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  let pageIncrementBtn = null;\r\n  if (pages.length > maxPageNumberLimit) {\r\n    pageIncrementBtn = <li className=\"page-link v-cursor\" onClick={handleNextbtn}> &hellip; </li>;\r\n  }\r\n\r\n  let pageDecrementBtn = null;\r\n  if (minPageNumberLimit >= 1) {\r\n    pageDecrementBtn = <li className=\"page-link v-cursor\" onClick={handlePrevbtn}> &hellip; </li>;\r\n  }\r\n\r\n  const handlePrevClick = () => {\r\n    if (currentPage > 1) {\r\n      handlePrevbtn();\r\n      setSearchParams({ page: (currentPage - 1).toString() });\r\n      productTop();\r\n    }\r\n  }\r\n\r\n  const handleNextClick = () => {\r\n    if (currentPage < pages.length) {\r\n      handleNextbtn();\r\n      setSearchParams({ page: (currentPage + 1).toString() });\r\n      productTop();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"pagination justify-content-center mb-5\">\r\n        <li className={`page-item ${currentPage === 1 ? \"disabled\" : \"\"}`}>\r\n          <a className=\"page-link\" onClick={handlePrevClick}>Prev</a>\r\n        </li>\r\n        {pageDecrementBtn}\r\n        {renderPageNumbers}\r\n        {pageIncrementBtn}\r\n        <li className={`page-item ${currentPage === pages.length ? \"disabled\" : \"\"}`}>\r\n          <a className=\"page-link\" onClick={handleNextClick}>Next</a>\r\n        </li>\r\n      </ul>     \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Pagination;","import \"./computerFilter.css\"; \r\nimport React, { useState, useEffect } from \"react\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport { BASEURL } from \"../../../BaseURL/BaseURL\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst ComputerFilter = ({ setFilteredProducts }) => {\r\n  const [filters, setFilters] = useState({\r\n    ram: \"\",\r\n    brand: \"\",\r\n    drive: \"\",\r\n    price: [0, 1000000]\r\n  });\r\n  const [noResultsMessage, setNoResultsMessage] = useState(\"\");\r\n  const [priceRange, setPriceRange] = useState([0, 1000000]); \r\n  const [defaultPriceRange, setDefaultPriceRange] = useState([0, 1000000]); \r\n  const [brands, setBrands] = useState([]);\r\n  const [rams, setRams] = useState([]); \r\n  const [drives, setDrives] = useState([]);\r\n  const [allProducts, setAllProducts] = useState([]); \r\n  const [showNoResultsDialog, setShowNoResultsDialog] = useState(false);\r\n  const [activeFilters, setActiveFilters] = useState([]);\r\n\r\n  const normalizeRam = (ramString) => {\r\n    if (!ramString) return null;\r\n    const ram = ramString.toUpperCase().trim();\r\n    const match = ram.match(/(\\d+)\\s*(?:GB|G)?/i);\r\n    if (match) {\r\n      const number = match[1];\r\n      return `${number}GB RAM`;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const normalizeDrive = (driveString) => {\r\n    if (!driveString) return null;\r\n    const drive = driveString.toUpperCase().trim();\r\n    \r\n    if (drive.includes('PCIE') || drive.includes('RAM,')) {\r\n      return null;\r\n    }\r\n    \r\n    const matchSSD = drive.match(/(\\d+)\\s*(?:GB|G|TB|T)?\\s*(?:SSD)?/i);\r\n    const matchHDD = drive.match(/(\\d+)\\s*(?:GB|G|TB|T)?\\s*(?:HDD)?/i);\r\n    \r\n    if (matchSSD || matchHDD) {\r\n      const match = matchSSD || matchHDD;\r\n      const number = parseInt(match[1]);\r\n      const isTerabyte = drive.includes('TB') || drive.includes('T');\r\n      const capacityGB = isTerabyte ? number * 1024 : number;\r\n      \r\n      const type = drive.includes('HDD') ? 'HDD' : 'SSD';\r\n      \r\n      if (type === 'SSD' && (capacityGB < 128 || capacityGB > 4096)) {\r\n        return null;\r\n      }\r\n      if (type === 'HDD' && (capacityGB < 500 || capacityGB > 18432)) {\r\n        return null;\r\n      }\r\n      \r\n      if (capacityGB >= 1024) {\r\n        return `${(capacityGB / 1024)}TB ${type}`;\r\n      }\r\n      return `${capacityGB}GB ${type}`;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(`${BASEURL}/api/v1/product/filter?category=Computer`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Store all products for local filtering\r\n        setAllProducts(data.data);\r\n\r\n        if (data.minPrice !== undefined && data.maxPrice !== undefined) {\r\n          const fetchedMinPrice = data.minPrice;\r\n          const fetchedMaxPrice = data.maxPrice;\r\n          setDefaultPriceRange([fetchedMinPrice, fetchedMaxPrice]);\r\n          setPriceRange([fetchedMinPrice, fetchedMaxPrice]);\r\n          setFilters((prevFilters) => ({\r\n            ...prevFilters,\r\n            price: [fetchedMinPrice, fetchedMaxPrice] \r\n          }));\r\n        }\r\n\r\n        // Set up filter options\r\n        const uniqueBrands = Array.from(new Set(data.data\r\n          .map(product => product.brand.toUpperCase().trim())))\r\n          .sort((a, b) => a.localeCompare(b, undefined, { sensitivity: 'base' }));\r\n        setBrands(uniqueBrands);\r\n\r\n        const uniqueRams = Array.from(new Set(data.data\r\n          .filter(product => product.computerProperty && \r\n                           product.computerProperty[0] && \r\n                           product.computerProperty[0].ram)\r\n          .map(product => normalizeRam(product.computerProperty[0].ram))\r\n          .filter(ram => ram !== null)))\r\n          .sort((a, b) => {\r\n            const aSize = parseInt(a.match(/\\d+/)[0]);\r\n            const bSize = parseInt(b.match(/\\d+/)[0]);\r\n            return aSize - bSize;\r\n          });\r\n        setRams(uniqueRams);\r\n\r\n        const uniqueDrives = Array.from(new Set(data.data\r\n          .filter(product => product.computerProperty && \r\n                           product.computerProperty[0] && \r\n                           product.computerProperty[0].drive)\r\n          .map(product => normalizeDrive(product.computerProperty[0].drive))\r\n          .filter(drive => drive !== null)))\r\n          .sort((a, b) => {\r\n            const aMatch = a.match(/(\\d+)(TB|GB)/);\r\n            const bMatch = b.match(/(\\d+)(TB|GB)/);\r\n            if (aMatch && bMatch) {\r\n              const aSize = parseInt(aMatch[1]) * (aMatch[2] === 'TB' ? 1000 : 1);\r\n              const bSize = parseInt(bMatch[1]) * (bMatch[2] === 'TB' ? 1000 : 1);\r\n              return aSize - bSize;\r\n            }\r\n            return a.localeCompare(b);\r\n          });\r\n        setDrives(uniqueDrives);\r\n\r\n        setFilteredProducts(data.data);\r\n        setNoResultsMessage(\"\");\r\n      })\r\n      .catch((error) => console.error(\"Error fetching initial data:\", error));\r\n  }, [setFilteredProducts]);\r\n\r\n\r\n  const getActiveFilters = (currentFilters) => {\r\n    const active = [];\r\n    if (currentFilters.brand) active.push(`Brand: ${currentFilters.brand}`);\r\n    if (currentFilters.ram) active.push(`RAM: ${currentFilters.ram}`);\r\n    if (currentFilters.drive) active.push(`Drive: ${currentFilters.drive}`);\r\n    if (currentFilters.price[0] !== defaultPriceRange[0] || \r\n        currentFilters.price[1] !== defaultPriceRange[1]) {\r\n      active.push(`Price Range: ₦${formatPrice(currentFilters.price[0])} - ₦${formatPrice(currentFilters.price[1])}`);\r\n    }\r\n    return active;\r\n  };\r\n\r\n  const applyFilters = (currentFilters) => {\r\n    let filteredResults = [...allProducts];\r\n\r\n    // Apply brand filter\r\n    if (currentFilters.brand) {\r\n      filteredResults = filteredResults.filter(\r\n        product => product.brand.toUpperCase().trim() === currentFilters.brand\r\n      );\r\n    }\r\n\r\n    // Apply RAM filter\r\n    if (currentFilters.ram) {\r\n      filteredResults = filteredResults.filter(product => \r\n        product.computerProperty?.[0]?.ram &&\r\n        normalizeRam(product.computerProperty[0].ram) === currentFilters.ram\r\n      );\r\n    }\r\n\r\n    // Apply drive filter\r\n    if (currentFilters.drive) {\r\n      filteredResults = filteredResults.filter(product =>\r\n        product.computerProperty?.[0]?.drive &&\r\n        normalizeDrive(product.computerProperty[0].drive) === currentFilters.drive\r\n      );\r\n    }\r\n\r\n    // Apply price filter\r\n    filteredResults = filteredResults.filter(product =>\r\n      product.price >= currentFilters.price[0] &&\r\n      product.price <= currentFilters.price[1]\r\n    );\r\n\r\n    // Update active filters\r\n    const currentActiveFilters = getActiveFilters(currentFilters);\r\n    setActiveFilters(currentActiveFilters);\r\n\r\n    // Check if we have any results\r\n    if (filteredResults.length === 0 && currentActiveFilters.length > 0) {\r\n      setNoResultsMessage(\"No products match your selected filters.\");\r\n      setShowNoResultsDialog(true);\r\n      setFilteredProducts([]);\r\n    } else {\r\n      setNoResultsMessage(\"\");\r\n      setShowNoResultsDialog(false);\r\n      setFilteredProducts(filteredResults);\r\n    }\r\n  };\r\n\r\n  const handleApplyClick = () => {\r\n    applyFilters(filters);\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    const resetFilters = {\r\n      ram: \"\",\r\n      brand: \"\",\r\n      drive: \"\",\r\n      price: defaultPriceRange\r\n    };\r\n    setFilters(resetFilters);\r\n    setPriceRange(defaultPriceRange);\r\n    setShowNoResultsDialog(false);\r\n    applyFilters(resetFilters);\r\n  };\r\n\r\n  // const applyFilters = (currentFilters) => {\r\n  //   // Start with all products\r\n  //   let filteredResults = [...allProducts];\r\n\r\n  //   // Apply brand filter\r\n  //   if (currentFilters.brand) {\r\n  //     filteredResults = filteredResults.filter(\r\n  //       product => product.brand.toUpperCase().trim() === currentFilters.brand\r\n  //     );\r\n  //   }\r\n\r\n  //   // Apply RAM filter\r\n  //   if (currentFilters.ram) {\r\n  //     filteredResults = filteredResults.filter(product => \r\n  //       product.computerProperty?.[0]?.ram &&\r\n  //       normalizeRam(product.computerProperty[0].ram) === currentFilters.ram\r\n  //     );\r\n  //   }\r\n\r\n  //   // Apply drive filter\r\n  //   if (currentFilters.drive) {\r\n  //     filteredResults = filteredResults.filter(product =>\r\n  //       product.computerProperty?.[0]?.drive &&\r\n  //       normalizeDrive(product.computerProperty[0].drive) === currentFilters.drive\r\n  //     );\r\n  //   }\r\n\r\n  //   // Apply price filter\r\n  //   filteredResults = filteredResults.filter(product =>\r\n  //     product.price >= currentFilters.price[0] &&\r\n  //     product.price <= currentFilters.price[1]\r\n  //   );\r\n\r\n  //   // Check if we have any results\r\n  //   if (filteredResults.length === 0) {\r\n  //     setNoResultsMessage(\"No products match your selected filters.\");\r\n  //     setFilteredProducts([]);\r\n  //   } else {\r\n  //     setNoResultsMessage(\"\");\r\n  //     setFilteredProducts(filteredResults);\r\n  //   }\r\n  // };\r\n\r\n  const resetPriceRange = () => {\r\n    setPriceRange(defaultPriceRange);\r\n    const updatedFilters = {\r\n      ...filters,\r\n      price: defaultPriceRange\r\n    };\r\n    setFilters(updatedFilters);\r\n    applyFilters(updatedFilters);\r\n  };\r\n\r\n  const handleCheckboxChange = (event) => {\r\n    const { name, value, checked } = event.target;\r\n    const updatedFilters = {\r\n      ...filters,\r\n      [name]: checked ? value : \"\"\r\n    };\r\n    setFilters(updatedFilters);\r\n    applyFilters(updatedFilters);\r\n  };\r\n\r\n  const handlePriceRangeChange = (event, newValue) => {\r\n    setPriceRange(newValue);\r\n  };\r\n\r\n  // const handlePriceChange = (event, newValue) => {\r\n  //   const updatedFilters = {\r\n  //     ...filters,\r\n  //     price: newValue\r\n  //   };\r\n  //   setFilters(updatedFilters);\r\n  //   applyFilters(updatedFilters);\r\n  // };\r\n\r\n  const handlePriceChange = (event, newValue) => {\r\n    setFilters((prevFilters) => ({\r\n      ...prevFilters,\r\n      price: newValue,\r\n    }));\r\n  };\r\n\r\n  const formatPrice = (price) => {\r\n    return price.toLocaleString();\r\n  };\r\n\r\n  const handleInputPriceChange = (event, index) => {\r\n    const value = event.target.value.replace(/[^0-9]/g, \"\");\r\n    const newPrice = [...filters.price];\r\n    newPrice[index] = parseFloat(value) || 0;\r\n    const updatedFilters = {\r\n      ...filters,\r\n      price: newPrice\r\n    };\r\n    setFilters(updatedFilters);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setShowNoResultsDialog(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"computer-filter\">\r\n      {/* No Results Dialog */}\r\n      <Dialog\r\n        open={showNoResultsDialog}\r\n        onClose={handleCloseDialog}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          No Products Found\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div id=\"alert-dialog-description\">\r\n            <p style={{ marginBottom: '10px' }}>No products match your current filter criteria:</p>\r\n            <ul style={{ paddingLeft: '20px', marginBottom: '10px' }}>\r\n              {activeFilters.map((filter, index) => (\r\n                <li key={index} style={{ marginBottom: '5px' }}>{filter}</li>\r\n              ))}\r\n            </ul>\r\n            <p>Would you like to reset your filters and try again?</p>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions style={{ padding: '16px' }}>\r\n          <Button \r\n            onClick={resetFilters} \r\n            variant=\"contained\" \r\n            color=\"primary\"\r\n          >\r\n            Reset All Filters\r\n          </Button>\r\n          <Button \r\n            onClick={handleCloseDialog} \r\n            variant=\"outlined\"\r\n          >\r\n            Keep Filters\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Existing warning message */}\r\n      {noResultsMessage && (\r\n        <div className=\"no-results-message alert alert-info\">\r\n          <p>{noResultsMessage}</p>\r\n          <p>\r\n            Please adjust your filters or go back to the <a href=\"/computers\">Computer page</a> to explore\r\n            more products.\r\n          </p>\r\n        </div>\r\n      )}\r\n      <form>\r\n        {/* Brand Filter */}\r\n        <div className=\"filter-section brand-mobile\">\r\n          <label className=\"form-label\">Brand:</label>\r\n          <div className=\"filter-options\">\r\n            {brands.map((brand) => (\r\n              <div className=\"form-check\" key={brand}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"brand\"\r\n                  value={brand}\r\n                  onChange={handleCheckboxChange}\r\n                  checked={filters.brand === brand}\r\n                  className=\"form-check-input\"\r\n                />\r\n                <label className=\"form-check-label\">{brand}</label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* RAM Filter */}\r\n        <div className=\"filter-section ram-mobile\">\r\n          <label className=\"form-label\">RAM:</label>\r\n          <div className=\"filter-options\">\r\n            {rams.map((ram) => (\r\n              <div className=\"form-check\" key={ram}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"ram\"\r\n                  value={ram}\r\n                  onChange={handleCheckboxChange}\r\n                  checked={filters.ram === ram}\r\n                  className=\"form-check-input\"\r\n                />\r\n                <label className=\"form-check-label\">{ram}</label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Drive Filter */}\r\n        <div className=\"filter-section drive-mobile\">\r\n          <label className=\"form-label\">Drive:</label>\r\n          <div className=\"filter-options\">\r\n            {drives.map((drive) => (\r\n              <div className=\"form-check\" key={drive}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"drive\"\r\n                  value={drive}\r\n                  onChange={handleCheckboxChange}\r\n                  checked={filters.drive === drive}\r\n                  className=\"form-check-input\"\r\n                />\r\n                <label className=\"form-check-label\">{drive}</label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Price Filter */}\r\n        <div className=\"price-filter price-mobile\">\r\n          <label className=\"form-label\">Filter by Price(₦)</label>\r\n          <Slider\r\n            className=\"custom-slider\"\r\n            value={filters.price}\r\n            onChange={handlePriceChange}\r\n            min={priceRange[0]}\r\n            max={priceRange[1]}\r\n            step={5}\r\n          />\r\n          <div className=\"price-range-values\">\r\n            <input\r\n              style={{ width: \"50%\", borderRadius: \"5px\" }}\r\n              type=\"text\"\r\n              value={formatPrice(filters.price[0])}\r\n              onChange={(e) => handleInputPriceChange(e, 0)}\r\n              className=\"price-input\"\r\n            />\r\n            <span className=\"separator\">-</span>\r\n            <input\r\n              style={{ width: \"50%\", borderRadius: \"5px\" }}\r\n              type=\"text\"\r\n              value={formatPrice(filters.price[1])}\r\n              onChange={(e) => handleInputPriceChange(e, 1)}\r\n              className=\"price-input\"\r\n            />\r\n          </div>\r\n          <div className=\"expand\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleApplyClick}\r\n              className=\"apply-btn\"\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              Apply Price Range\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={resetPriceRange}\r\n              className=\"reset-btn\"\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              Reset Price Range\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComputerFilter;","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useSearchParams } from \"react-router-dom\";\r\nimport Pagination from \"./../../../components/Pagination/Pagination\";\r\nimport { BASEURL } from \"../../../BaseURL/BaseURL\";\r\nimport Loading from \"../../../components/Loading/Loading\";\r\nimport axios from \"axios\";\r\nimport {\r\n  LazyLoadImage,\r\n  trackWindowScroll\r\n} from \"react-lazy-load-image-component\";\r\nimport { useCart } from \"react-use-cart\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport \"rc-slider/assets/index.css\";\r\nimport ComputerFilter from \"./computerFilter\";\r\nimport \"./computer.css\"\r\n\r\nconst Computer = () => {\r\n  const [data, setData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(12);\r\n  const [pageNumberLimit, setpageNumberLimit] = useState(4);\r\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(4);\r\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [activeItem, setActiveItem] = useState(\"Item 2\");\r\n  const [noResultsMessage, setNoResultsMessage] = useState(false);\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const handleClick = (item) => {\r\n    setActiveItem(item);\r\n  };\r\n\r\n  const formatPrice = (price) => {\r\n    return price.toLocaleString();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await axios.get(`${BASEURL}/api/v1/product/`);\r\n        const filtered = response.data.getAllProducts.filter(user => user.category === 'Computer');\r\n        setData(filtered.reverse());\r\n        setRecords(filtered);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (filteredProducts.length > 0) {\r\n      setRecords(filteredProducts);\r\n      setNoResultsMessage(false);\r\n    } else if (filteredProducts.length === 0 && isLoading) {\r\n      setRecords([]);\r\n      setNoResultsMessage(true);\r\n    } else {\r\n      setRecords(data);\r\n      setNoResultsMessage(false);\r\n    }\r\n  }, [filteredProducts, isLoading, data]);\r\n\r\n  useEffect(() => {\r\n    const page = parseInt(searchParams.get('page') || '1', 10);\r\n    setCurrentPage(page);\r\n  }, [searchParams]);\r\n\r\n  const Filter = (event) => {\r\n    const searchTerm = event.target.value.toLowerCase();\r\n\r\n    if (searchTerm === \"\") {\r\n      setFilteredProducts([]);\r\n      setNoResultsMessage(false);\r\n    } else {\r\n      const filtered = data.filter((product) =>\r\n        product.name.toLowerCase().includes(searchTerm)\r\n      );\r\n\r\n      setFilteredProducts(filtered);\r\n\r\n      if (filtered.length === 0) {\r\n        setNoResultsMessage(true);\r\n      } else {\r\n        setNoResultsMessage(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n    setSearchParams({ page: pageNumber.toString() });\r\n  };\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentPosts = records.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const handleNextbtn = () => {\r\n    const nextPage = currentPage + 1;\r\n    setCurrentPage(nextPage);\r\n    setSearchParams({ page: nextPage.toString() });\r\n\r\n    if (nextPage > maxPageNumberLimit) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n    }\r\n  };\r\n\r\n  const handlePrevbtn = () => {\r\n    const prevPage = currentPage - 1;\r\n    setCurrentPage(prevPage);\r\n    setSearchParams({ page: prevPage.toString() });\r\n\r\n    if ((prevPage - 1) % pageNumberLimit == 0) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n    }\r\n  };\r\n  const displayedProducts =\r\n    currentPosts.length > 0 ? currentPosts : records.slice(0, itemsPerPage);\r\n\r\n  const { addItem } = useCart();\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Computers - Tech Solutions, Digital</title>\r\n        <meta name=\"robots\" content=\"index,follow\" />\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Shop through a wide selection of computers and laptops at Elonatech.\"\r\n        />\r\n        <link rel=\"canonical\" href=\"/computers\" />\r\n        <meta\r\n          name=\"keywords\"\r\n          content=\"computers, laptops, Elonatech\"\r\n        />\r\n      </Helmet>\r\n\r\n      <div class=\"container-fluid computers-section\">\r\n        <div class=\"text-content\">\r\n          <h2>Computers</h2>\r\n          <h5>Have what you need to run your business with maximum efficiency and reliability</h5>\r\n          <p class=\"lead\">Properly used, a computer can help you become more organized, work more efficiently, and accomplish more tasks.</p>\r\n        </div>\r\n      </div>\r\n\r\n      <main className=\"container-fluid custom-container\">\r\n        <div className=\"row g-0\">\r\n          <div className=\"col-md-9\">\r\n            <section className=\"ftco-section\" id=\"skills-section\">\r\n              <div className=\"container custom-container\">\r\n                <div className=\"row justify-content-center pt-3 pb-4\">\r\n                  <div className=\"col-md-8 pt-4\">\r\n                    <h6>\r\n                      SHOWING <span className=\"text-danger\">{currentPage}</span>{\" \"}\r\n                      –{\" \"}\r\n                      <span className=\"text-danger\">\r\n                        {currentPage * itemsPerPage}\r\n                      </span>{\" \"}\r\n                      OF <span className=\"text-danger\">{data.length}</span>{\" \"}\r\n                      RESULTS\r\n                    </h6>\r\n                  </div>\r\n                  <div className=\"col-md-4 pt-3\">\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"search\"\r\n                      onChange={Filter}\r\n                      placeholder=\"Search\"\r\n                      aria-label=\"Search\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row g-1 progress-circle\">\r\n                  {isLoading ? (\r\n                    <Loading />\r\n                  ) : displayedProducts.length > 0 ? (\r\n                    displayedProducts.map((product) => {\r\n                      return (\r\n                        <div className=\"col-lg-3 mb-4\" key={product.id}>\r\n                          <div className=\"mx-1 shadow-lg p-3 bg-body rounded showbutton\">\r\n                            <Link \r\n                              className='text-decoration-none text-dark' \r\n                              to={`/product/${product._id}?fromPage=${currentPage}`}\r\n                            >\r\n                              <div className=\"text-center take\">\r\n                                <LazyLoadImage\r\n                                  src={product.images[0]?.url}\r\n                                  placeholderSrc=\"https://res.cloudinary.com/elonatech/image/upload/v1710241889/loaderImage/blurred_o4delz.avif\"\r\n                                  className=\"lazyload\"\r\n                                  width=\"130\"\r\n                                  height=\"130\"\r\n                                  alt=\"\"\r\n                                />\r\n                              </div>\r\n                              <h5 className=\"fw-normal pt-3 product-name\">\r\n                                {product.name.slice(0, 23)}...\r\n                              </h5>\r\n                              <p className=\"lead fs-6\">{product.category}</p>\r\n                              \r\n                              {/* Star Rating */}\r\n                              <div className=\"stars\" style={{ color: \"black\", marginBottom: '10px' }}>\r\n                                {[...Array(5)].map((star, index) => {\r\n                                  return (\r\n                                    <i\r\n                                      key={index}\r\n                                      className={\r\n                                        index < Math.floor(5)\r\n                                          ? \"bi bi-star-fill\"\r\n                                          : \"bi bi-star\"\r\n                                      }\r\n                                      style={{ color: \"#f4be1d\" }}\r\n                                    ></i>\r\n                                  );\r\n                                })}\r\n                              </div>\r\n                              \r\n                              <div className=\"d-flex justify-content-between\">\r\n                                <p className='mt-2 px-1 text-danger'>\r\n                                  <strong>₦ {Number(product.price).toLocaleString()}.00</strong>\r\n                                </p>\r\n                                <i className=\"bi bi-cart p-1\" style={{ fontSize: \"20px\", cursor: \"pointer\" }}></i>\r\n                              </div>\r\n                            </Link>\r\n                            <div className=\"d-grid gap-2\" key={product.id}>\r\n                              <div className=\"btn btn-outline add-to-cart\" onClick={() => addItem(product)}>\r\n                                <h6 className='text-danger'>ADD TO CART</h6>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <h4>No products match your search criteria.</h4>\r\n                  )}\r\n                </div>\r\n                \r\n                <div className=\"mt-5\">\r\n                  <Pagination\r\n                    totalPosts={records.length}\r\n                    itemsPerPage={itemsPerPage}\r\n                    maxPageNumberLimit={maxPageNumberLimit}\r\n                    minPageNumberLimit={minPageNumberLimit}\r\n                    currentPage={currentPage}\r\n                    id\r\n                    handleNextbtn={handleNextbtn}\r\n                    handlePrevbtn={handlePrevbtn}\r\n                    paginate={paginate}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <div\r\n              className=\"position-sticky\"\r\n              style={{ top: \"2rem\", marginTop: \"20px\" }}\r\n            >\r\n              <div\r\n                style={{\r\n                  marginTop: \"50px\",\r\n                  paddingTop: \"30px\",\r\n                  paddingBottom: \"30px\",\r\n                  marginLeft: \"5px\"\r\n                }}\r\n              >\r\n                <form\r\n                  style={{\r\n                    paddingTop: \"20px\",\r\n                    paddingBottom: \"20px\"\r\n                  }}\r\n                  className=\"d-flex\"\r\n                ></form>\r\n                <h4\r\n                  style={{ marginTop: \"-8px\", marginBottom: \"16px\" }}\r\n                  className=\"fw-bold\"\r\n                >\r\n                  Browse Categories\r\n                </h4>\r\n                <ul className=\"list-unstyled\">\r\n                  <li>\r\n                    <Link\r\n                      to={\"/shop\"}\r\n                      className=\"text-dark\"\r\n                      style={{ textDecoration: \"none\" }}\r\n                      onMouseEnter={(e) =>\r\n                        (e.currentTarget.style.textDecoration = \"underline\")\r\n                      }\r\n                      onMouseLeave={(e) =>\r\n                        (e.currentTarget.style.textDecoration = \"none\")\r\n                      }\r\n                    >\r\n                      All Products\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      to={\"/computers\"}\r\n                      className={`item ${activeItem === \"Item 2\" ? \"active-category\" : \"\"}`}\r\n                      onClick={() => handleClick(\"Item 2\")}\r\n                    >\r\n                      Computers\r\n                    </Link>\r\n                  </li>\r\n\r\n                  <li>\r\n                    <Link\r\n                      to={\"/office-equipment\"}\r\n                      className=\"text-dark\"\r\n                      style={{ textDecoration: \"none\" }}\r\n                      onMouseEnter={(e) =>\r\n                        (e.currentTarget.style.textDecoration = \"underline\")\r\n                      }\r\n                      onMouseLeave={(e) =>\r\n                        (e.currentTarget.style.textDecoration = \"none\")\r\n                      }\r\n                    >\r\n                      Office Equipment\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      to={\"/pos-system\"}\r\n                      className=\"text-dark\"\r\n                      style={{ textDecoration: \"none\" }}\r\n                      onMouseEnter={(e) =>\r\n                        (e.currentTarget.style.textDecoration = \"underline\")\r\n                      }\r\n                      onMouseLeave={(e) =>\r\n                        (e.currentTarget.style.textDecoration = \"none\")\r\n                      }\r\n                    >\r\n                      POS System\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      to={\"/printers\"}\r\n                      className=\"text-dark\"\r\n                      style={{ textDecoration: \"none\" }}\r\n                      onMouseEnter={(e) =>\r\n                        (e.currentTarget.style.textDecoration = \"underline\")\r\n                      }\r\n                      onMouseLeave={(e) =>\r\n                        (e.currentTarget.style.textDecoration = \"none\")\r\n                      }\r\n                    >\r\n                      Printers\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      to={\"/network-devices\"}\r\n                      className=\"text-dark\"\r\n                      style={{ textDecoration: \"none\" }}\r\n                      onMouseEnter={(e) =>\r\n                        (e.currentTarget.style.textDecoration = \"underline\")\r\n                      }\r\n                      onMouseLeave={(e) =>\r\n                        (e.currentTarget.style.textDecoration = \"none\")\r\n                      }\r\n                    >\r\n                      Network Devices\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div\r\n                style={{ margin: \"1px\", width: \"60%\" }}\r\n                className=\"filter-section p-2 rounded shadow-sm\"\r\n              >\r\n                <h4\r\n                  style={{ marginTop: \"-8px\", marginBottom: \"16px\" }}\r\n                  className=\"fw-bold\"\r\n                >\r\n                  Sort Computers by\r\n                </h4>\r\n                <ComputerFilter setFilteredProducts={setFilteredProducts} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default trackWindowScroll(Computer);"],"names":["_ref","totalPosts","itemsPerPage","maxPageNumberLimit","minPageNumberLimit","currentPage","paginate","handleNextbtn","handlePrevbtn","searchParams","setSearchParams","useSearchParams","pages","i","Math","ceil","push","productTop","window","scrollTo","top","left","behavior","renderPageNumbers","map","number","_jsx","className","concat","children","onClick","page","toString","handlePageClick","pageIncrementBtn","length","pageDecrementBtn","_Fragment","_jsxs","handlePrevClick","handleNextClick","setFilteredProducts","filters","setFilters","useState","ram","brand","drive","price","noResultsMessage","setNoResultsMessage","priceRange","setPriceRange","defaultPriceRange","setDefaultPriceRange","brands","setBrands","rams","setRams","drives","setDrives","allProducts","setAllProducts","showNoResultsDialog","setShowNoResultsDialog","activeFilters","setActiveFilters","normalizeRam","ramString","match","toUpperCase","trim","normalizeDrive","driveString","includes","matchSSD","matchHDD","parseInt","capacityGB","type","useEffect","fetch","BASEURL","then","response","json","data","undefined","minPrice","maxPrice","fetchedMinPrice","fetchedMaxPrice","prevFilters","uniqueBrands","Array","from","Set","product","sort","a","b","localeCompare","sensitivity","uniqueRams","filter","computerProperty","uniqueDrives","aMatch","bMatch","catch","error","console","applyFilters","currentFilters","filteredResults","_product$computerProp","_product$computerProp2","_product$computerProp3","_product$computerProp4","currentActiveFilters","active","formatPrice","getActiveFilters","handleCheckboxChange","event","name","value","checked","target","updatedFilters","toLocaleString","handleInputPriceChange","index","replace","newPrice","parseFloat","handleCloseDialog","Dialog","open","onClose","DialogTitle","id","DialogContent","style","marginBottom","paddingLeft","DialogActions","padding","Button","resetFilters","variant","color","href","onChange","Slider","handlePriceChange","newValue","min","max","step","width","borderRadius","e","handleApplyClick","resetPriceRange","trackWindowScroll","Computer","setData","records","setRecords","isLoading","setIsLoading","setCurrentPage","pageNumberLimit","setpageNumberLimit","setmaxPageNumberLimit","setminPageNumberLimit","filteredProducts","activeItem","setActiveItem","async","filtered","axios","get","getAllProducts","user","category","reverse","fetchData","indexOfLastItem","indexOfFirstItem","currentPosts","slice","displayedProducts","addItem","useCart","Helmet","content","rel","class","searchTerm","toLowerCase","placeholder","Loading","_product$images$","Link","to","_id","LazyLoadImage","src","images","url","placeholderSrc","height","alt","star","floor","Number","fontSize","cursor","Pagination","nextPage","prevPage","pageNumber","marginTop","paddingTop","paddingBottom","marginLeft","textDecoration","onMouseEnter","currentTarget","onMouseLeave","margin","ComputerFilter"],"sourceRoot":""}