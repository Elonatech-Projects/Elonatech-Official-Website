{"version":3,"file":"static/js/390.7726dc93.chunk.js","mappings":"2GAAO,MAAMA,EAAUC,wC,kDCEvB,MASA,EATgBC,KAEZC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACAF,EAAAA,EAAAA,KAAA,OAAKG,MAAM,Y,6DCFf,MAyEA,EAzEmBC,IAAgI,IAA/H,WAAEC,EAAU,aAAEC,EAAY,mBAAEC,EAAkB,mBAAEC,EAAkB,YAAEC,EAAW,SAAEC,EAAQ,cAAEC,EAAa,cAAEC,GAAeR,EAC3I,MAAOS,EAAcC,IAAmBC,EAAAA,EAAAA,MAClCC,EAAQ,GAEd,IAAK,IAAIC,EAAI,EAAGA,GAAKC,KAAKC,KAAKd,EAAaC,GAAeW,IACzDD,EAAMI,KAAKH,GAGb,MAAMI,EAAaA,KACjBC,OAAOC,SAAS,CAACC,IAAK,EAAGC,KAAM,EAAGC,SAAU,UAAU,EASlDC,EAAoBX,EAAMY,KAAKC,GAC/BA,EAAStB,EAAqB,GAAKsB,EAASrB,GAE5CR,EAAAA,EAAAA,KAAA,MAAiB8B,UAAW,cAAarB,IAAgBoB,EAAS,SAAW,IAAK3B,UAChFF,EAAAA,EAAAA,KAAA,KAAG+B,QAASA,IAVKF,KACvBnB,EAASmB,GACTf,EAAgB,CAAEkB,KAAMH,EAAOI,aAC/BZ,GAAY,EAOYa,CAAgBL,GAASC,UAAU,qBAAoB5B,SAAE2B,KADpEA,GAKJ,OAIX,IAAIM,EAAmB,KACnBnB,EAAMoB,OAAS7B,IACjB4B,GAAmBnC,EAAAA,EAAAA,KAAA,MAAI8B,UAAU,qBAAqBC,QAASpB,EAAcT,SAAC,cAGhF,IAAImC,EAAmB,KACnB7B,GAAsB,IACxB6B,GAAmBrC,EAAAA,EAAAA,KAAA,MAAI8B,UAAU,qBAAqBC,QAASnB,EAAcV,SAAC,cAmBhF,OACEF,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEoC,EAAAA,EAAAA,MAAA,MAAIR,UAAU,yCAAwC5B,SAAA,EACpDF,EAAAA,EAAAA,KAAA,MAAI8B,UAAW,cAA6B,IAAhBrB,EAAoB,WAAa,IAAKP,UAChEF,EAAAA,EAAAA,KAAA,KAAG8B,UAAU,YAAYC,QApBTQ,KAClB9B,EAAc,IAChBG,IACAE,EAAgB,CAAEkB,MAAOvB,EAAc,GAAGwB,aAC1CZ,IACF,EAewDnB,SAAC,WAEpDmC,EACAV,EACAQ,GACDnC,EAAAA,EAAAA,KAAA,MAAI8B,UAAW,cAAarB,IAAgBO,EAAMoB,OAAS,WAAa,IAAKlC,UAC3EF,EAAAA,EAAAA,KAAA,KAAG8B,UAAU,YAAYC,QAlBTS,KAClB/B,EAAcO,EAAMoB,SACtBzB,IACAG,EAAgB,CAAEkB,MAAOvB,EAAc,GAAGwB,aAC1CZ,IACF,EAawDnB,SAAC,eAGtD,C,6MCjEP,MAsQA,EAtQmBE,IAA8B,IAA7B,oBAAEqC,GAAqBrC,EACzC,MAAOsC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,CACrCC,MAAO,GACPC,MAAO,CAAC,EAAG,QAGNC,EAAQC,IAAaJ,EAAAA,EAAAA,UAAS,KAC9BK,EAAmBC,IAAwBN,EAAAA,EAAAA,UAAS,CAAC,EAAG,OACxDO,EAAYC,IAAiBR,EAAAA,EAAAA,UAAS,CAAC,EAAG,OAEjDS,EAAAA,EAAAA,YAAU,KACRC,EAAAA,EACGC,IAAI,GAAG1D,EAAAA,0BACP2D,MAAKC,IACJ,GAAIA,EAASC,KAAKC,QAAS,CACzB,MAAQZ,OAAQa,EAAa,SAAEC,EAAQ,SAAEC,GAAaL,EAASC,KAGzDK,EAAmBH,EAAchC,KAAIiB,GACzCA,EAAMmB,OAAOC,gBAETC,EAAe,IAAI,IAAIC,IAAIJ,IAEjCf,EAAUkB,GACVhB,EAAqB,CAACW,EAAUC,IAChCV,EAAc,CAACS,EAAUC,GAC3B,KAEDM,OAAMC,IACLC,QAAQD,MAAM,yBAA0BA,EAAM,GAC9C,GACH,IAEH,MAoBME,EAAoBA,CAACC,EAAGC,KAC5B,MAAMC,EAAWF,EAAEG,OAAOC,MAAMC,QAAQ,KAAM,IAG9C,GAAiB,KAAbH,EAAiB,CACnB,MAAMI,EAAoB,IAAI3B,GAG9B,OAFA2B,EAAkBL,GAAS,QAC3BrB,EAAc0B,EAEhB,CAGA,MAAMC,EAAWC,OAAON,GAGxB,IAAKO,MAAMF,GAAW,CACpB,MAAMD,EAAoB,IAAI3B,GAC9B2B,EAAkBL,GAASM,EAC3B3B,EAAc0B,EAChB,GAcII,EAAeC,MAAOpC,EAAQD,KAClC,IACE,MAIMsC,EAAS,CACbvC,MALsBE,EACrBnB,KAAIiB,GAASA,EAAMmB,OAAOC,gBAC1BoB,KAAK,WAGoBC,GAK1BxC,EAAM,KAAOG,EAAkB,IAC/BH,EAAM,KAAOG,EAAkB,KAE/BmC,EAAOvB,SAAWf,EAAM,GACxBsC,EAAOtB,SAAWhB,EAAM,IAG1B,MAAMW,QAAiBH,EAAAA,EAAMC,IAAI,GAAG1D,EAAAA,8BAAqC,CACvEuF,WAGE3B,EAASC,KAAKC,SAChBlB,EAAoBgB,EAASC,KAAKA,KAEtC,CAAE,MAAOW,GACPC,QAAQD,MAAM,4BAA6BA,EAC7C,GAaF,OACE/B,EAAAA,EAAAA,MAAA,OACEiD,MAAO,CAAEC,UAAW,kCACpB1D,UAAU,OAAM5B,SAAA,EAGhBF,EAAAA,EAAAA,KAAA,SAAO8B,UAAU,aAAY5B,SAAC,YAC9BF,EAAAA,EAAAA,KAAA,OAAKuF,MAAO,CAAEE,UAAW,QAASC,UAAW,UAAWxF,SACrD6C,EACE4C,MAAK,CAACC,EAAGC,IAAMD,EAAEE,cAAcD,KAC/BjE,KAAIiB,IACHP,EAAAA,EAAAA,MAAA,OAAiBR,UAAU,YAAW5B,SAAA,EACpCF,EAAAA,EAAAA,KAAA,SACE+F,KAAK,WACLC,GAAInD,EACJoD,KAAK,QACLrB,MAAO/B,EACPqD,QAASxD,EAAQG,MAAMsD,SAAStD,GAChCuD,SAAUA,IArGEjB,WACxB,MAAMkB,EAAgB3D,EAAQG,MAAMsD,SAAStD,GACzCH,EAAQG,MAAMyD,QAAOT,GAAKA,IAAMhD,IAChC,IAAIH,EAAQG,MAAOA,GAEvBF,GAAW4D,IAAW,IAAUA,EAAa1D,MAAOwD,YAC9CnB,EAAamB,EAAe3D,EAAQI,MAAM,EA+FpB0D,CAAkB3D,MAEpC7C,EAAAA,EAAAA,KAAA,SAAOyG,QAAS5D,EAAM3C,SAAE2C,MAThBA,QAehBP,EAAAA,EAAAA,MAAA,OAAKR,UAAU,4BAA2B5B,SAAA,EACxCF,EAAAA,EAAAA,KAAA,MAAI8B,UAAU,UAAS5B,SAAC,6BACxBF,EAAAA,EAAAA,KAAC0G,EAAAA,GAAM,CACL5E,UAAU,SACV8C,MAAOzB,EACPwD,IAAK1D,EAAkB,GACvB2D,IAAK3D,EAAkB,GACvB4D,KAAM,GACNT,SAtCuBU,CAACC,EAAOhC,KACrC3B,EAAc2B,EAAS,EAsCjBiC,UAAQ,EACRC,YAAa,MAGf3E,EAAAA,EAAAA,MAAA,OAAKR,UAAU,qBAAoB5B,SAAA,EACjCF,EAAAA,EAAAA,KAAA,OAAKuF,MAAO,CAAE2B,MAAO,QAAShH,UAC5BF,EAAAA,EAAAA,KAAA,SACEuF,MAAO,CAAE2B,MAAO,OAAQC,aAAc,OACtCpB,KAAK,OACLnB,WACoBU,IAAlBnC,EAAW,GACPA,EAAW,GAAGiE,iBACd,GAENhB,SAAU5B,GAAKD,EAAkBC,EAAG,GACpC1C,UAAU,mBAGd9B,EAAAA,EAAAA,KAAA,QAAM8B,UAAU,YAAW5B,SAAC,OAE5BF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,SACEuF,MAAO,CAAE2B,MAAO,OAAQC,aAAc,OACtCpB,KAAK,OACLnB,WACoBU,IAAlBnC,EAAW,GACPA,EAAW,GAAGiE,iBACd,GAENhB,SAAU5B,GAAKD,EAAkBC,EAAG,GACpC1C,UAAU,sBAIhBQ,EAAAA,EAAAA,MAAA,OAAKR,UAAU,OAAM5B,SAAA,EACnBF,EAAAA,EAAAA,KAAA,UACEuF,MAAO,CAAE2B,MAAO,QAChBnF,QA5HeoD,UACvBxC,GAAW4D,IAAW,IAAUA,EAAazD,MAAOK,YAC9C+B,EAAaxC,EAAQG,MAAOM,EAAW,EA2HrCrB,UAAU,YAAW5B,SACtB,uBAGDF,EAAAA,EAAAA,KAAA,UACEuF,MAAO,CAAE2B,MAAO,QAChBnF,QA9HcsF,KACtBjE,EAAcH,GACdN,GAAW4D,IAAW,IAAUA,EAAazD,MAAOG,MACpDR,EAAoB,GAAG,EA4HfX,UAAU,YAAW5B,SACtB,6BAOLF,EAAAA,EAAAA,KAAA,SAAOsH,KAAG,EAAApH,SAAE,k9BA2CR,ECoYV,GAAeqH,EAAAA,EAAAA,oBAtnBFC,KACX,MAAOC,EAAkBhF,IAAuBG,EAAAA,EAAAA,UAAS,KAClDc,EAAMgE,IAAW9E,EAAAA,EAAAA,UAAS,KAC1B+E,EAASC,IAAchF,EAAAA,EAAAA,UAAS,KAChCiF,EAAWC,IAAgBlF,EAAAA,EAAAA,WAAS,IACpCnC,EAAasH,IAAkBnF,EAAAA,EAAAA,UAAS,IACxCtC,IAAgBsC,EAAAA,EAAAA,UAAS,KACzBoF,EAAiBC,IAAsBrF,EAAAA,EAAAA,UAAS,IAChDrC,EAAoB2H,IAAyBtF,EAAAA,EAAAA,UAAS,IACtDpC,EAAoB2H,IAAyBvF,EAAAA,EAAAA,UAAS,IACtDwF,EAAYC,IAAiBzF,EAAAA,EAAAA,UAAS,WACtC0F,EAAkBC,IAAuB3F,EAAAA,EAAAA,WAAS,IAClD4F,EAAaC,IAAkB7F,EAAAA,EAAAA,WAAS,IACxC/B,EAAcC,IAAmBC,EAAAA,EAAAA,OAUxCsC,EAAAA,EAAAA,YAAU,KACU8B,WAChB2C,GAAa,GACb,IACE,MACMY,SADiBpF,EAAAA,EAAMC,IAAI,GAAG1D,EAAAA,gCACV6D,KAAKA,KAAKiF,UACpCrE,QAAQsE,IAAIF,GAEZhB,EAAQgB,GACRd,EAAWc,GACXZ,GAAa,EACf,CAAE,MAAOzD,GACPC,QAAQD,MAAM,uBAAwBA,GACtCyD,GAAa,EACf,GAEFe,EAAW,GACV,KAEHxF,EAAAA,EAAAA,YAAU,KACR,MAAMrB,EAAO8G,SAASjI,EAAa0C,IAAI,SAAW,IAAK,IACvDwE,EAAe/F,EAAK,GACnB,CAACnB,KAEJwC,EAAAA,EAAAA,YAAU,KACJoE,EAAiBrF,OAAS,GAC5BwF,EAAWH,GACXc,GAAoB,GACpBjE,QAAQsE,IAAInB,IACyB,IAA5BA,EAAiBrF,QAAgBoG,GAC1CZ,EAAW,IACXW,GAAoB,KAGpBX,EAAWlE,GACX6E,GAAoB,GACtB,GACC,CAACd,EAAkBe,EAAa9E,IAEnC,MA8BMqF,EAAkBtI,EAAcH,EAChC0I,EAAmBD,EAAkBzI,EACrC2I,EAAetB,EAAQuB,MAAMF,EAAkBD,GAuB/CI,EACJF,EAAa7G,OAAS,EAAI6G,EAAetB,EAAQuB,MAAM,EAAG5I,IAGtD,QAAE8I,IAAYC,EAAAA,EAAAA,OAGbC,EAAcC,IAAmB3G,EAAAA,EAAAA,WAAS,IAOjDS,EAAAA,EAAAA,YAAU,KACR,IAAImG,EAAgBC,aAAaC,QAAQ,YAczCC,iBAZOH,GACHI,EAAAA,GAAMC,KACJ,mKACA,CACEC,SAAU,aACVC,UAAW,IACXjI,UAAW,mBAbnB2H,aAAaO,QAAQ,YAAY,QACjCT,GAAgB,MAkBS,OAAU,GAClC,IAEH,MAAO7G,EAASC,IAAcC,EAAAA,EAAAA,UAAS,CACrCC,MAAO,GACPC,MAAO,CAAC,EAAG,QAGNC,EAAQC,IAAaJ,EAAAA,EAAAA,UAAS,KAC9BK,EAAmBC,IAAwBN,EAAAA,EAAAA,UAAS,CAAC,EAAG,OACxDO,EAAYC,IAAiBR,EAAAA,EAAAA,UAAS,CAAC,EAAG,OAEjDS,EAAAA,EAAAA,YAAU,KACRC,EAAAA,EACGC,IAAI,GAAG1D,EAAAA,0BACP2D,MAAKC,IACJ,GAAIA,EAASC,KAAKC,QAAS,CACzB,MAAQZ,OAAQa,EAAa,SAAEC,EAAQ,SAAEC,GAAaL,EAASC,KAGzDK,EAAmBH,EAAchC,KAAIiB,GACzCA,EAAMmB,OAAOC,gBAETC,EAAe,IAAI,IAAIC,IAAIJ,IAEjCf,EAAUkB,GACVhB,EAAqB,CAACW,EAAUC,IAChCV,EAAc,CAACS,EAAUC,GAC3B,KAEDM,OAAMC,IACLC,QAAQD,MAAM,yBAA0BA,EAAM,GAC9C,GACH,IAEH,MAiCME,EAAoBA,CAACC,EAAGC,KAC5B,MAAMC,EAAWF,EAAEG,OAAOC,MAAMC,QAAQ,KAAM,IAG9C,GAAiB,KAAbH,EAAiB,CACnB,MAAMI,EAAoB,IAAI3B,GAG9B,OAFA2B,EAAkBL,GAAS,QAC3BrB,EAAc0B,EAEhB,CAGA,MAAMC,EAAWC,OAAON,GAGxB,IAAKO,MAAMF,GAAW,CACpB,MAAMD,EAAoB,IAAI3B,GAC9B2B,EAAkBL,GAASM,EAC3B3B,EAAc0B,EAChB,GAcII,GAAeC,MAAOpC,EAAQD,KAClC,IACE,MAIMsC,EAAS,CACbvC,MALsBE,EACrBnB,KAAIiB,GAASA,EAAMmB,OAAOC,gBAC1BoB,KAAK,WAGoBC,GAK1BxC,EAAM,KAAOG,EAAkB,IAC/BH,EAAM,KAAOG,EAAkB,KAE/BmC,EAAOvB,SAAWf,EAAM,GACxBsC,EAAOtB,SAAWhB,EAAM,IAG1B,MAAMW,QAAiBH,EAAAA,EAAMC,IAAI,GAAG1D,EAAAA,8BAAqC,CACvEuF,WAGE3B,EAASC,KAAKC,SAChBlB,EAAoBgB,EAASC,KAAKA,KAEtC,CAAE,MAAOW,GACPC,QAAQD,MAAM,4BAA6BA,EAC7C,GAOF,OACE/B,EAAAA,EAAAA,MAAArC,EAAAA,SAAA,CAAAC,SAAA,EACEoC,EAAAA,EAAAA,MAAC2H,EAAAA,GAAM,CAAA/J,SAAA,EACLF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,oCACPF,EAAAA,EAAAA,KAAA,QAAMiG,KAAK,SAASiE,QAAQ,kBAC5BlK,EAAAA,EAAAA,KAAA,QACEiG,KAAK,cACLiE,QAAQ,8HAEVlK,EAAAA,EAAAA,KAAA,QAAMmK,IAAI,YAAYC,KAAK,WAC3BpK,EAAAA,EAAAA,KAAA,QACEiG,KAAK,WACLiE,QAAQ,oFAKZlK,EAAAA,EAAAA,KAAA,OAAK8B,UAAU,wCAAuC5B,UACpDoC,EAAAA,EAAAA,MAAA,OAAKR,UAAU,eAAc5B,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,4CACJF,EAAAA,EAAAA,KAAA,KAAG8B,UAAU,OAAM5B,SAAC,kJAOxBF,EAAAA,EAAAA,KAAA,QAAM8B,UAAU,mCAAkC5B,UAChDoC,EAAAA,EAAAA,MAAA,OAAKR,UAAU,UAAS5B,SAAA,EACtBF,EAAAA,EAAAA,KAAA,OAAK8B,UAAU,oBAAmB5B,UAChCF,EAAAA,EAAAA,KAAA,WAAS8B,UAAU,eAAekE,GAAG,iBAAgB9F,UACnDoC,EAAAA,EAAAA,MAAA,OAAKR,UAAU,6BAA4B5B,SAAA,EACzCoC,EAAAA,EAAAA,MAAA,OAAKR,UAAU,uCAAsC5B,SAAA,EACnDF,EAAAA,EAAAA,KAAA,OAAK8B,UAAU,gBAAe5B,UAC5BoC,EAAAA,EAAAA,MAAA,MAAApC,SAAA,CAAI,YACMF,EAAAA,EAAAA,KAAA,QAAM8B,UAAU,cAAa5B,SAAEO,IAAoB,IAAI,SAC7D,KACFT,EAAAA,EAAAA,KAAA,QAAM8B,UAAU,cAAa5B,SAC1BO,EAAcH,IACT,IAAI,OACTN,EAAAA,EAAAA,KAAA,QAAM8B,UAAU,cAAa5B,SAAEwD,EAAKtB,SAAe,IAAI,gBAI9DpC,EAAAA,EAAAA,KAAA,OAAK8B,UAAU,gBAAe5B,UAC5BF,EAAAA,EAAAA,KAAA,SACE8B,UAAU,eACViE,KAAK,SACLK,SA7QLW,IACb,MAAMsD,EAAatD,EAAMpC,OAAOC,MAAM0F,cAEtC,GAAmB,KAAfD,EAEF5H,EAAoB,IACpBgG,GAAe,GACfF,GAAoB,OACf,CACL,MAAMgC,EAAW7G,EAAK4C,QAAOkE,GAC3BA,EAAQvE,KAAKqE,cAAcnE,SAASkE,KAGtC5H,EAAoB8H,GACpB9B,GAAe,GAGS,IAApB8B,EAASnI,OACXmG,GAAoB,GAEpBA,GAAoB,EAExB,GAwPkBkC,YAAY,SACZ,aAAW,iBAMjBzK,EAAAA,EAAAA,KAAA,OAAK8B,UAAU,0BAAyB5B,SACrC2H,GACC7H,EAAAA,EAAAA,KAACD,EAAAA,EAAO,IACNoJ,EAAkB/G,OAAS,EAC7B+G,EAAkBvH,KAAI4I,IAAY,IAADE,EAC/B,OACE1K,EAAAA,EAAAA,KAAA,OAAK8B,UAAU,gBAAe5B,UAC5BoC,EAAAA,EAAAA,MAAA,OAAKR,UAAU,gDAA+C5B,SAAA,EAC5DoC,EAAAA,EAAAA,MAACqI,EAAAA,GAAI,CACH7I,UAAU,iCACV8I,GAAI,YAAYJ,EAAQK,QAAQL,EAAQM,gBAAgBrK,IAAcP,SAAA,EAEtEF,EAAAA,EAAAA,KAAA,OAAK8B,UAAU,mBAAkB5B,UAC/BF,EAAAA,EAAAA,KAAC+K,EAAAA,cAAa,CACZC,IAAsB,QAAnBN,EAAEF,EAAQS,OAAO,UAAE,IAAAP,OAAA,EAAjBA,EAAmBQ,IACxBC,eAAe,gGACfrJ,UAAU,WACVoF,MAAM,MACNkE,OAAO,MACPC,IAAI,QAGR/I,EAAAA,EAAAA,MAAA,MAAIR,UAAU,8BAA6B5B,SAAA,CACxCsK,EAAQvE,KAAKiD,MAAM,EAAG,IAAI,UAG7BlJ,EAAAA,EAAAA,KAAA,KAAG8B,UAAU,YAAW5B,SACA,WAArBsK,EAAQc,SACL,mBACqB,QAArBd,EAAQc,SACR,MACqB,YAArBd,EAAQc,SACR,iBACAd,EAAQc,YAIdtL,EAAAA,EAAAA,KAAA,OACE8B,UAAU,QACVyD,MAAO,CAAEgG,MAAO,QAASC,aAAc,QAAStL,SAE/C,IAAIuL,MAAM,IAAI7J,KAAI,CAAC8J,EAAMjH,KAEtBzE,EAAAA,EAAAA,KAAA,KAEE8B,UACE2C,EAAQvD,KAAKyK,MAAM,GACf,kBACA,aAENpG,MAAO,CAAEgG,MAAO,YANX9G,QAYbnC,EAAAA,EAAAA,MAAA,OAAKR,UAAU,iCAAgC5B,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,KAAG8B,UAAU,wBAAuB5B,UAClCoC,EAAAA,EAAAA,MAAA,UAAApC,SAAA,CAAQ,UACH8E,OAAOwF,EAAQ1H,OAAOsE,iBAAiB,YAI9CpH,EAAAA,EAAAA,KAAA,KACE8B,UAAU,iBACVyD,MAAO,CACLqG,SAAU,OACVC,OAAQ,oBAKhB7L,EAAAA,EAAAA,KAAA,OAAK8B,UAAU,eAAc5B,UAC3BF,EAAAA,EAAAA,KAAA,OACE8B,UAAU,8BACVC,QAASA,IAAMqH,EAAQoB,GAAStK,UAEhCF,EAAAA,EAAAA,KAAA,MAAI8B,UAAU,cAAa5B,SAAC,mBALGsK,EAAQxE,QAlEXwE,EAAQxE,GA2EtC,KAIVhG,EAAAA,EAAAA,KAAA,MAAAE,SAAI,+CAIRF,EAAAA,EAAAA,KAAA,OAAK8B,UAAU,OAAM5B,UACnBF,EAAAA,EAAAA,KAAC8L,EAAAA,EAAU,CACTzL,WAAYsH,EAAQvF,OACpB9B,aAAcA,EACdC,mBAAoBA,EACpBC,mBAAoBA,EACpBC,YAAaA,EACbuF,IAAE,EACFrF,cApVIA,KACpB,MAAMoL,EAAWtL,EAAc,EAC/BsH,EAAegE,GACfjL,EAAgB,CAAEkB,KAAM+J,EAAS9J,aAE7B8J,EAAWxL,IACb2H,EAAsB3H,EAAqByH,GAC3CG,EAAsB3H,EAAqBwH,GAC7C,EA6UgBpH,cA1UIA,KACpB,MAAMoL,EAAWvL,EAAc,EAC/BsH,EAAeiE,GACflL,EAAgB,CAAEkB,KAAMgK,EAAS/J,cAE5B+J,EAAW,GAAKhE,GAAmB,IACtCE,EAAsB3H,EAAqByH,GAC3CG,EAAsB3H,EAAqBwH,GAC7C,EAmUgBtH,SA/VDuL,IACflE,EAAekE,GACfnL,EAAgB,CAAEkB,KAAMiK,EAAWhK,YAAa,cAoW1CK,EAAAA,EAAAA,MAAA,OAAKnC,MAAM,wBAAuBD,SAAA,EAOhCoC,EAAAA,EAAAA,MAAA,OAAKR,UAAU,OAAM5B,SAAA,EACnBoC,EAAAA,EAAAA,MAAA,OAAKR,UAAU,SAAQ5B,SAAA,EACrBF,EAAAA,EAAAA,KAAA,QAAMG,MAAM,YACZH,EAAAA,EAAAA,KAAA,MAAIG,MAAM,cAAaD,SAAC,uBACxBoC,EAAAA,EAAAA,MAAA,MAAIR,UAAU,gBAAe5B,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAC2K,EAAAA,GAAI,CACHC,GAAI,QACJ9I,UAAW,SACM,WAAfsG,EAA0B,kBAAoB,IAEhDrG,QAASA,KA/b3BsG,EA+b6C,SAAU,EAAAnI,SACtC,oBAKHF,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAC2K,EAAAA,GAAI,CACHC,GAAI,aACJ9I,UAAU,YACVyD,MAAO,CAAE2G,eAAgB,QACzBC,aAAc3H,GACXA,EAAE4H,cAAc7G,MAAM2G,eAAiB,YAE1CG,aAAc7H,GACXA,EAAE4H,cAAc7G,MAAM2G,eAAiB,OACzChM,SACF,iBAIHF,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAC2K,EAAAA,GAAI,CACHC,GAAI,oBACJ9I,UAAU,YACVyD,MAAO,CAAE2G,eAAgB,QACzBC,aAAc3H,GACXA,EAAE4H,cAAc7G,MAAM2G,eAAiB,YAE1CG,aAAc7H,GACXA,EAAE4H,cAAc7G,MAAM2G,eAAiB,OACzChM,SACF,wBAIHF,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAC2K,EAAAA,GAAI,CACHC,GAAI,cACJ9I,UAAU,YACVyD,MAAO,CAAE2G,eAAgB,QACzBC,aAAc3H,GACXA,EAAE4H,cAAc7G,MAAM2G,eAAiB,YAE1CG,aAAc7H,GACXA,EAAE4H,cAAc7G,MAAM2G,eAAiB,OACzChM,SACF,kBAIHF,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAC2K,EAAAA,GAAI,CACHC,GAAI,YACJ9I,UAAU,YACVyD,MAAO,CAAE2G,eAAgB,QACzBC,aAAc3H,GACXA,EAAE4H,cAAc7G,MAAM2G,eAAiB,YAE1CG,aAAc7H,GACXA,EAAE4H,cAAc7G,MAAM2G,eAAiB,OACzChM,SACF,gBAIHF,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAC2K,EAAAA,GAAI,CACHC,GAAI,mBACJ9I,UAAU,YACVyD,MAAO,CAAE2G,eAAgB,QACzBC,aAAc3H,GACXA,EAAE4H,cAAc7G,MAAM2G,eAAiB,YAE1CG,aAAc7H,GACXA,EAAE4H,cAAc7G,MAAM2G,eAAiB,OACzChM,SACF,6BAMPoC,EAAAA,EAAAA,MAAA,OACER,UAAU,6BACVyD,MAAO,CAAE+G,UAAW,KAAMpM,SAAA,EAE1BF,EAAAA,EAAAA,KAAA,MAAIuF,MAAO,CAAEqG,SAAU,QAAU9J,UAAU,UAAS5B,SAAC,6BAGrDF,EAAAA,EAAAA,KAAC0G,EAAAA,GAAM,CACL5E,UAAU,SACV8C,MAAOzB,EACPwD,IAAK1D,EAAkB,GACvB2D,IAAK3D,EAAkB,GACvB4D,KAAM,GACNT,SAzReU,CAACC,EAAOhC,KACrC3B,EAAc2B,EAAS,EAyRTiC,UAAQ,EACRC,YAAa,MAGf3E,EAAAA,EAAAA,MAAA,OAAKR,UAAU,qBAAoB5B,SAAA,EACjCF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,SACEuF,MAAO,CAAE2B,MAAO,OAAQC,aAAc,OACtCpB,KAAK,OACLnB,WACoBU,IAAlBnC,EAAW,GACPA,EAAW,GAAGiE,iBACd,GAENhB,SAAU5B,GAAKD,EAAkBC,EAAG,GACpC1C,UAAU,mBAGd9B,EAAAA,EAAAA,KAAA,QAAM8B,UAAU,YAAW5B,SAAC,OAC5BF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,SACEuF,MAAO,CAAE2B,MAAO,OAAQC,aAAc,OACtCpB,KAAK,OACLnB,WACoBU,IAAlBnC,EAAW,GACPA,EAAW,GAAGiE,iBACd,GAENhB,SAAU5B,GAAKD,EAAkBC,EAAG,GACpC1C,UAAU,sBAIhBQ,EAAAA,EAAAA,MAAA,OAAKR,UAAU,OAAM5B,SAAA,EACnBF,EAAAA,EAAAA,KAAA,UACEuF,MAAO,CAAE2B,MAAO,QAChBnF,QAxWOoD,UACvBxC,GAAW4D,IAAW,IAAUA,EAAazD,MAAOK,YAC9C+B,GAAaxC,EAAQG,MAAOM,EAAW,EAuW7BrB,UAAU,YAAW5B,SACtB,uBAGDF,EAAAA,EAAAA,KAAA,UACEuF,MAAO,CAAE2B,MAAO,QAChBnF,QA1WMsF,KACtBjE,EAAcH,GACdN,GAAW4D,IAAW,IAAUA,EAAazD,MAAOG,MACpDR,EAAoB,GAAG,EAwWPX,UAAU,YAAW5B,SACtB,gCAMPoC,EAAAA,EAAAA,MAAA,OACEiD,MAAO,CACL2B,MAAO,MACPqF,QAAS1E,EAAY,OAAS,SAEhC/F,UAAU,wCAAuC5B,SAAA,EAEjDF,EAAAA,EAAAA,KAAA,MAAIuF,MAAO,CAAE+G,UAAW,QAAUnM,MAAM,iBAAgBD,SAAC,sBAGzDF,EAAAA,EAAAA,KAACwM,EAAU,CAAC/J,oBAAqBA,iBAKxC,G","sources":["BaseURL/BaseURL.js","components/Loading/Loading.jsx","components/Pagination/Pagination.jsx","pages/sales/shop/shopFilter.jsx","pages/sales/shop/shop.jsx"],"sourcesContent":["export const BASEURL = process.env.REACT_APP_BASEURL\r\n\r\n","import './Loading.css'\r\n\r\nconst Loading = () => {\r\n    return (\r\n    <>\r\n    <div class=\"loader\"></div>\r\n    \r\n    </>\r\n    );\r\n}\r\n\r\nexport default Loading;\r\n\r\n\r\n\r\n","import { Link, useSearchParams } from \"react-router-dom\";\r\nimport './pagination.css';\r\n\r\nconst Pagination = ({ totalPosts, itemsPerPage, maxPageNumberLimit, minPageNumberLimit, currentPage, paginate, handleNextbtn, handlePrevbtn }) => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const pages = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / itemsPerPage); i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  const productTop = () => {\r\n    window.scrollTo({top: 0, left: 0, behavior: \"smooth\"})\r\n  }\r\n\r\n  const handlePageClick = (number) => {\r\n    paginate(number);\r\n    setSearchParams({ page: number.toString() });\r\n    productTop();\r\n  }\r\n\r\n  const renderPageNumbers = pages.map((number) => {\r\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n      return (\r\n        <li key={number} className={`page-item ${currentPage === number ? \"active\" : \"\"}`}>\r\n          <a onClick={() => handlePageClick(number)} className=\"page-link v-cursor\">{number}</a>  \r\n        </li>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  let pageIncrementBtn = null;\r\n  if (pages.length > maxPageNumberLimit) {\r\n    pageIncrementBtn = <li className=\"page-link v-cursor\" onClick={handleNextbtn}> &hellip; </li>;\r\n  }\r\n\r\n  let pageDecrementBtn = null;\r\n  if (minPageNumberLimit >= 1) {\r\n    pageDecrementBtn = <li className=\"page-link v-cursor\" onClick={handlePrevbtn}> &hellip; </li>;\r\n  }\r\n\r\n  const handlePrevClick = () => {\r\n    if (currentPage > 1) {\r\n      handlePrevbtn();\r\n      setSearchParams({ page: (currentPage - 1).toString() });\r\n      productTop();\r\n    }\r\n  }\r\n\r\n  const handleNextClick = () => {\r\n    if (currentPage < pages.length) {\r\n      handleNextbtn();\r\n      setSearchParams({ page: (currentPage + 1).toString() });\r\n      productTop();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"pagination justify-content-center mb-5\">\r\n        <li className={`page-item ${currentPage === 1 ? \"disabled\" : \"\"}`}>\r\n          <a className=\"page-link\" onClick={handlePrevClick}>Prev</a>\r\n        </li>\r\n        {pageDecrementBtn}\r\n        {renderPageNumbers}\r\n        {pageIncrementBtn}\r\n        <li className={`page-item ${currentPage === pages.length ? \"disabled\" : \"\"}`}>\r\n          <a className=\"page-link\" onClick={handleNextClick}>Next</a>\r\n        </li>\r\n      </ul>     \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Pagination;","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { BASEURL } from '../../../BaseURL/BaseURL'\r\nimport Slider from '@mui/material/Slider'\r\nimport './shopFilter.css'\r\nimport { GoDash } from 'react-icons/go'\r\n\r\nconst ShopFilter = ({ setFilteredProducts }) => {\r\n  const [filters, setFilters] = useState({\r\n    brand: [],\r\n    price: [0, 1000000000]\r\n  })\r\n\r\n  const [brands, setBrands] = useState([])\r\n  const [defaultPriceRange, setDefaultPriceRange] = useState([0, 1000000000])\r\n  const [priceRange, setPriceRange] = useState([0, 1000000000])\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${BASEURL}/api/v1/product/brand`)\r\n      .then(response => {\r\n        if (response.data.success) {\r\n          const { brands: fetchedBrands, minPrice, maxPrice } = response.data\r\n\r\n          // Normalize, remove duplicates, and convert to uppercase\r\n          const normalizedBrands = fetchedBrands.map(brand =>\r\n            brand.trim().toUpperCase()\r\n          )\r\n          const uniqueBrands = [...new Set(normalizedBrands)]\r\n\r\n          setBrands(uniqueBrands)\r\n          setDefaultPriceRange([minPrice, maxPrice])\r\n          setPriceRange([minPrice, maxPrice])\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching brands:', error)\r\n      })\r\n  }, [])\r\n\r\n  const resetBrands = async () => {\r\n    // Clear the selected brands\r\n    setFilters(prevFilters => ({\r\n      ...prevFilters,\r\n      brand: []\r\n    }))\r\n\r\n    // Clear filtered products\r\n    setFilteredProducts([])\r\n  }\r\n\r\n  const handleBrandChange = async brand => {\r\n    const updatedBrands = filters.brand.includes(brand)\r\n      ? filters.brand.filter(b => b !== brand)\r\n      : [...filters.brand, brand]\r\n\r\n    setFilters(prevFilters => ({ ...prevFilters, brand: updatedBrands }))\r\n    await applyFilters(updatedBrands, filters.price)\r\n  }\r\n\r\n  const handleInputChange = (e, index) => {\r\n    const rawValue = e.target.value.replace(/,/g, '') // Remove commas\r\n\r\n    // If the input is empty, set the value to an empty string\r\n    if (rawValue === '') {\r\n      const updatedPriceRange = [...priceRange]\r\n      updatedPriceRange[index] = '' // Or use null if you prefer\r\n      setPriceRange(updatedPriceRange)\r\n      return\r\n    }\r\n\r\n    // Convert to number and handle invalid cases\r\n    const newValue = Number(rawValue)\r\n\r\n    // Only update if it's a valid number\r\n    if (!isNaN(newValue)) {\r\n      const updatedPriceRange = [...priceRange]\r\n      updatedPriceRange[index] = newValue\r\n      setPriceRange(updatedPriceRange)\r\n    }\r\n  }\r\n\r\n  const applyPriceFilter = async () => {\r\n    setFilters(prevFilters => ({ ...prevFilters, price: priceRange }))\r\n    await applyFilters(filters.brand, priceRange)\r\n  }\r\n\r\n  const resetPriceRange = () => {\r\n    setPriceRange(defaultPriceRange)\r\n    setFilters(prevFilters => ({ ...prevFilters, price: defaultPriceRange }))\r\n    setFilteredProducts([])\r\n  }\r\n\r\n  const applyFilters = async (brands, price) => {\r\n    try {\r\n      const formattedBrands = brands\r\n        .map(brand => brand.trim().toUpperCase())\r\n        .join(',')\r\n\r\n      const params = {\r\n        brand: formattedBrands || undefined\r\n      }\r\n\r\n      // If the user has specified a price range, add it to the query\r\n      if (\r\n        price[0] !== defaultPriceRange[0] ||\r\n        price[1] !== defaultPriceRange[1]\r\n      ) {\r\n        params.minPrice = price[0]\r\n        params.maxPrice = price[1]\r\n      }\r\n\r\n      const response = await axios.get(`${BASEURL}/api/v1/product/filter/all`, {\r\n        params\r\n      })\r\n\r\n      if (response.data.success) {\r\n        setFilteredProducts(response.data.data)\r\n      }\r\n    } catch (error) {\r\n      console.error('Error filtering products:', error)\r\n    }\r\n  }\r\n\r\n  const formatPrice = value => {\r\n    return value === '' || value === 0\r\n      ? '0'\r\n      : new Intl.NumberFormat().format(value)\r\n  }\r\n\r\n  const handlePriceRangeChange = (event, newValue) => {\r\n    setPriceRange(newValue)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{ boxShadow: '0px 1px 0px rgba(0, 0, 0, 0.1)' }}\r\n      className='mb-3'\r\n    >\r\n      {/* Filter by Brand */}\r\n      <label className='form-label'>Brand:</label>\r\n      <div style={{ maxHeight: '200px', overflowY: 'scroll' }}>\r\n        {brands\r\n          .sort((a, b) => a.localeCompare(b))\r\n          .map(brand => (\r\n            <div key={brand} className='text-dark'>\r\n              <input\r\n                type='checkbox'\r\n                id={brand}\r\n                name='brand'\r\n                value={brand}\r\n                checked={filters.brand.includes(brand)}\r\n                onChange={() => handleBrandChange(brand)}\r\n              />\r\n              <label htmlFor={brand}>{brand}</label>\r\n            </div>\r\n          ))}\r\n      </div>\r\n\r\n      {/* Filter by Price */}\r\n      <div className='price-filter price-mobile'>\r\n        <h4 className='fw-bold'>Filter by Price(₦)</h4>\r\n        <Slider\r\n          className='slider'\r\n          value={priceRange}\r\n          min={defaultPriceRange[0]}\r\n          max={defaultPriceRange[1]}\r\n          step={50}\r\n          onChange={handlePriceRangeChange}\r\n          pearling\r\n          minDistance={10}\r\n        />\r\n\r\n        <div className='price-range-values'>\r\n          <div style={{ width: '100%' }}>\r\n            <input\r\n              style={{ width: '100%', borderRadius: '5px' }}\r\n              type='text'\r\n              value={\r\n                priceRange[0] !== undefined\r\n                  ? priceRange[0].toLocaleString()\r\n                  : ''\r\n              }\r\n              onChange={e => handleInputChange(e, 0)}\r\n              className='price-input'\r\n            />\r\n          </div>\r\n          <span className='separator'>-</span>\r\n          {/* <GoDash className='dash' /> */}\r\n          <div>\r\n            <input\r\n              style={{ width: '100%', borderRadius: '5px' }}\r\n              type='text'\r\n              value={\r\n                priceRange[1] !== undefined\r\n                  ? priceRange[1].toLocaleString()\r\n                  : ''\r\n              }\r\n              onChange={e => handleInputChange(e, 1)}\r\n              className='price-input'\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='btnd'>\r\n          <button\r\n            style={{ width: '100%' }}\r\n            onClick={applyPriceFilter}\r\n            className='apply-btn'\r\n          >\r\n            Apply Price Range\r\n          </button>\r\n          <button\r\n            style={{ width: '100%' }}\r\n            onClick={resetPriceRange}\r\n            className='reset-btn'\r\n          >\r\n            Reset Price Range\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Add custom CSS for better visuals */}\r\n      <style jsx>{`\r\n        .shop-filter {\r\n          margin-bottom: 1rem;\r\n        }\r\n        .price-filter {\r\n          margin-top: 1rem;\r\n        }\r\n        .slider {\r\n          margin: 10px 0;\r\n        }\r\n        .price-range-values {\r\n          display: flex;\r\n          justify-content: space-between;\r\n        }\r\n        .apply-btn,\r\n        .reset-btn {\r\n          margin: 5px;\r\n          padding: 5px 10px;\r\n          cursor: pointer;\r\n          border: none;\r\n          border-radius: 5px;\r\n        }\r\n        .apply-btn {\r\n          background-color: rgb(52, 84, 140);\r\n          color: white;\r\n        }\r\n        .reset-btn {\r\n          background-color: rgb(220, 53, 69);\r\n          color: white;\r\n        }\r\n        .no-products-message {\r\n          color: red;\r\n          font-size: 18px;\r\n          margin-top: 20px;\r\n        }\r\n\r\n        .btnd {\r\n          width: 100%;\r\n          max-width: 100%;\r\n          padding: 0;\r\n          margin: 5px 0 0 -8px;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShopFilter\r\n","import { useState, useEffect } from 'react'\r\nimport { Link, useSearchParams } from 'react-router-dom'\r\n// import ShopPagination from './shopPagination/shopPagination'\r\nimport Pagination from './../../../components/Pagination/Pagination'\r\nimport './shop.css'\r\nimport { BASEURL } from '../../../BaseURL/BaseURL'\r\nimport Loading from '../../../components/Loading/Loading'\r\nimport axios from 'axios'\r\nimport {\r\n  LazyLoadImage,\r\n  trackWindowScroll\r\n} from 'react-lazy-load-image-component'\r\nimport { useCart } from 'react-use-cart'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { Helmet } from 'react-helmet-async'\r\nimport 'rc-slider/assets/index.css'\r\nimport ShopFilter from './shopFilter'\r\n// import Slider from '@mui/material/Slider'\r\n// import { GoDash } from 'react-icons/go'\r\nimport { startTransition } from 'react'\r\nimport Slider from '@mui/material/Slider'\r\n\r\nconst Shop = () => {\r\n  const [filteredProducts, setFilteredProducts] = useState([])\r\n  const [data, setData] = useState([])\r\n  const [records, setRecords] = useState([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [itemsPerPage] = useState(12)\r\n  const [pageNumberLimit, setpageNumberLimit] = useState(4)\r\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(4)\r\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0)\r\n  const [activeItem, setActiveItem] = useState('Item 1')\r\n  const [noResultsMessage, setNoResultsMessage] = useState(false)\r\n  const [isFiltering, setIsFiltering] = useState(false)\r\n  const [searchParams, setSearchParams] = useSearchParams()\r\n\r\n  const handleClick = item => {\r\n    setActiveItem(item)\r\n  }\r\n\r\n  const formatPrice = price => {\r\n    return price.toLocaleString()\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true)\r\n      try {\r\n        const response = await axios.get(`${BASEURL}/api/v1/product/filter/all`)\r\n        const products = response.data.data.reverse()\r\n        console.log(products)\r\n        // Initially set all fetched products to both `data` and `records`\r\n        setData(products)\r\n        setRecords(products) // Show all products initially\r\n        setIsLoading(false)\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error)\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const page = parseInt(searchParams.get('page') || '1', 10)\r\n    setCurrentPage(page)\r\n  }, [searchParams])\r\n\r\n  useEffect(() => {\r\n    if (filteredProducts.length > 0) {\r\n      setRecords(filteredProducts) // Show filtered products\r\n      setNoResultsMessage(false) // Don't show \"No Results\" message\r\n      console.log(filteredProducts)\r\n    } else if (filteredProducts.length === 0 && isFiltering) {\r\n      setRecords([]) // Empty records if no products match the filter\r\n      setNoResultsMessage(true) // Show the \"No Results\" message\r\n    } else {\r\n      // If not filtering or no search term, show all products\r\n      setRecords(data)\r\n      setNoResultsMessage(false)\r\n    }\r\n  }, [filteredProducts, isFiltering, data])\r\n\r\n  const Filter = event => {\r\n    const searchTerm = event.target.value.toLowerCase()\r\n\r\n    if (searchTerm === '') {\r\n      // If the search input is cleared, show all products again\r\n      setFilteredProducts([])\r\n      setIsFiltering(false) // No filter applied\r\n      setNoResultsMessage(false)\r\n    } else {\r\n      const filtered = data.filter(product =>\r\n        product.name.toLowerCase().includes(searchTerm)\r\n      )\r\n\r\n      setFilteredProducts(filtered) // Set filtered products based on search term\r\n      setIsFiltering(true) // Filtering is now applied\r\n\r\n      // Trigger \"No Results\" message only if no matches are found\r\n      if (filtered.length === 0) {\r\n        setNoResultsMessage(true)\r\n      } else {\r\n        setNoResultsMessage(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const paginate = pageNumber => {\r\n    setCurrentPage(pageNumber)\r\n    setSearchParams({ page: pageNumber.toString() })\r\n  }\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage\r\n  const currentPosts = records.slice(indexOfFirstItem, indexOfLastItem)\r\n\r\n  const handleNextbtn = () => {\r\n    const nextPage = currentPage + 1\r\n    setCurrentPage(nextPage)\r\n    setSearchParams({ page: nextPage.toString() })\r\n\r\n    if (nextPage > maxPageNumberLimit) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit)\r\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit)\r\n    }\r\n  }\r\n\r\n  const handlePrevbtn = () => {\r\n    const prevPage = currentPage - 1\r\n    setCurrentPage(prevPage)\r\n    setSearchParams({ page: prevPage.toString() })\r\n\r\n    if ((prevPage - 1) % pageNumberLimit == 0) {\r\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit)\r\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit)\r\n    }\r\n  }\r\n  const displayedProducts =\r\n    currentPosts.length > 0 ? currentPosts : records.slice(0, itemsPerPage)\r\n\r\n  // Add to cart\r\n  const { addItem } = useCart()\r\n\r\n  // Pop up message\r\n  const [displayPopUp, setDisplayPopUp] = useState(true)\r\n\r\n  const closePopUp = () => {\r\n    localStorage.setItem('ToastPop', true)\r\n    setDisplayPopUp(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    let returningUser = localStorage.getItem('ToastPop')\r\n    function showPopUp () {\r\n      if (!returningUser) {\r\n        toast.warn(\r\n          'Please Note That Prices Are Subject to Change Without Prior Notice Due to The Fluctuation in Exchange Rate, Kindly Confirm Every Price at Readiness for Purchase',\r\n          {\r\n            position: 'top-center',\r\n            autoClose: 20000,\r\n            className: 'pop-up-message'\r\n          },\r\n          closePopUp()\r\n        )\r\n      }\r\n    }\r\n    setInterval(showPopUp(), 604800000)\r\n  }, [])\r\n\r\n  const [filters, setFilters] = useState({\r\n    brand: [],\r\n    price: [0, 1000000000]\r\n  })\r\n\r\n  const [brands, setBrands] = useState([])\r\n  const [defaultPriceRange, setDefaultPriceRange] = useState([0, 1000000000])\r\n  const [priceRange, setPriceRange] = useState([0, 1000000000])\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${BASEURL}/api/v1/product/brand`)\r\n      .then(response => {\r\n        if (response.data.success) {\r\n          const { brands: fetchedBrands, minPrice, maxPrice } = response.data\r\n\r\n          // Normalize, remove duplicates, and convert to uppercase\r\n          const normalizedBrands = fetchedBrands.map(brand =>\r\n            brand.trim().toUpperCase()\r\n          )\r\n          const uniqueBrands = [...new Set(normalizedBrands)]\r\n\r\n          setBrands(uniqueBrands)\r\n          setDefaultPriceRange([minPrice, maxPrice])\r\n          setPriceRange([minPrice, maxPrice])\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching brands:', error)\r\n      })\r\n  }, [])\r\n\r\n  const resetBrands = async () => {\r\n    // Clear the selected brands\r\n    setFilters(prevFilters => ({\r\n      ...prevFilters,\r\n      brand: []\r\n    }))\r\n\r\n    // Clear filtered products\r\n    setFilteredProducts([])\r\n  }\r\n\r\n  const handleBrandChange = async brand => {\r\n    const updatedBrands = filters.brand.includes(brand)\r\n      ? filters.brand.filter(b => b !== brand)\r\n      : [...filters.brand, brand]\r\n\r\n    setFilters(prevFilters => ({ ...prevFilters, brand: updatedBrands }))\r\n\r\n    // Use startTransition to make the applyFilters call less urgent\r\n    startTransition(() => {\r\n      applyFilters(updatedBrands, filters.price)\r\n    })\r\n  }\r\n\r\n  // const handleBrandChange = async brand => {\r\n  //   const updatedBrands = filters.brand.includes(brand)\r\n  //     ? filters.brand.filter(b => b !== brand)\r\n  //     : [...filters.brand, brand]\r\n\r\n  //   setFilters(prevFilters => ({ ...prevFilters, brand: updatedBrands }))\r\n  //   await applyFilters(updatedBrands, filters.price)\r\n  // }\r\n\r\n  const handleInputChange = (e, index) => {\r\n    const rawValue = e.target.value.replace(/,/g, '') // Remove commas\r\n\r\n    // If the input is empty, set the value to an empty string\r\n    if (rawValue === '') {\r\n      const updatedPriceRange = [...priceRange]\r\n      updatedPriceRange[index] = '' // Or use null if you prefer\r\n      setPriceRange(updatedPriceRange)\r\n      return\r\n    }\r\n\r\n    // Convert to number and handle invalid cases\r\n    const newValue = Number(rawValue)\r\n\r\n    // Only update if it's a valid number\r\n    if (!isNaN(newValue)) {\r\n      const updatedPriceRange = [...priceRange]\r\n      updatedPriceRange[index] = newValue\r\n      setPriceRange(updatedPriceRange)\r\n    }\r\n  }\r\n\r\n  const applyPriceFilter = async () => {\r\n    setFilters(prevFilters => ({ ...prevFilters, price: priceRange }))\r\n    await applyFilters(filters.brand, priceRange)\r\n  }\r\n\r\n  const resetPriceRange = () => {\r\n    setPriceRange(defaultPriceRange)\r\n    setFilters(prevFilters => ({ ...prevFilters, price: defaultPriceRange }))\r\n    setFilteredProducts([])\r\n  }\r\n\r\n  const applyFilters = async (brands, price) => {\r\n    try {\r\n      const formattedBrands = brands\r\n        .map(brand => brand.trim().toUpperCase())\r\n        .join(',')\r\n\r\n      const params = {\r\n        brand: formattedBrands || undefined\r\n      }\r\n\r\n      // If the user has specified a price range, add it to the query\r\n      if (\r\n        price[0] !== defaultPriceRange[0] ||\r\n        price[1] !== defaultPriceRange[1]\r\n      ) {\r\n        params.minPrice = price[0]\r\n        params.maxPrice = price[1]\r\n      }\r\n\r\n      const response = await axios.get(`${BASEURL}/api/v1/product/filter/all`, {\r\n        params\r\n      })\r\n\r\n      if (response.data.success) {\r\n        setFilteredProducts(response.data.data)\r\n      }\r\n    } catch (error) {\r\n      console.error('Error filtering products:', error)\r\n    }\r\n  }\r\n\r\n  const handlePriceRangeChange = (event, newValue) => {\r\n    setPriceRange(newValue)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Shop - Tech Solutions, Digital</title>\r\n        <meta name='robots' content='index,follow' />\r\n        <meta\r\n          name='description'\r\n          content='Shop through a wide selection of laptops, printers, office equipment, pos system, network devices products at Elonatech.'\r\n        />\r\n        <link rel='canonical' href='/shop' />\r\n        <meta\r\n          name='keywords'\r\n          content='printers, network devices, laptops, office equipment, pos system, Elonatech'\r\n        />\r\n      </Helmet>\r\n\r\n      {/* Header Section */}\r\n      <div className='container-fluid shop-products-section'>\r\n        <div className='text-content'>\r\n          <h2>Shop Products</h2>\r\n          <h5>Get what you need to run your business</h5>\r\n          <p className='lead'>\r\n            Smart business people need quality and reliable hardware, software,\r\n            service, and support for the day to day running of their businesses\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <main className='container-fluid custom-container'>\r\n        <div className='row g-0'>\r\n          <div className='col-lg-9 col-md-8'>\r\n            <section className='ftco-section' id='skills-section'>\r\n              <div className='container custom-container'>\r\n                <div className='row justify-content-center pt-3 pb-4'>\r\n                  <div className='col-md-8 pt-4'>\r\n                    <h6>\r\n                      SHOWING <span className='text-danger'>{currentPage}</span>{' '}\r\n                      –{' '}\r\n                      <span className='text-danger'>\r\n                        {currentPage * itemsPerPage}\r\n                      </span>{' '}\r\n                      OF <span className='text-danger'>{data.length}</span>{' '}\r\n                      RESULTS\r\n                    </h6>\r\n                  </div>\r\n                  <div className='col-md-4 pt-3'>\r\n                    <input\r\n                      className='form-control'\r\n                      type='search'\r\n                      onChange={Filter}\r\n                      placeholder='Search'\r\n                      aria-label='Search'\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Product Display or No Results */}\r\n                <div className='row g-1 progress-circle'>\r\n                  {isLoading ? ( // Show the loader when isLoading is true\r\n                    <Loading />\r\n                  ) : displayedProducts.length > 0 ? (\r\n                    displayedProducts.map(product => {\r\n                      return (\r\n                        <div className='col-lg-3 mb-4' key={product.id}>\r\n                          <div className='mx-1 shadow-lg p-3 bg-body rounded showbutton'>\r\n                            <Link\r\n                              className='text-decoration-none text-dark'\r\n                              to={`/product/${product.slug}/${product._id}?fromPage=${currentPage}`}\r\n                            >\r\n                              <div className='text-center take'>\r\n                                <LazyLoadImage\r\n                                  src={product.images[0]?.url}\r\n                                  placeholderSrc='https://res.cloudinary.com/elonatech/image/upload/v1710241889/loaderImage/blurred_o4delz.avif'\r\n                                  className='lazyload'\r\n                                  width='130'\r\n                                  height='130'\r\n                                  alt=''\r\n                                />\r\n                              </div>\r\n                              <h5 className='fw-normal pt-3 product-name'>\r\n                                {product.name.slice(0, 23)}...\r\n                              </h5>\r\n                              {/* <p className='lead fs-6'>{product.category}</p> */}\r\n                              <p className='lead fs-6'>\r\n                                {product.category === 'Office'\r\n                                  ? 'Office Equipment'\r\n                                  : product.category === 'Pos'\r\n                                  ? 'POS'\r\n                                  : product.category === 'Network'\r\n                                  ? 'Network Device' // Use 'POS' for the POS category\r\n                                  : product.category}\r\n                              </p>\r\n\r\n                              {/* Star Rating */}\r\n                              <div\r\n                                className='stars'\r\n                                style={{ color: 'black', marginBottom: '10px' }}\r\n                              >\r\n                                {[...Array(5)].map((star, index) => {\r\n                                  return (\r\n                                    <i\r\n                                      key={index}\r\n                                      className={\r\n                                        index < Math.floor(5)\r\n                                          ? 'bi bi-star-fill'\r\n                                          : 'bi bi-star'\r\n                                      }\r\n                                      style={{ color: '#f4be1d' }}\r\n                                    ></i>\r\n                                  )\r\n                                })}\r\n                              </div>\r\n\r\n                              <div className='d-flex justify-content-between'>\r\n                                <p className='mt-2 px-1 text-danger'>\r\n                                  <strong>\r\n                                    ₦ {Number(product.price).toLocaleString()}\r\n                                    .00\r\n                                  </strong>\r\n                                </p>\r\n                                <i\r\n                                  className='bi bi-cart p-1'\r\n                                  style={{\r\n                                    fontSize: '20px',\r\n                                    cursor: 'pointer'\r\n                                  }}\r\n                                ></i>\r\n                              </div>\r\n                            </Link>\r\n                            <div className='d-grid gap-2' key={product.id}>\r\n                              <div\r\n                                className='btn btn-outline add-to-cart'\r\n                                onClick={() => addItem(product)}\r\n                              >\r\n                                <h6 className='text-danger'>ADD TO CART</h6>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    })\r\n                  ) : (\r\n                    <h4>No products match your search criteria.</h4>\r\n                  )}\r\n                </div>\r\n                {/*============================================== Pagination ================================================*/}\r\n                <div className='mt-5'>\r\n                  <Pagination\r\n                    totalPosts={records.length}\r\n                    itemsPerPage={itemsPerPage}\r\n                    maxPageNumberLimit={maxPageNumberLimit}\r\n                    minPageNumberLimit={minPageNumberLimit}\r\n                    currentPage={currentPage}\r\n                    id\r\n                    handleNextbtn={handleNextbtn}\r\n                    handlePrevbtn={handlePrevbtn}\r\n                    paginate={paginate}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </div>\r\n\r\n          <div class='col-lg-3 col-md-4 pad'>\r\n            {/* <\r\n              class=\"position-sticky \"\r\n              style={{ top: \"2rem\", marginTop: \"20px\" }}\r\n            > */}\r\n\r\n\r\n            <div className='thix'>\r\n              <div className='browse'>\r\n                <form class='d-flex'></form>\r\n                <h4 class='fw-bold tyu'>Browse Categories</h4>\r\n                <ul className='list-unstyled'>\r\n                  <li>\r\n                    <Link\r\n                      to={'/shop'}\r\n                      className={`item ${\r\n                        activeItem === 'Item 1' ? 'active-category' : ''\r\n                      }`}\r\n                      onClick={() => handleClick('Item 1')}\r\n                    >\r\n                      All Products\r\n                    </Link>\r\n                  </li>\r\n\r\n                  <li>\r\n                    <Link\r\n                      to={'/computers'}\r\n                      className='text-dark'\r\n                      style={{ textDecoration: 'none' }}\r\n                      onMouseEnter={e =>\r\n                        (e.currentTarget.style.textDecoration = 'underline')\r\n                      }\r\n                      onMouseLeave={e =>\r\n                        (e.currentTarget.style.textDecoration = 'none')\r\n                      }\r\n                    >\r\n                      Computers\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      to={'/office-equipment'}\r\n                      className='text-dark'\r\n                      style={{ textDecoration: 'none' }}\r\n                      onMouseEnter={e =>\r\n                        (e.currentTarget.style.textDecoration = 'underline')\r\n                      }\r\n                      onMouseLeave={e =>\r\n                        (e.currentTarget.style.textDecoration = 'none')\r\n                      }\r\n                    >\r\n                      Office Equipment\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      to={'/pos-system'}\r\n                      className='text-dark'\r\n                      style={{ textDecoration: 'none' }}\r\n                      onMouseEnter={e =>\r\n                        (e.currentTarget.style.textDecoration = 'underline')\r\n                      }\r\n                      onMouseLeave={e =>\r\n                        (e.currentTarget.style.textDecoration = 'none')\r\n                      }\r\n                    >\r\n                      POS System\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      to={'/printers'}\r\n                      className='text-dark'\r\n                      style={{ textDecoration: 'none' }}\r\n                      onMouseEnter={e =>\r\n                        (e.currentTarget.style.textDecoration = 'underline')\r\n                      }\r\n                      onMouseLeave={e =>\r\n                        (e.currentTarget.style.textDecoration = 'none')\r\n                      }\r\n                    >\r\n                      Printers\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      to={'/network-devices'}\r\n                      className='text-dark'\r\n                      style={{ textDecoration: 'none' }}\r\n                      onMouseEnter={e =>\r\n                        (e.currentTarget.style.textDecoration = 'underline')\r\n                      }\r\n                      onMouseLeave={e =>\r\n                        (e.currentTarget.style.textDecoration = 'none')\r\n                      }\r\n                    >\r\n                      Network Devices\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div\r\n                className='price-filter price-mobile1'\r\n                style={{ marginTop: '0' }}\r\n              >\r\n                <h4 style={{ fontSize: '16px' }} className='fw-bold'>\r\n                  Filter by Price(₦)\r\n                </h4>\r\n                <Slider\r\n                  className='slider'\r\n                  value={priceRange}\r\n                  min={defaultPriceRange[0]}\r\n                  max={defaultPriceRange[1]}\r\n                  step={50}\r\n                  onChange={handlePriceRangeChange}\r\n                  pearling\r\n                  minDistance={10}\r\n                />\r\n\r\n                <div className='price-range-values'>\r\n                  <div>\r\n                    <input\r\n                      style={{ width: '100%', borderRadius: '5px' }}\r\n                      type='text'\r\n                      value={\r\n                        priceRange[0] !== undefined\r\n                          ? priceRange[0].toLocaleString()\r\n                          : ''\r\n                      }\r\n                      onChange={e => handleInputChange(e, 0)}\r\n                      className='price-input'\r\n                    />\r\n                  </div>\r\n                  <span className='separator'>-</span>\r\n                  <div>\r\n                    <input\r\n                      style={{ width: '100%', borderRadius: '5px' }}\r\n                      type='text'\r\n                      value={\r\n                        priceRange[1] !== undefined\r\n                          ? priceRange[1].toLocaleString()\r\n                          : ''\r\n                      }\r\n                      onChange={e => handleInputChange(e, 1)}\r\n                      className='price-input'\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className='btnd'>\r\n                  <button\r\n                    style={{ width: '100%' }}\r\n                    onClick={applyPriceFilter}\r\n                    className='apply-btn'\r\n                  >\r\n                    Apply Price Range\r\n                  </button>\r\n                  <button\r\n                    style={{ width: '100%' }}\r\n                    onClick={resetPriceRange}\r\n                    className='reset-btn'\r\n                  >\r\n                    Reset Price Range\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: '60%',\r\n                display: isLoading ? 'none' : 'block'\r\n              }}\r\n              className='filter-section pt-2 rounded shadow-sm'\r\n            >\r\n              <h4 style={{ marginTop: '-8px' }} class='fw-bold shopyy'>\r\n                Sort Products by\r\n              </h4>\r\n              <ShopFilter setFilteredProducts={setFilteredProducts} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default trackWindowScroll(Shop)\r\n"],"names":["BASEURL","process","Loading","_jsx","_Fragment","children","class","_ref","totalPosts","itemsPerPage","maxPageNumberLimit","minPageNumberLimit","currentPage","paginate","handleNextbtn","handlePrevbtn","searchParams","setSearchParams","useSearchParams","pages","i","Math","ceil","push","productTop","window","scrollTo","top","left","behavior","renderPageNumbers","map","number","className","onClick","page","toString","handlePageClick","pageIncrementBtn","length","pageDecrementBtn","_jsxs","handlePrevClick","handleNextClick","setFilteredProducts","filters","setFilters","useState","brand","price","brands","setBrands","defaultPriceRange","setDefaultPriceRange","priceRange","setPriceRange","useEffect","axios","get","then","response","data","success","fetchedBrands","minPrice","maxPrice","normalizedBrands","trim","toUpperCase","uniqueBrands","Set","catch","error","console","handleInputChange","e","index","rawValue","target","value","replace","updatedPriceRange","newValue","Number","isNaN","applyFilters","async","params","join","undefined","style","boxShadow","maxHeight","overflowY","sort","a","b","localeCompare","type","id","name","checked","includes","onChange","updatedBrands","filter","prevFilters","handleBrandChange","htmlFor","Slider","min","max","step","handlePriceRangeChange","event","pearling","minDistance","width","borderRadius","toLocaleString","resetPriceRange","jsx","trackWindowScroll","Shop","filteredProducts","setData","records","setRecords","isLoading","setIsLoading","setCurrentPage","pageNumberLimit","setpageNumberLimit","setmaxPageNumberLimit","setminPageNumberLimit","activeItem","setActiveItem","noResultsMessage","setNoResultsMessage","isFiltering","setIsFiltering","products","reverse","log","fetchData","parseInt","indexOfLastItem","indexOfFirstItem","currentPosts","slice","displayedProducts","addItem","useCart","displayPopUp","setDisplayPopUp","returningUser","localStorage","getItem","setInterval","toast","warn","position","autoClose","setItem","Helmet","content","rel","href","searchTerm","toLowerCase","filtered","product","placeholder","_product$images$","Link","to","slug","_id","LazyLoadImage","src","images","url","placeholderSrc","height","alt","category","color","marginBottom","Array","star","floor","fontSize","cursor","Pagination","nextPage","prevPage","pageNumber","textDecoration","onMouseEnter","currentTarget","onMouseLeave","marginTop","display","ShopFilter"],"sourceRoot":""}